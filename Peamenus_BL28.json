{
  "version": "1.16.4", 
  "menus": [
    [
      "Tweak Brush", 
      "Mesh", 
      "ONE", 
      [
        [
          "Grab Brush", 
          "COMMAND", 
          "", 
          "open_menu(\"Grab Brush\")"
        ], 
        [
          "Pme User Command Exec", 
          "COMMAND", 
          "", 
          "bpy.ops.wm.pme_user_command_exec(cmd=\"bpy.ops.object.mode_set(mode='EDIT'); bpy.ops.wm.context_set_value(data_path=\\\"tool_settings.mesh_select_mode\\\", value= \\\"(True, False, False)\\\")\")"
        ]
      ], 
      "STICKY", 
      "sk?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Tweak Brush.Grab", 
      "Mesh", 
      "TWO", 
      [
        [
          "Grab Brush", 
          "COMMAND", 
          "", 
          "open_menu(\"Grab Brush\")"
        ], 
        [
          "Pme User Command Exec", 
          "COMMAND", 
          "", 
          "bpy.ops.wm.pme_user_command_exec(cmd=\"bpy.ops.object.mode_set(mode='EDIT'); bpy.ops.wm.context_set_value(data_path=\\\"tool_settings.mesh_select_mode\\\", value= \\\"(True, False, False)\\\")\")"
        ]
      ], 
      "STICKY", 
      "sk?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Apply Transforms", 
      "Object Mode", 
      "ctrl+A", 
      [
        [
          "Location", 
          "COMMAND", 
          "MAN_TRANS", 
          "bpy.ops.object.transform_apply(location=True, rotation=False, scale=False); bpy.ops.apply.transformlocation()"
        ], 
        [
          "Scale", 
          "COMMAND", 
          "MAN_SCALE", 
          "bpy.ops.object.transform_apply(location=False, rotation=False, scale=True); bpy.ops.apply.transformscale()"
        ], 
        [
          "Rotation", 
          "COMMAND", 
          "MAN_ROT", 
          "bpy.ops.object.transform_apply(location=False, rotation=True, scale=False); bpy.ops.apply.transformrotation()"
        ], 
        [
          "Apply Object Transform", 
          "COMMAND", 
          "FREEZE", 
          "bpy.ops.object.transform_apply(location=True, rotation=True, scale=True); bpy.ops.apply.transformall()"
        ], 
        [
          ""
        ], 
        [
          "Clear All", 
          "COMMAND", 
          "MANIPUL", 
          "bpy.ops.apply.transformall(); bpy.ops.apply.transformall(); bpy.ops.apply.transformall(); bpy.ops.apply.transformall()"
        ], 
        [
          "Apply Transform Left", 
          "MENU", 
          "", 
          "@Apply Transform Left"
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Apply Transform Left", 
      "3D View", 
      "", 
      [
        [
          "row"
        ], 
        [
          "My Button", 
          "COMMAND", 
          "", 
          ""
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=&pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Create", 
      "Mesh, Object Mode", 
      "shift+A", 
      [
        [
          "Align Cube", 
          "MENU", 
          "MESH_CUBE", 
          "Align Cube"
        ], 
        [
          "Align Sphere", 
          "MENU", 
          "MESH_UVSPHERE", 
          "Align Sphere"
        ], 
        [
          "Align Cylinder", 
          "MENU", 
          "MESH_CYLINDER", 
          "Align Cylinder"
        ], 
        [
          "Add Bezier", 
          "COMMAND", 
          "IPO_BEZIER", 
          "bpy.ops.curve.primitive_bezier_curve_add(enter_editmode=False, location=(-1.10863, -3.83955, 0.140313))"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Align Cube", 
      "Window", 
      "", 
      [
        [
          "Snap Cursor to Selected", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_cursor_to_selected()"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.create_orientation(name='PeaPrim', overwrite=True, use=True)"
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.mode_set(mode='OBJECT')"
        ], 
        [
          "Add Cube", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.primitive_cube_add()"
        ], 
        [
          "Move", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.translate(value=(0.0, 0.0, 1.0), orient_type='LOCAL', orient_matrix_type='LOCAL', constraint_axis=[False, False, True], mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1.0, use_proportional_connected=False, use_proportional_projected=False)"
        ], 
        [
          "Set Origin to 3d Cursor", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.origin_set(type='ORIGIN_CURSOR', center='MEDIAN')"
        ], 
        [
          "Pivot To Bottom", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.pivotobottom()"
        ], 
        [
          "Snap Selection to Cursor", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_selected_to_cursor(use_offset=True)"
        ], 
        [
          "Transform to Orientation", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.transform(mode='ALIGN', value=(0.0, 0.0, 0.0, 0.0), mirror=False, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1.0, use_proportional_connected=False, use_proportional_projected=False)"
        ], 
        [
          "Delete Orientation", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.transform.delete_orientation())"
        ], 
        [
          "Select Orientation Local", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.select_orientation(orientation='LOCAL')"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align Sphere", 
      "Window", 
      "", 
      [
        [
          "Snap Cursor to Selected", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_cursor_to_selected()"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.create_orientation(name='PeaPrim', overwrite=True, use=True)"
        ], 
        [
          "Toggle Editmode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.editmode_toggle()"
        ], 
        [
          "Add Wsphere", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.make_wsphere()"
        ], 
        [
          "Smooth = False", 
          "COMMAND", 
          "TEXT", 
          "C.object.data.WSphere.smoothed = False"
        ], 
        [
          "Snap Selection to Cursor", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_selected_to_cursor(use_offset=False)"
        ], 
        [
          "Transform", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.transform.transform(mode='ALIGN', value=(0.0, 0.0, 0.0, 0.0), axis=(0.0, 0.0, 0.0), constraint_axis=[False, False, False], constraint_orientation='PeaPrim', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1.0))"
        ], 
        [
          "Delete Orientation", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.transform.delete_orientation())"
        ], 
        [
          "Transform Orientation = 'LOCAL'", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.space_data.transform_orientation = 'LOCAL'"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align Cylinder", 
      "Window", 
      "", 
      [
        [
          "Snap Cursor to Selected", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_cursor_to_selected()"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.create_orientation(name='PeaPrim', overwrite=True, use=True)"
        ], 
        [
          "Toggle Editmode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.editmode_toggle()"
        ], 
        [
          "Add WTube", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.make_wtube()"
        ], 
        [
          "Perimeter = 8", 
          "COMMAND", 
          "TEXT", 
          "C.object.data.WTube.seg_perimeter = 8"
        ], 
        [
          "Centered = False", 
          "COMMAND", 
          "TEXT", 
          "C.object.data.WTube.centered = False"
        ], 
        [
          "Snap Selection to Cursor", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_selected_to_cursor(use_offset=False)"
        ], 
        [
          "Transform", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.transform.transform(mode='ALIGN', value=(0.0, 0.0, 0.0, 0.0), axis=(0.0, 0.0, 0.0), constraint_axis=[False, False, False], constraint_orientation='PeaPrim', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1.0))"
        ], 
        [
          "Delete Orientation", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.transform.delete_orientation())"
        ], 
        [
          "Transform Orientation = 'LOCAL'", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.space_data.transform_orientation = 'LOCAL'"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Curve: Invert", 
      "Curve", 
      "alt+A", 
      [
        [
          "Invert Selection", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.mesh.select_all(action='INVERT')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Curve: Select Menu", 
      "Curve", 
      "alt+A", 
      [
        [
          "Select Bounded Loop", 
          "COMMAND", 
          "ARROW_LEFTRIGHT", 
          "bpy.ops.mesh.z_select_bounded_loop()"
        ], 
        [
          "Select Bounded Ring", 
          "COMMAND", 
          "COLLAPSEMENU", 
          "bpy.ops.mesh.z_select_bounded_ring()"
        ], 
        [
          "Invert Selection", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.mesh.select_all(action='INVERT')"
        ], 
        [
          "Select Mirror", 
          "COMMAND", 
          "MOD_MIRROR", 
          "bpy.ops.mesh.select_mirror(extend=True)"
        ], 
        [
          "Select Boundary Loop", 
          "COMMAND", 
          "PROP_CON", 
          "bpy.ops.mesh.region_to_loop()"
        ], 
        [
          "Select Loop Inner-Region", 
          "COMMAND", 
          "PROP_ON", 
          "bpy.ops.mesh.loop_to_region()"
        ], 
        [
          "Select Tools", 
          "MENU", 
          "", 
          "@Select Tools"
        ], 
        [
          "Select Tools.001", 
          "MENU", 
          "", 
          "@Select Tools.001"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Select Tools", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Select Side", 
          "CUSTOM", 
          "", 
          "L.label(text=text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?"
        ], 
        [
          "X", 
          "MENU", 
          "", 
          "Select Side: X"
        ], 
        [
          "Y", 
          "MENU", 
          "", 
          "Select Side: Y"
        ], 
        [
          "Z", 
          "MENU", 
          "", 
          "Select Side: Z"
        ], 
        [
          "row"
        ], 
        [
          "Multi Select", 
          "CUSTOM", 
          "", 
          "L.label(text=text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?"
        ], 
        [
          "Loops", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.loop_multi_select(ring=False)"
        ], 
        [
          "Rings", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.loop_multi_select(ring=True)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=&pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Select Side: X", 
      "Window", 
      "", 
      [
        [
          "Select +X", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_axis(axis='X', sign='POS', orientation='LOCAL')"
        ], 
        [
          "Select -X", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_axis(axis='X', sign='NEG', orientation='LOCAL')"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True&s_undo=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Select Side: Y", 
      "Window", 
      "", 
      [
        [
          "Select +Y", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_axis(axis='Y', sign='POS', orientation='LOCAL')"
        ], 
        [
          "Select -Y", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_axis(axis='Y', sign='NEG', orientation='LOCAL')"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True&s_undo=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Select Side: Z", 
      "Window", 
      "", 
      [
        [
          "Select +Z", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_axis(axis='Z', sign='POS', orientation='LOCAL')"
        ], 
        [
          "Select -Z", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_axis(axis='Z', sign='NEG', orientation='LOCAL')"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True&s_undo=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Select Tools.001", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Select:", 
          "CUSTOM", 
          "", 
          "L.label(text=text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Checker Deselect", 
          "COMMAND", 
          "TEXTURE", 
          "bpy.ops.mesh.select_nth()"
        ], 
        [
          "row"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Button 5", 
          "COMMAND", 
          "!", 
          ""
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Select 60\u00b0", 
          "COMMAND", 
          "MESH_CUBE", 
          "bpy.ops.mesh.edges_select_sharp(sharpness=1.0471975803375244)"
        ], 
        [
          "row"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Button 6", 
          "COMMAND", 
          "!", 
          ""
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Select Random", 
          "COMMAND", 
          "SHADERFX", 
          "bpy.ops.mesh.select_random(seed=1)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=False&pd_panel=0&pd_title=False", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Invert", 
      "Mesh", 
      "alt+A", 
      [
        [
          "(De)select All", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.mesh.select_all(action='INVERT')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Select Menu", 
      "Mesh", 
      "A", 
      [
        [
          "Select Bounded Loop", 
          "COMMAND", 
          "ARROW_LEFTRIGHT", 
          "bpy.ops.mesh.z_select_bounded_loop()"
        ], 
        [
          "Select Bounded Ring", 
          "COMMAND", 
          "COLLAPSEMENU", 
          "bpy.ops.mesh.z_select_bounded_ring()"
        ], 
        [
          "Select Tools", 
          "MENU", 
          "", 
          "@Select Tools"
        ], 
        [
          "Select Mirror", 
          "COMMAND", 
          "MOD_MIRROR", 
          "bpy.ops.mesh.select_mirror(extend=True)"
        ], 
        [
          "Select Boundary Loop", 
          "COMMAND", 
          "PROP_CON", 
          "bpy.ops.mesh.region_to_loop()"
        ], 
        [
          "Select Loop Inner-Region", 
          "COMMAND", 
          "PROP_ON", 
          "bpy.ops.mesh.loop_to_region()"
        ], 
        [
          "Select Tools.002", 
          "MENU", 
          "FILE_REFRESH", 
          "@Select Tools.002"
        ], 
        [
          "Select Tools.001", 
          "MENU", 
          "", 
          "@Select Tools.001"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Select Tools.002", 
      "Window", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          " Non Manifold", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_non_manifold()"
        ], 
        [
          "by Sides", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_face_by_sides()"
        ], 
        [
          "Loose Geometry", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_loose()"
        ], 
        [
          "Interior Faces", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_interior_faces()"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          ":Select", 
          "CUSTOM", 
          "", 
          "L.label(text=text, icon=icon, icon_value=icon_value)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=False&pd_panel=0&pd_title=False", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Node: Create", 
      "Node Editor", 
      "shift+A", 
      [
        [
          "Noise", 
          "COMMAND", 
          "", 
          "bpy.ops.node.add_node(type='ShaderNodeTexNoise', use_transform=True)"
        ], 
        [
          "ColourRamp", 
          "COMMAND", 
          "", 
          "bpy.ops.node.add_node(type='ShaderNodeValToRGB', use_transform=True)"
        ], 
        [
          "RGB", 
          "COMMAND", 
          "", 
          "bpy.ops.node.add_node(type='ShaderNodeRGB', use_transform=True)"
        ], 
        [
          "Mix", 
          "COMMAND", 
          "", 
          "bpy.ops.node.add_node(type='ShaderNodeMixRGB', use_transform=True)"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Object: Invert", 
      "Object Mode", 
      "alt+A", 
      [
        [
          "Invert Selection", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.object.select_all(action='INVERT')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object: Select Menu", 
      "Object Mode", 
      "A", 
      [
        [
          "Less", 
          "COMMAND", 
          "REMOVE", 
          "bpy.ops.object.select_less()"
        ], 
        [
          "More", 
          "COMMAND", 
          "ADD", 
          "bpy.ops.object.select_more()"
        ], 
        [
          "Type", 
          "COMMAND", 
          "", 
          "bpy.ops.object.select_grouped(type='TYPE')"
        ], 
        [
          "Mirror", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.object.select_mirror()"
        ], 
        [
          "Child", 
          "COMMAND", 
          "OUTLINER_DATA_ARMATURE", 
          "bpy.ops.object.select_hierarchy(direction='CHILD', extend=False)"
        ], 
        [
          "Parent", 
          "COMMAND", 
          "OUTLINER_OB_ARMATURE", 
          "bpy.ops.object.select_hierarchy(direction='PARENT', extend=False)"
        ], 
        [
          "Pattern", 
          "COMMAND", 
          "TRACKING_FORWARDS", 
          "bpy.ops.object.select_pattern()"
        ], 
        [
          "Random", 
          "COMMAND", 
          "RNDCURVE", 
          "bpy.ops.object.select_random()"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Sculpt: Mask Invert", 
      "Sculpt", 
      "alt+A", 
      [
        [
          "Invert Mask", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.paint.mask_flood_fill(mode='INVERT')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt: Select Menu", 
      "Sculpt", 
      "alt+A", 
      [
        [
          "Shrink Mask", 
          "COMMAND", 
          "REMOVE", 
          "bpy.ops.sculpt.mask_filter(filter_type='SHRINK', auto_iteration_count=True)"
        ], 
        [
          "Grow Mask", 
          "COMMAND", 
          "ADD", 
          "bpy.ops.sculpt.mask_filter(filter_type='GROW', auto_iteration_count=True)"
        ], 
        [
          "Sculpt Select Tools 1", 
          "MENU", 
          "PANEL_CLOSE", 
          "@Sculpt Mask Tools"
        ], 
        [
          ""
        ], 
        [
          "Smooth Mask", 
          "COMMAND", 
          "SPHERECURVE", 
          "bpy.ops.sculpt.mask_filter(filter_type='SMOOTH', auto_iteration_count=True)"
        ], 
        [
          "Sharpen Mask", 
          "COMMAND", 
          "SHARPCURVE", 
          "bpy.ops.sculpt.mask_filter(filter_type='SHARPEN', auto_iteration_count=True)"
        ], 
        [
          "Decrease Contrast", 
          "COMMAND", 
          "PROP_OFF", 
          "bpy.ops.sculpt.mask_filter(filter_type='CONTRAST_DECREASE', auto_iteration_count=False)"
        ], 
        [
          "Increase Contrast", 
          "COMMAND", 
          "PROP_CON", 
          "bpy.ops.sculpt.mask_filter(filter_type='CONTRAST_INCREASE', auto_iteration_count=False)"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Sculpt Mask Tools", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Checker Deselect", 
          "COMMAND", 
          "TEXTURE", 
          "bpy.ops.mesh.select_nth()"
        ], 
        [
          "row"
        ], 
        [
          "Select 60\u00b0", 
          "COMMAND", 
          "MESH_CUBE", 
          "bpy.ops.mesh.edges_select_sharp(sharpness=1.0471975803375244)"
        ], 
        [
          "row"
        ], 
        [
          "Select Random", 
          "COMMAND", 
          "SHADERFX", 
          "bpy.ops.mesh.select_random(seed=1)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=False&pd_panel=0&pd_title=False", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Select", 
      "UV Editor", 
      "alt+A", 
      [
        [
          "Pinned", 
          "COMMAND", 
          "PINNED", 
          "bpy.ops.uv.select_pinned()"
        ], 
        [
          "Split", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.select_split()"
        ], 
        [
          ""
        ], 
        [
          "Similar", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.textools_select_islands_identical()"
        ], 
        [
          "Overlap", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.textools_select_islands_overlap()"
        ], 
        [
          "Flipped", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.textools_select_islands_flipped()"
        ], 
        [
          "Outline", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.textools_select_islands_outline()"
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "UV: Invert", 
      "UV Editor", 
      "alt+A", 
      [
        [
          "Invert", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.uv.select_all(action='INVERT')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Extrude", 
      "Mesh", 
      "alt+E", 
      [
        [
          "Extrude Individual Faces and Move", 
          "COMMAND", 
          "ROTATECOLLECTION", 
          "bpy.ops.mesh.extrude_faces_move(MESH_OT_extrude_faces_indiv={\"mirror\":False}, TRANSFORM_OT_shrink_fatten={\"value\":-0.112049, \"use_even_offset\":False, \"mirror\":False, \"proportional\":'DISABLED', \"proportional_edit_falloff\":'SMOOTH', \"proportional_size\":1, \"snap\":False, \"snap_target\":'CLOSEST', \"snap_point\":(0, 0, 0), \"snap_align\":False, \"snap_normal\":(0, 0, 0), \"release_confirm\":False})"
        ], 
        [
          "Destructive Extrude", 
          "COMMAND", 
          "CANCEL", 
          "bpy.ops.mesh.destructive_extrude()"
        ], 
        [
          "Draw Extrude", 
          "COMMAND", 
          "VPAINT_HLT", 
          "bpy.ops.mira.draw_extrude()"
        ], 
        [
          "Extrude Region and Shrink/Fatten", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.extrude_region_shrink_fatten(MESH_OT_extrude_region={\"mirror\":False}, TRANSFORM_OT_shrink_fatten={\"value\":-0.105162, \"use_even_offset\":False, \"mirror\":False, \"proportional\":'DISABLED', \"proportional_edit_falloff\":'SMOOTH', \"proportional_size\":1, \"snap\":False, \"snap_target\":'CLOSEST', \"snap_point\":(0, 0, 0), \"snap_align\":False, \"snap_normal\":(0, 0, 0), \"release_confirm\":False})"
        ], 
        [
          ""
        ], 
        [
          "Extrude Region and Move", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.extrude_region_move(MESH_OT_extrude_region={\"mirror\":False}, TRANSFORM_OT_translate={\"value\":(6.98492e-010, -3.72529e-009, 0.125912), \"constraint_axis\":(False, False, True), \"constraint_orientation\":'NORMAL', \"mirror\":False, \"proportional\":'DISABLED', \"proportional_edit_falloff\":'SMOOTH', \"proportional_size\":1, \"snap\":False, \"snap_target\":'CLOSEST', \"snap_point\":(0, 0, 0), \"snap_align\":False, \"snap_normal\":(0, 0, 0), \"gpencil_strokes\":False, \"texture_space\":False, \"remove_on_cancel\":False, \"release_confirm\":False})"
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Group Menu", 
      "Mesh", 
      "alt+G", 
      [
        [
          "Remove from Vertex Group", 
          "COMMAND", 
          "ZOOMOUT", 
          "bpy.ops.object.vertex_group_remove_from(use_all_groups=False)"
        ], 
        [
          "Assign to Vertex Group", 
          "COMMAND", 
          "ZOOMIN", 
          "bpy.ops.object.vertex_group_assign()"
        ], 
        [
          "Remove from All", 
          "COMMAND", 
          "PANEL_CLOSE", 
          "bpy.ops.object.vertex_group_remove_from(use_all_groups=True)"
        ], 
        [
          "Vertex Groups Panel", 
          "CUSTOM", 
          "", 
          "panel(T.DATA_PT_vertex_groups, frame=True, header=False)"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          "Assign to New Group", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_assign_new()"
        ], 
        [
          "Set Active Vertex Group", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_set_active()"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object: Group Menu", 
      "Object Mode", 
      "alt+G", 
      [
        [
          "Remove Selected From Active Group", 
          "COMMAND", 
          "ZOOMOUT", 
          "bpy.ops.group.objects_remove_active()"
        ], 
        [
          "Add Selected To Active Group", 
          "COMMAND", 
          "ZOOMIN", 
          "bpy.ops.group.objects_add_active()"
        ], 
        [
          "Remove From All Groups", 
          "COMMAND", 
          "PANEL_CLOSE", 
          "bpy.ops.group.objects_remove_all()"
        ], 
        [
          "Groups panel", 
          "CUSTOM", 
          "", 
          "panel(T.OBJECT_PT_groups, frame=True, header=False)"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          "Create New Group", 
          "COMMAND", 
          "", 
          "bpy.ops.group.create()"
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV: Grab BRM", 
      "3D View", 
      "NUMPAD_ASTERIX+G", 
      [
        [
          "BRM UVTranslate", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.brm_uvtranslate()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "3D: Snap View Ortho", 
      "3D View Generic", 
      "alt+LEFTMOUSE", 
      [
        [
          "Snap View Ortho", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_snap()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Fill Region", 
      "Mesh", 
      "ctrl+shift+alt+LEFTMOUSE", 
      [
        [
          "Fill Region", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.shortest_path_pick(use_fill=True)"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Mesh: Loop Select", 
      "Mesh", 
      "LEFTMOUSE", 
      [
        [
          "Loop Select", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.loop_select(extend=False, deselect=False, toggle=False)"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "Mesh: Loop Select +", 
      "Mesh", 
      "shift+LEFTMOUSE", 
      [
        [
          "Loop Select", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.loop_select(extend=True, deselect=False, toggle=False)"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "Mesh: Loop Select - (Broken)", 
      "Mesh", 
      "ctrl+shift+alt+LEFTMOUSE", 
      [
        [
          "Loop Select", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.loop_select(extend=True, deselect=True, toggle=False)"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Pick Loop/ Shortest Path", 
      "Mesh", 
      "ctrl+LEFTMOUSE", 
      [
        [
          "Loop Select", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.loop_select(extend=False, deselect=False, toggle=False)"
        ], 
        [
          "Pick Shortest Path", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.shortest_path_pick(use_fill=False)"
        ], 
        [
          "Fill Region", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.shortest_path_pick(use_fill=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Pick Loop/ Shortest Path+", 
      "Mesh", 
      "ctrl+shift+LEFTMOUSE", 
      [
        [
          "Loop Select", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.loop_select(extend=True, deselect=False, toggle=False)"
        ], 
        [
          "Pick Shortest Path", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.shortest_path_pick(use_fill=False)"
        ], 
        [
          "Fill Region", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.shortest_path_pick(use_fill=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Select", 
      "Mesh", 
      "LEFTMOUSE", 
      [
        [
          "Select", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.select(deselect_all=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Select +", 
      "Mesh", 
      "shift+LEFTMOUSE", 
      [
        [
          "Select", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.select(deselect_all=True, extend=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Select Drag +(Broken)", 
      "Mesh", 
      "shift+LEFTMOUSE", 
      [
        [
          "Box Select", 
          "COMMAND", 
          "", 
          "tool = C.workspace.tools.from_space_view3d_mode(C.mode); bpy.ops.view3d.select_lasso('INVOKE_DEFAULT', True) if tool and tool.idname == \"builtin.select_lasso\" else bpy.ops.view3d.select_box('INVOKE_DEFAULT', True, wait_for_input=False)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Mesh: Select Linked", 
      "Mesh", 
      "LEFTMOUSE", 
      [
        [
          "(De)select All", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.select_all(action='DESELECT')"
        ], 
        [
          "Select Linked", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.select_linked_pick()"
        ]
      ], 
      "MACRO", 
      "m?", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Mesh: Select Linked +", 
      "Mesh", 
      "shift+LEFTMOUSE", 
      [
        [
          "Select Linked +", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_linked_pick(deselect=False)"
        ], 
        [
          "Select Linked -", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_linked_pick(deselect=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Mesh: Select Linked -", 
      "Mesh", 
      "ctrl+shift+LEFTMOUSE", 
      [
        [
          "Select Linked", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_linked_pick(deselect=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Mesh: Select Sharp Edges", 
      "Mesh", 
      "LEFTMOUSE", 
      [
        [
          "Select Similar", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_similar(type='FACE_ANGLE', threshold=0.01)"
        ], 
        [
          "Select Linked", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_linked_pick(delimit={'SEAM'})"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "DOUBLE_CLICK", 
      "return C.scene.tool_settings.mesh_select_mode[1]", 
      ""
    ], 
    [
      "Object: Select", 
      "Object Mode", 
      "LEFTMOUSE", 
      [
        [
          "Select", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.select(deselect_all=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object: Select Add", 
      "Object Mode", 
      "shift+LEFTMOUSE", 
      [
        [
          "Select Add", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.select(deselect_all=True, extend=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object: Select Add Drag", 
      "Object Mode", 
      "shift+LEFTMOUSE", 
      [
        [
          "Box Select", 
          "COMMAND", 
          "", 
          "tool = C.workspace.tools.from_space_view3d_mode(C.mode); bpy.ops.view3d.select_lasso('INVOKE_DEFAULT', True) if tool and tool.idname == \"builtin.select_lasso\" else bpy.ops.view3d.select_box('INVOKE_DEFAULT', True, wait_for_input=False)"
        ], 
        [
          "Command 1", 
          "COMMAND", 
          "", 
          ""
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Object: Select Drag", 
      "Object Mode", 
      "LEFTMOUSE", 
      [
        [
          "Box Select", 
          "COMMAND", 
          "", 
          "tool = C.workspace.tools.from_space_view3d_mode(C.mode); bpy.ops.view3d.select_lasso('INVOKE_DEFAULT', True) if tool and tool.idname == \"builtin.select_lasso\" else bpy.ops.view3d.select_box('INVOKE_DEFAULT', True, wait_for_input=False)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Object: Select Dropdown", 
      "Object Mode", 
      "LEFTMOUSE", 
      [
        [
          "Activate/Select", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.select(enumerate=True, toggle=False)"
        ]
      ], 
      "MACRO", 
      "m?", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Object: Select Dropdown +", 
      "Object Mode", 
      "shift+LEFTMOUSE", 
      [
        [
          "Add", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.select(enumerate=True, toggle=True, extend=True)"
        ]
      ], 
      "MACRO", 
      "m?", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Object: Select Dropdown -", 
      "Object Mode", 
      "ctrl+LEFTMOUSE", 
      [
        [
          "Deselect", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.select(enumerate=True, toggle=False, extend=False, deselect=True)"
        ]
      ], 
      "MACRO", 
      "m?", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Object: Select Linked", 
      "Object Mode", 
      "LEFTMOUSE", 
      [
        [
          "Select Grouped", 
          "COMMAND", 
          "", 
          "bpy.ops.object.select_grouped(type='COLLECTION')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "Object: Select Linked+", 
      "Object Mode", 
      "shift+LEFTMOUSE", 
      [
        [
          "Select Grouped +", 
          "COMMAND", 
          "", 
          "bpy.ops.object.select_grouped(type='COLLECTION', extend=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "Sculpt: Select Linked (Mask)", 
      "Sculpt", 
      "LEFTMOUSE", 
      [
        [
          "Mask Flood Fill", 
          "COMMAND", 
          "", 
          "bpy.ops.paint.mask_flood_fill(mode='VALUE', value=1.0)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "UV: Loop Select (change to click)", 
      "UV Editor", 
      "ctrl+LEFTMOUSE", 
      [
        [
          "Loop Select", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.select_loop(extend=False, location=(0.732551, 0.502854))"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV: Loop Select + (change to click)", 
      "UV Editor", 
      "ctrl+shift+LEFTMOUSE", 
      [
        [
          "Loop Select Add", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.select_loop(extend=True, location=(0.7325509786605835, 0.5028539896011353))"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV: Select Linked", 
      "UV Editor", 
      "LEFTMOUSE", 
      [
        [
          "Select Linked Pick", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.select_linked_pick(extend=False, deselect=False, location=(0.46985501050949097, 0.6371889710426331))"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "UV: Select Linked +", 
      "UV Editor", 
      "shift+LEFTMOUSE", 
      [
        [
          "Select Linked Pick", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.select_linked_pick(extend=True, deselect=False, location=(0.469855, 0.637189))"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "UV: Select Linked -", 
      "UV Editor", 
      "ctrl+LEFTMOUSE", 
      [
        [
          "Select Linked Pick", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.select_linked_pick(extend=True, deselect=True, location=(0.46985501050949097, 0.6371889710426331))"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "Align Object", 
      "Object Mode", 
      "BUTTON4MOUSE", 
      [
        [
          "Align Active", 
          "MENU", 
          "", 
          "Align Active"
        ], 
        [
          "Align Orientation", 
          "MENU", 
          "", 
          "Align Orientation"
        ], 
        [
          "Align to", 
          "COMMAND", 
          "", 
          "bpy.ops.at.manipulator_align()"
        ], 
        [
          "Snap Align rotation", 
          "COMMAND", 
          "", 
          "bpy.ops.snap.alignrotation()"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align Active", 
      "Window", 
      "", 
      [
        [
          "Snap Selection to Cursor", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_selected_to_cursor(use_offset=False)"
        ], 
        [
          "Transform", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.transform(mode='ALIGN', value=(0.0, 0.0, 0.0, 0.0), axis=(0.0, 0.0, 0.0), constraint_axis=[False, False, False], constraint_orientation='PeaPrim', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1.0)"
        ], 
        [
          "Transform Orientation = 'LOCAL'", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.space_data.transform_orientation = 'LOCAL'"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align Orientation", 
      "Window", 
      "", 
      [
        [
          "Snap Cursor to Selected", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_cursor_to_selected()"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.create_orientation(name='PeaPrim', overwrite=True)"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpting Pie", 
      "Sculpt", 
      "BUTTON4MOUSE", 
      [
        [
          "Dynamic Topology", 
          "COMMAND", 
          "MOD_TRIANGULATE", 
          "bpy.ops.sculpt.dynamic_topology_toggle()"
        ], 
        [
          "Sculpt Curves", 
          "MENU", 
          "", 
          "@@Sculpt East"
        ], 
        [
          "Sculpt South", 
          "MENU", 
          "", 
          "@@Sculpt South"
        ], 
        [
          "Sculpt North", 
          "MENU", 
          "", 
          "@@Sculpt North"
        ], 
        [
          "Sculpt Symmetry", 
          "MENU", 
          "", 
          "@@Sculpt NorthWest"
        ], 
        [
          "Sculpt Stroke Method", 
          "MENU", 
          "", 
          "@@Sculpt Stroke Method"
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?pm_radius=120", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt East", 
      "Sculpt", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Curves:", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#SMOOTHCURVE", 
          "bpy.ops.brush.curve_preset(shape='SMOOTH')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#SPHERECURVE", 
          "bpy.ops.brush.curve_preset(shape='ROUND')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#ROOTCURVE", 
          "bpy.ops.brush.curve_preset(shape='ROOT')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#SHARPCURVE", 
          "bpy.ops.brush.curve_preset(shape='SHARP')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#LINCURVE", 
          "bpy.ops.brush.curve_preset(shape='LINE')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#NOCURVE", 
          "bpy.ops.brush.curve_preset(shape='MAX')"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt South", 
      "Sculpt", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Autosmooth", 
          "PROP", 
          "NONE", 
          "bpy.data.brushes[\"SculptDraw\"].auto_smooth_factor"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Original Normal", 
          "PROP", 
          "#UNLOCKED", 
          "bpy.data.brushes[\"SculptDraw\"].use_original_normal"
        ], 
        [
          "Sculpt Plane", 
          "PROP", 
          "NONE", 
          "bpy.data.brushes[\"SculptDraw\"].sculpt_plane"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Use Front-Face", 
          "PROP", 
          "NONE", 
          "bpy.data.brushes[\"SculptDraw\"].use_frontface"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Accumulate", 
          "PROP", 
          "NONE", 
          "bpy.data.brushes[\"SculptDraw\"].use_accumulate"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt North", 
      "Sculpt", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Use Blender Units", 
          "PROP", 
          "#UNLOCKED", 
          "bpy.context.scene.tool_settings.unified_paint_settings.use_locked_size"
        ], 
        [
          "Radius", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.tool_settings.unified_paint_settings.size"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Use Automatic Strength Adjustment", 
          "PROP", 
          "#UNLOCKED", 
          "bpy.data.brushes[\"SculptDraw\"].use_space_attenuation"
        ], 
        [
          "Strength", 
          "PROP", 
          "NONE", 
          "bpy.data.brushes[\"SculptDraw\"].strength"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt NorthWest", 
      "Sculpt", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Detail Size", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.tool_settings.sculpt.constant_detail"
        ], 
        [
          "Sample Detail Size", 
          "COMMAND", 
          "#EYEDROPPER", 
          "bpy.ops.sculpt.sample_detail_size(location=(365, 538))"
        ], 
        [
          "Update Dyntopo", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.update_dyntopo()"
        ], 
        [
          "row"
        ], 
        [
          "Symmetry", 
          "CUSTOM", 
          "MOD_MIRROR", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Y", 
          "COMMAND", 
          "", 
          "bpy.ops.sculpt.sculptusesymmetryx()"
        ], 
        [
          "Y", 
          "COMMAND", 
          "", 
          "bpy.ops.sculpt.sculptusesymmetryy()"
        ], 
        [
          "Z", 
          "COMMAND", 
          "", 
          "bpy.ops.sculpt.sculptusesymmetryz()"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt Stroke Method", 
      "Sculpt", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Stroke Method:", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Stroke Method", 
          "PROP", 
          "NONE", 
          "bpy.data.brushes[\"SculptDraw\"].stroke_method"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Select inner faces", 
      "3D View Generic", 
      "ctrl+shift+BUTTON4MOUSE", 
      [
        [
          "Select Boundary Loop", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.region_to_loop()"
        ], 
        [
          "Checker Deselect", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.select_nth()"
        ], 
        [
          "Select Loop Inner-Region", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.loop_to_region()"
        ], 
        [
          "Select Mode", 
          "COMMAND", 
          "TEXT", 
          "bpy.ops.mesh.select_mode(type='FACE'); None"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "3D: Center View to Mouse", 
      "3D View", 
      "alt+MIDDLEMOUSE", 
      [
        [
          "Center View to Mouse", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_center_pick()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "Curve: Visibility Pie", 
      "Curve", 
      "MIDDLEMOUSE", 
      [
        [
          "Unhide", 
          "COMMAND", 
          "HIDE_OFF", 
          "bpy.ops.curve.select_all(action='INVERT');bpy.ops.curve.reveal();bpy.ops.curve.select_all(action='INVERT')"
        ], 
        [
          "Hide", 
          "COMMAND", 
          "HIDE_ON", 
          "bpy.ops.curve.hide()"
        ], 
        [
          "View Selected/All", 
          "MENU", 
          "ZOOM_PREVIOUS", 
          "3D: View Selected/All"
        ], 
        [
          "Local", 
          "HOTKEY", 
          "GHOST_ENABLED", 
          "NUMPAD_SLASH"
        ], 
        [
          "Lock to Cursor", 
          "PROP", 
          "CURSOR", 
          "bpy.context.space_data.lock_cursor"
        ], 
        [
          "View Lock to Active/Clear", 
          "MENU", 
          "LOCKED", 
          "View Lock to Active/Clear"
        ], 
        [
          "Align Face / Front", 
          "MENU", 
          "ORIENTATION_NORMAL", 
          "Align Face / Front"
        ], 
        [
          "Hide Unselected", 
          "COMMAND", 
          "RESTRICT_SELECT_ON", 
          "bpy.ops.curve.hide(unselected=True)"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "3D: View Selected/All", 
      "3D View", 
      "", 
      [
        [
          "View Selected", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_selected()"
        ], 
        [
          "View All", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_all(center=False)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "View Lock to Active/Clear", 
      "Mesh, Object Mode", 
      "", 
      [
        [
          "View Lock to Active", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_lock_to_active()"
        ], 
        [
          "View Lock Clear", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_lock_clear()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align Face / Front", 
      "Mesh", 
      "", 
      [
        [
          "Align to Selected", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_axis(type='TOP', align_active=True)"
        ], 
        [
          "Align to Selected Back", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_axis(type='BOTTOM', align_active=True)"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "GP: Visibility Pie", 
      "Grease Pencil", 
      "MIDDLEMOUSE", 
      [
        [
          "Unhide", 
          "COMMAND", 
          "HIDE_OFF", 
          "bpy.ops.mesh.select_all(action='INVERT');bpy.ops.mesh.reveal();bpy.ops.mesh.select_all(action='INVERT')"
        ], 
        [
          "Hide", 
          "COMMAND", 
          "HIDE_ON", 
          "bpy.ops.mesh.hide(unselected=False)"
        ], 
        [
          "View Selected/All", 
          "MENU", 
          "ZOOM_PREVIOUS", 
          "3D: View Selected/All"
        ], 
        [
          "Local", 
          "HOTKEY", 
          "GHOST_ENABLED", 
          "NUMPAD_SLASH"
        ], 
        [
          "Lock to Cursor", 
          "PROP", 
          "CURSOR", 
          "bpy.context.space_data.lock_cursor"
        ], 
        [
          "View Lock to Active/Clear", 
          "MENU", 
          "LOCKED", 
          "View Lock to Active/Clear"
        ], 
        [
          "Align Face / Front", 
          "MENU", 
          "ORIENTATION_NORMAL", 
          "Align Face / Front"
        ], 
        [
          "Hide Unselected", 
          "COMMAND", 
          "RESTRICT_SELECT_ON", 
          "bpy.ops.mesh.hide(unselected=True)"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "return C.active_object and C.active_object.type == 'GPENCIL'", 
      ""
    ], 
    [
      "Mesh: Visibility Pie", 
      "Mesh", 
      "MIDDLEMOUSE", 
      [
        [
          "Unhide", 
          "COMMAND", 
          "HIDE_OFF", 
          "bpy.ops.mesh.select_all(action='INVERT');bpy.ops.mesh.reveal();bpy.ops.mesh.select_all(action='INVERT')"
        ], 
        [
          "Hide", 
          "COMMAND", 
          "HIDE_ON", 
          "bpy.ops.mesh.hide(unselected=False)"
        ], 
        [
          "View Selected/All", 
          "MENU", 
          "ZOOM_PREVIOUS", 
          "3D: View Selected/All"
        ], 
        [
          "Local", 
          "HOTKEY", 
          "GHOST_ENABLED", 
          "NUMPAD_SLASH"
        ], 
        [
          "Lock to Cursor", 
          "PROP", 
          "CURSOR", 
          "bpy.context.space_data.lock_cursor"
        ], 
        [
          "View Lock to Active/Clear", 
          "MENU", 
          "LOCKED", 
          "View Lock to Active/Clear"
        ], 
        [
          "Align Face / Front", 
          "MENU", 
          "ORIENTATION_NORMAL", 
          "Align Face / Front"
        ], 
        [
          "Hide Unselected", 
          "COMMAND", 
          "RESTRICT_SELECT_ON", 
          "bpy.ops.mesh.hide(unselected=True)"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Object: Visibility Pie", 
      "Object Mode", 
      "MIDDLEMOUSE", 
      [
        [
          "Unhide", 
          "COMMAND", 
          "HIDE_OFF", 
          "bpy.ops.object.select_all(action='INVERT');bpy.ops.object.hide_view_clear();bpy.ops.object.select_all(action='INVERT')"
        ], 
        [
          "Hide", 
          "COMMAND", 
          "HIDE_ON", 
          "bpy.ops.object.hide_view_set(unselected=False)"
        ], 
        [
          "View Selected/All", 
          "MENU", 
          "ZOOM_PREVIOUS", 
          "3D: View Selected/All"
        ], 
        [
          "Local", 
          "HOTKEY", 
          "GHOST_ENABLED", 
          "NUMPAD_SLASH"
        ], 
        [
          "Lock to Cursor", 
          "PROP", 
          "CURSOR", 
          "bpy.context.space_data.lock_cursor"
        ], 
        [
          "View Lock to Active/Clear", 
          "MENU", 
          "LOCKED", 
          "View Lock to Active/Clear"
        ], 
        [
          "Align View to Cursor Rotation", 
          "MENU", 
          "CURSOR", 
          "Align View to Cursor Rotation"
        ], 
        [
          "Hide Unselected", 
          "COMMAND", 
          "RESTRICT_SELECT_ON", 
          "bpy.ops.object.hide_view_set(unselected=True)"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Align View to Cursor Rotation", 
      "Window", 
      "", 
      [
        [
          "Align View to Cursor Rotation", 
          "COMMAND", 
          "CURSOR", 
          "bpy.ops.sfc.cursor_tools(cursor_tools='align_view_to_cursor_rot')"
        ], 
        [
          "View Orbit Opposite", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.view_orbit(angle=3.14159, type='ORBITRIGHT')"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt: Visibility Pie", 
      "Sculpt", 
      "MIDDLEMOUSE", 
      [
        [
          "Unhide", 
          "COMMAND", 
          "HIDE_OFF", 
          "bpy.ops.paint.hide_show(action='SHOW', area='ALL')"
        ], 
        [
          "Hide Masked", 
          "COMMAND", 
          "HIDE_ON", 
          "bpy.ops.paint.hide_show(area='MASKED', action='HIDE')"
        ], 
        [
          "View Selected/All", 
          "MENU", 
          "ZOOM_PREVIOUS", 
          "3D: View Selected/All"
        ], 
        [
          "Local", 
          "HOTKEY", 
          "GHOST_ENABLED", 
          "NUMPAD_SLASH"
        ], 
        [
          "Lock to Cursor", 
          "PROP", 
          "CURSOR", 
          "bpy.context.space_data.lock_cursor"
        ], 
        [
          "View Lock to Active/Clear", 
          "MENU", 
          "LOCKED", 
          "View Lock to Active/Clear"
        ], 
        [
          "Hide/Show", 
          "COMMAND", 
          "HIDE_ON", 
          "bpy.ops.paint.hide_show(action='HIDE', area='INSIDE')"
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "WBox Edit", 
      "Screen Editing", 
      "NUMPAD_ASTERIX+MIDDLEMOUSE", 
      [
        [
          "Draw All Edges = True; C.object.show_wire = True", 
          "INVOKE", 
          "", 
          "C.object.show_all_edges = True; C.object.show_wire = True"
        ], 
        [
          "On Invoke", 
          "INVOKE", 
          "", 
          "value  = 0; x = C.object.data.WBox.size_x; y = C.object.data.WBox.size_y; z = C.object.data.WBox.size_z; segments=0; a = C.object.data.WBox.seg_x; b = C.object.data.WBox.seg_y; c = C.object.data.WBox.seg_z"
        ], 
        [
          "On Update", 
          "UPDATE", 
          "", 
          "C.object.data.WBox.size_x = x + value; C.object.data.WBox.size_y = y + value; C.object.data.WBox.size_z = z + value; C.object.data.WBox.seg_x = a + segments; C.object.data.WBox.seg_y = b + segments; C.object.data.WBox.seg_z = c + segments; "
        ], 
        [
          "Size", 
          "PROP", 
          "MOUSEMOVE;-1000.0;1000.0;0.10000000149011612;", 
          "value"
        ], 
        [
          "Segments", 
          "PROP", 
          "WHEELUPMOUSE;;;;", 
          "segments"
        ], 
        [
          "X SIze", 
          "PROP", 
          "Q;;;0.10000000149011612;", 
          "x"
        ], 
        [
          "Y Size", 
          "PROP", 
          "W;;;0.10000000149011612;", 
          "y"
        ], 
        [
          "Z Size", 
          "PROP", 
          "E;;;0.10000000149011612;", 
          "z"
        ], 
        [
          "WMesh menu", 
          "COMMAND", 
          "MIDDLEMOUSE;", 
          "bpy.ops.pme.popup_panel(panel='DATA_PT_Wlayout')"
        ], 
        [
          "C.object.show_all_edges = False; C.object.show_wire = False", 
          "FINISH", 
          "", 
          "C.object.show_all_edges = False; C.object.show_wire = False"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "return \"wbox\" in C.active_object.name.lower()", 
      ""
    ], 
    [
      "WCone Edit", 
      "Screen Editing", 
      "NUMPAD_ASTERIX+MIDDLEMOUSE", 
      [
        [
          "Draw All Edges = True; C.object.show_wire = True", 
          "INVOKE", 
          "", 
          "C.object.show_all_edges = True; C.object.show_wire = True"
        ], 
        [
          "On Invoke", 
          "INVOKE", 
          "", 
          "value  = 0; x = C.object.data.WCone.rad_top; y = C.object.data.WCone.rad_main"
        ], 
        [
          "On Update", 
          "UPDATE", 
          "", 
          "C.object.data.WCone.rad_top = x + value; C.object.data.WCone.rad_main = y + value"
        ], 
        [
          "Size", 
          "PROP", 
          "MOUSEMOVE;-1000.0;1000.0;0.10000000149011612;", 
          "value"
        ], 
        [
          "Height Segments", 
          "PROP", 
          "WHEELUPMOUSE;;2147483648.0;;", 
          "C.object.data.WCone.seg_height"
        ], 
        [
          "X SIze", 
          "PROP", 
          "Q;;;0.10000000149011612;", 
          "x"
        ], 
        [
          "Y Size", 
          "PROP", 
          "W;;;0.10000000149011612;", 
          "y"
        ], 
        [
          "Z Size", 
          "PROP", 
          "E;;;0.10000000149011612;", 
          "C.object.data.WCone.height"
        ], 
        [
          "WMesh menu", 
          "COMMAND", 
          "MIDDLEMOUSE;", 
          "bpy.ops.pme.popup_panel(panel='DATA_PT_Wlayout')"
        ], 
        [
          "C.object.show_all_edges = False; C.object.show_wire = False", 
          "FINISH", 
          "", 
          "C.object.show_all_edges = False; C.object.show_wire = False"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "return \"wcone\" in C.active_object.name.lower()", 
      ""
    ], 
    [
      "WPlane Edit", 
      "Screen Editing", 
      "NUMPAD_ASTERIX+MIDDLEMOUSE", 
      [
        [
          "Draw All Edges = True; C.object.show_wire = True", 
          "INVOKE", 
          "", 
          "C.object.show_all_edges = True; C.object.show_wire = True"
        ], 
        [
          "On Invoke", 
          "INVOKE", 
          "", 
          "value  = 0; x = C.object.data.WPlane.size_x; y = C.object.data.WPlane.size_y; segments=0; a = C.object.data.WPlane.seg_x; b = C.object.data.WPlane.seg_y;"
        ], 
        [
          "On Update", 
          "UPDATE", 
          "", 
          "C.object.data.WPlane.size_x = x + value; C.object.data.WPlane.size_y = y + value; C.object.data.WPlane.seg_x = a + segments; C.object.data.WPlane.seg_y = b + segments;"
        ], 
        [
          "Value", 
          "PROP", 
          "MOUSEMOVE;;;0.10000000149011612;", 
          "value"
        ], 
        [
          "Segments", 
          "PROP", 
          "WHEELUPMOUSE;;;1.0;", 
          "segments"
        ], 
        [
          "x", 
          "PROP", 
          "Q;;;0.10000000149011612;", 
          "x"
        ], 
        [
          "y", 
          "PROP", 
          "W;;;0.10000000149011612;", 
          "y"
        ], 
        [
          "WMesh menu", 
          "COMMAND", 
          "MIDDLEMOUSE;", 
          "bpy.ops.pme.popup_panel(panel='DATA_PT_Wlayout')"
        ], 
        [
          "C.object.show_all_edges = False; C.object.show_wire = False", 
          "FINISH", 
          "", 
          "C.object.show_all_edges = False; C.object.show_wire = False"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "return \"wplane\" in C.active_object.name.lower()", 
      ""
    ], 
    [
      "WRing Edit", 
      "Screen Editing", 
      "NUMPAD_ASTERIX+MIDDLEMOUSE", 
      [
        [
          "Draw All Edges = True; C.object.show_wire = True", 
          "INVOKE", 
          "", 
          "C.object.show_all_edges = True; C.object.show_wire = True"
        ], 
        [
          "Outer", 
          "PROP", 
          "MOUSEMOVE;;;0.10000000149011612;", 
          "C.object.data.WRing.radius_out"
        ], 
        [
          "Inner", 
          "PROP", 
          "W;;;;", 
          "C.object.data.WRing.radius_in"
        ], 
        [
          "Perimeter", 
          "PROP", 
          "Q;;2147483648.0;;", 
          "C.object.data.WRing.seg_perimeter"
        ], 
        [
          "y", 
          "PROP", 
          "W;;;0.10000000149011612;", 
          "y"
        ], 
        [
          "C.object.show_all_edges = False; C.object.show_wire = False", 
          "FINISH", 
          "", 
          "C.object.show_all_edges = False; C.object.show_wire = False"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "return \"wring\" in C.active_object.name.lower()", 
      ""
    ], 
    [
      "WSphere Edit", 
      "Screen Editing", 
      "NUMPAD_ASTERIX+MIDDLEMOUSE", 
      [
        [
          "X = Smooth", 
          "INVOKE", 
          "", 
          "x = C.object.data.WSphere.smoothed"
        ], 
        [
          "Draw All Edges = True; C.object.show_wire = True", 
          "INVOKE", 
          "", 
          "C.object.show_all_edges = True; C.object.show_wire = True"
        ], 
        [
          "Radius", 
          "PROP", 
          "MOUSEMOVE;;;0.10000000149011612;", 
          "C.object.data.WSphere.radius"
        ], 
        [
          "Division", 
          "PROP", 
          "WHEELUPMOUSE;;2147483648.0;;", 
          "C.object.data.WSphere.divisions"
        ], 
        [
          "Tris", 
          "COMMAND", 
          "Q;", 
          "open_menu(\"WSphere Tris\")"
        ], 
        [
          "Smooth", 
          "COMMAND", 
          "W;", 
          "open_menu(\"Wsphere Smooth\")"
        ], 
        [
          "Topology", 
          "PROP", 
          "E;;;;", 
          "C.object.data.WSphere.base"
        ], 
        [
          "WMesh menu", 
          "COMMAND", 
          "MIDDLEMOUSE;", 
          "bpy.ops.pme.popup_panel(panel='DATA_PT_Wlayout')"
        ], 
        [
          "C.object.show_all_edges = False; C.object.show_wire = False", 
          "FINISH", 
          "", 
          "C.object.show_all_edges = False; C.object.show_wire = False"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "return \"wsphere\" in C.active_object.name.lower()", 
      ""
    ], 
    [
      "WTube Edit", 
      "Screen Editing", 
      "NUMPAD_ASTERIX+MIDDLEMOUSE", 
      [
        [
          "Draw All Edges = True; C.object.show_wire = True", 
          "INVOKE", 
          "", 
          "C.object.show_all_edges = True; C.object.show_wire = True"
        ], 
        [
          "Outer", 
          "PROP", 
          "MOUSEMOVE;;;0.10000000149011612;", 
          "C.object.data.WTube.radius_out"
        ], 
        [
          "Height", 
          "PROP", 
          "WHEELUPMOUSE;;2147483648.0;;", 
          "C.object.data.WTube.seg_height"
        ], 
        [
          "Perimeter", 
          "PROP", 
          "Q;;2147483648.0;;", 
          "C.object.data.WTube.seg_perimeter"
        ], 
        [
          "Height", 
          "PROP", 
          "W;;;0.10000000149011612;", 
          "C.object.data.WTube.height"
        ], 
        [
          "WMesh menu", 
          "COMMAND", 
          "MIDDLEMOUSE;", 
          "bpy.ops.pme.popup_panel(panel='DATA_PT_Wlayout')"
        ], 
        [
          "C.object.show_all_edges = False; C.object.show_wire = False", 
          "FINISH", 
          "", 
          "C.object.show_all_edges = False; C.object.show_wire = False"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "return \"wtube\" in C.active_object.name.lower()", 
      ""
    ], 
    [
      "Mesh, GP: Proportional Pie", 
      "Grease Pencil, Mesh", 
      "O", 
      [
        [
          "Linear", 
          "COMMAND", 
          "LINCURVE", 
          "bpy.context.scene.tool_settings.proportional_edit_falloff = 'LINEAR'"
        ], 
        [
          "Smooth", 
          "COMMAND", 
          "SMOOTHCURVE", 
          "C.scene.tool_settings.proportional_edit_falloff = 'SMOOTH'"
        ], 
        [
          "Projected from View", 
          "PROP", 
          "VIEW_PERSPECTIVE", 
          "C.scene.tool_settings.use_proportional_projected"
        ], 
        [
          "Connected Only", 
          "PROP", 
          "PROP_CON", 
          "bpy.context.scene.tool_settings.use_proportional_connected"
        ], 
        [
          "Constant", 
          "COMMAND", 
          "NOCURVE", 
          "bpy.context.scene.tool_settings.proportional_edit_falloff = 'CONSTANT'"
        ], 
        [
          "Root", 
          "COMMAND", 
          "ROOTCURVE", 
          "bpy.context.scene.tool_settings.proportional_edit_falloff = 'ROOT'"
        ], 
        [
          "Sphere", 
          "COMMAND", 
          "SPHERECURVE", 
          "bpy.context.scene.tool_settings.proportional_edit_falloff = 'SPHERE'"
        ], 
        [
          "Proportional List", 
          "MENU", 
          "RNDCURVE", 
          "@@Proportional List"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Proportional List", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Sharp", 
          "COMMAND", 
          "SHARPCURVE", 
          "bpy.context.scene.tool_settings.proportional_edit_falloff = 'SHARP'"
        ], 
        [
          "row"
        ], 
        [
          "Random", 
          "COMMAND", 
          "RNDCURVE", 
          "bpy.context.scene.tool_settings.proportional_edit_falloff = 'RANDOM'"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Lattice Create", 
      "Curve, Grease Pencil Stroke Edit Mode, Image Paint, Lattice, Mesh, Object Mode, Sculpt, Vertex Paint, Weight Paint", 
      "ctrl+shift+alt+Q", 
      [
        [
          "Create Lattice", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.fast_lattice()"
        ], 
        [
          "Create Helpers Group", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.group.create(name='Helpers')"
        ], 
        [
          "Toggle Editmode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.editmode_toggle()"
        ], 
        [
          "Link to Group: Helpers", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.object.group_link(group='Helpers'))"
        ], 
        [
          "Toggle Editmode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.editmode_toggle()"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Pivot Point", 
      "Window", 
      "alt+Q", 
      [
        [
          "Active Element", 
          "COMMAND", 
          "PIVOT_ACTIVE", 
          "bpy.context.scene.tool_settings.transform_pivot_point = 'ACTIVE_ELEMENT'"
        ], 
        [
          "Median Point", 
          "COMMAND", 
          "PIVOT_MEDIAN", 
          "bpy.context.scene.tool_settings.transform_pivot_point = 'MEDIAN_POINT'"
        ], 
        [
          "Individual Origins", 
          "COMMAND", 
          "PIVOT_INDIVIDUAL", 
          "bpy.context.scene.tool_settings.transform_pivot_point = 'INDIVIDUAL_ORIGINS'"
        ], 
        [
          "Cursor", 
          "COMMAND", 
          "PIVOT_CURSOR", 
          "bpy.context.scene.tool_settings.transform_pivot_point = 'CURSOR'"
        ], 
        [
          "Bounding Box Center", 
          "COMMAND", 
          "PIVOT_BOUNDBOX", 
          "C.scene.tool_settings.transform_pivot_point = 'BOUNDING_BOX_CENTER'"
        ], 
        [
          ""
        ], 
        [
          "Only Locations", 
          "PROP", 
          "EMPTY_ARROWS", 
          "C.scene.tool_settings.use_transform_pivot_point_align"
        ], 
        [
          "Only Origins", 
          "PROP", 
          "RADIOBUT_ON", 
          "C.scene.tool_settings.use_transform_data_origin"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Transform Orientation / Manipulator", 
      "3D View Generic", 
      "NUMPAD_ASTERIX+Q", 
      [
        [
          "View", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"VIEW\")"
        ], 
        [
          "Local", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"LOCAL\")"
        ], 
        [
          "Normal", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"NORMAL\")"
        ], 
        [
          "Manipulators", 
          "COMMAND", 
          "MANIPUL", 
          "bpy.ops.w.manupulators()"
        ], 
        [
          "Gimbal", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"GIMBAL\")"
        ], 
        [
          "Global", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"GLOBAL\")"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "ZOOMIN", 
          "bpy.ops.transform.create_orientation()"
        ], 
        [
          "Transform Orientations", 
          "CUSTOM", 
          "", 
          "panel(T.VIEW3D_PT_transform_orientations, frame=False, header=False)"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Pivot", 
      "UV Editor", 
      "alt+Q", 
      [
        [
          ""
        ], 
        [
          "Pivot = 'MEDIAN'", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.pivot_point = 'MEDIAN'"
        ], 
        [
          "Pivot = 'INDIVIDUAL_ORIGINS'", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.pivot_point = 'INDIVIDUAL_ORIGINS'"
        ], 
        [
          "Pivot = 'CURSOR'", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.pivot_point = 'CURSOR'"
        ], 
        [
          "Pivot = 'CENTER'", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.pivot_point = 'CENTER'"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Rotate On Cursor", 
      "Mesh, Object Mode", 
      "shift+alt+R", 
      [
        [
          "Rotate On Cursor", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.rotate_on_cursor()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Spin", 
      "Mesh", 
      "alt+R", 
      [
        [
          "Spin 90\u00b0", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.spin(angle=1.5707963705062866)"
        ], 
        [
          "Spin -90\u00b0", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.spin(angle=-1.5707963705062866)"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Rotate", 
      "3D View", 
      "NUMPAD_ASTERIX+R", 
      [
        [
          "BRM UVRotate", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.brm_uvrotate()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Pea Context", 
      "Armature, Curve, Lattice, Mesh, Object Mode, Pose, Text, Text Generic, Weight Paint, Weight Paint Vertex Selection", 
      "RIGHTMOUSE", 
      [
        [
          "Subd -", 
          "COMMAND", 
          "NONE", 
          "C.object.modifiers[\"Subdivision\"].levels = -1"
        ], 
        [
          "Levels = 2", 
          "COMMAND", 
          "NONE", 
          "bpy.context.object.modifiers[\"Subdivision\"].levels = 2"
        ], 
        [
          "Context Menu", 
          "CUSTOM", 
          "QUESTION", 
          "execute_script(\"scripts/command_context_sensitive_menu.py\")"
        ], 
        [
          "Redo Last", 
          "COMMAND", 
          "PREFERENCES", 
          "bpy.ops.screen.redo_last()"
        ], 
        [
          "Subsurf", 
          "CUSTOM", 
          "#MOD_SUBSURF", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SUBSURF']; m = mods and mods[0]; operator(L, \"wm.context_toggle\", text, icon, icon_value=icon_value, data_path=\"active_object.modifiers['%s'].show_viewport\" % m.name) if m else operator(L, \"object.modifier_add\", text, icon, icon_value=icon_value, type='SUBSURF')"
        ], 
        [
          "Mirror", 
          "CUSTOM", 
          "#MOD_MIRROR", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'MIRROR']; m = mods and mods[0]; operator(L, \"wm.context_toggle\", text, icon, icon_value=icon_value, data_path=\"active_object.modifiers['%s'].show_viewport\" % m.name) if m else operator(L, \"object.modifier_add\", text, icon, icon_value=icon_value, type='MIRROR')"
        ], 
        [
          "Modifiers", 
          "COMMAND", 
          "RESTRICT_VIEW_OFF", 
          "bpy.ops.object.toggle_apply_modifiers_view()"
        ], 
        [
          " X-Ray", 
          "PROP", 
          "XRAY", 
          "C.space_data.shading.show_xray"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "RMB Test", 
      "Object Mode", 
      "NUMPAD_ASTERIX+RIGHTMOUSE", 
      [
        [
          "Modifiers", 
          "COMMAND", 
          "RESTRICT_VIEW_OFF", 
          "bpy.ops.object.toggle_apply_modifiers_view()"
        ], 
        [
          " X-Ray", 
          "PROP", 
          "XRAY", 
          "C.space_data.shading.show_xray"
        ], 
        [
          ""
        ], 
        [
          "Redo Last", 
          "COMMAND", 
          "PREFERENCES", 
          "bpy.ops.screen.redo_last()"
        ], 
        [
          "Subsurf", 
          "CUSTOM", 
          "MOD_SUBSURF", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SUBSURF']; m = mods and mods[0]; operator(L, \"wm.context_toggle\", text, icon, icon_value=icon_value, data_path=\"active_object.modifiers['%s'].show_viewport\" % m.name) if m else operator(L, \"object.modifier_add\", text, icon, icon_value=icon_value, type='SUBSURF')"
        ], 
        [
          "Mirror", 
          "CUSTOM", 
          "MOD_MIRROR", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'MIRROR']; m = mods and mods[0]; operator(L, \"wm.context_toggle\", text, icon, icon_value=icon_value, data_path=\"active_object.modifiers['%s'].show_viewport\" % m.name) if m else operator(L, \"object.modifier_add\", text, icon, icon_value=icon_value, type='MIRROR')"
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Pea", 
      "UV Editor", 
      "RIGHTMOUSE", 
      [
        [
          "-90", 
          "COMMAND", 
          "LOOP_BACK", 
          "bpy.ops.uv.rotate_90_neg()"
        ], 
        [
          "90", 
          "COMMAND", 
          "LOOP_FORWARDS", 
          "bpy.ops.uv.rotate_90_pos()"
        ], 
        [
          "Pea UV List", 
          "MENU", 
          "", 
          "@@Pea UV List"
        ], 
        [
          "Redo Last", 
          "COMMAND", 
          "PREFERENCES", 
          "bpy.ops.screen.redo_last()"
        ], 
        [
          "Live Unwrap", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.uv_editor.use_live_unwrap"
        ], 
        [
          "UV Sync Selection", 
          "PROP", 
          "UV_SYNC_SELECT", 
          "C.scene.tool_settings.use_uv_select_sync"
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?pm_radius=60", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Pea UV List", 
      "UV Editor", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "UV/Image Editor", 
          "CUSTOM", 
          "", 
          "header_menu([\"IMAGE_EDITOR\"])"
        ], 
        [
          "row?"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#LOOP_BACK", 
          "bpy.ops.transform.rotate(value=-1.5707963705062866, axis=(0.0, 0.0, -1.0), constraint_axis=[False, False, False], constraint_orientation='GLOBAL', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1.0)"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#LOOP_FORWARDS", 
          "bpy.ops.transform.rotate(value=1.5708, axis=(-0, -0, -1), constraint_axis=(False, False, False), constraint_orientation='GLOBAL', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1)"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Lock Bounds", 
          "PROP", 
          "#SNAP_PEEL_OBJECT", 
          "bpy.context.space_data.uv_editor.lock_bounds"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "H", 
          "COMMAND", 
          "", 
          "bpy.ops.transform.resize(value=(-1, 1, 1), constraint_axis=(True, False, False), constraint_orientation='GLOBAL', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1)"
        ], 
        [
          "V", 
          "COMMAND", 
          "", 
          "bpy.ops.transform.resize(value=(1, -1, 1), constraint_axis=(False, True, False), constraint_orientation='GLOBAL', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1)"
        ], 
        [
          "row?size=LARGER"
        ], 
        [
          "UVP Pack", 
          "COMMAND", 
          "", 
          "bpy.ops.uv_packmaster.uv_pack()"
        ], 
        [
          "UVPackmaster", 
          "COMMAND", 
          "#SETTINGS", 
          "bpy.ops.pme.popup_panel(panel='UvPackPanel', hide_title=True, auto_close=False, frame=False, header=False)"
        ], 
        [
          "row?size=LARGER"
        ], 
        [
          "Seams From Islands", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.seams_from_islands()"
        ], 
        [
          "row"
        ], 
        [
          "Snap Axis", 
          "COMMAND", 
          "ARROW_LEFTRIGHT", 
          "bpy.ops.uv.uv_snap_to_axis()"
        ], 
        [
          "Snap Equal", 
          "COMMAND", 
          "ALIGN", 
          "bpy.ops.uv.uv_snap_to_axis_and_equal()"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Grid Shape", 
          "COMMAND", 
          "GRID", 
          "bpy.ops.uv.uv_squares_by_shape()"
        ], 
        [
          "Grid Square", 
          "COMMAND", 
          "UV_FACESEL", 
          "bpy.ops.uv.uv_squares()"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Rip vertex", 
          "COMMAND", 
          "LAYER_ACTIVE", 
          "bpy.ops.uv.uv_face_rip()"
        ], 
        [
          "Rip Faces", 
          "COMMAND", 
          "UV_ISLANDSEL", 
          "bpy.ops.uv.uv_face_rip()"
        ], 
        [
          "row"
        ], 
        [
          "Copy Mirrored UV coords", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.faces_mirror_uv()"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Place Cursor", 
      "Mesh, Object Non-modal", 
      "shift+S", 
      [
        [
          "Set 3D Cursor", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.cursor3d(use_depth=True, orientation='GEOM')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Menu", 
      "Mesh, Object Mode", 
      "shift+S", 
      [
        [
          "Selection to Cursor", 
          "COMMAND", 
          "RESTRICT_SELECT_OFF", 
          "bpy.ops.sfc.cursor_tools(cursor_tools='selection_to_cursor')"
        ], 
        [
          "Cursor to Selection", 
          "COMMAND", 
          "ORIENTATION_CURSOR", 
          "bpy.ops.sfc.cursor_tools(cursor_tools='cursor_to_selection_rot')"
        ], 
        [
          "Origin To Bottom", 
          "COMMAND", 
          "TRIA_DOWN", 
          "execute_script(\"scripts/Pivot_To_Bottom.py\")"
        ], 
        [
          "Origin to 3D Cursor", 
          "COMMAND", 
          "PIVOT_CURSOR", 
          "bpy.ops.object.origin_set(type='ORIGIN_CURSOR')"
        ], 
        [
          "To Selection", 
          "COMMAND", 
          "RESTRICT_SELECT_OFF", 
          "bpy.ops.mesh.quick_pivot()"
        ], 
        [
          "Origin to Geometry", 
          "COMMAND", 
          "MESH_CUBE", 
          "bpy.ops.object.origin_set(type='ORIGIN_GEOMETRY')"
        ], 
        [
          "Geometry to Origin", 
          "COMMAND", 
          "", 
          "bpy.ops.object.origin_set(type='GEOMETRY_ORIGIN')"
        ], 
        [
          "Others", 
          "MENU", 
          "GROUP_VERTEX", 
          "@Origin Menu"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Origin Menu", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Cursor Tools", 
          "COMMAND", 
          "", 
          "bpy.ops.sfc.cursor_tools(cursor_tools='copy_cursor_rot')"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Scale", 
      "3D View", 
      "NUMPAD_ASTERIX+S", 
      [
        [
          "BRM UVScale", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.brm_uvscale()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Snap Cursor", 
      "UV Editor", 
      "shift+S", 
      [
        [
          "Cursor to Pixels", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_cursor(target='PIXELS')"
        ], 
        [
          "Cursor to Selection", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_cursor(target='SELECTED')"
        ], 
        [
          "Selection to Cursor (offset)", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_selected(target='CURSOR_OFFSET')"
        ], 
        [
          "Selection to Cursor", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_selected(target='CURSOR')"
        ], 
        [
          "Selection to Adjacent", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_selected(target='ADJACENT_UNSELECTED')"
        ], 
        [
          "Selection to Pixels", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_selected(target='PIXELS')"
        ], 
        [
          "Set 2D Cursor", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.cursor_set(location=(0, 0))"
        ], 
        [
          "Reset 2D Cursor", 
          "COMMAND", 
          "NONE", 
          "C.space_data.cursor_location = Vector((0.0, 0.0))"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Editor Pie", 
      "Window", 
      "shift+SPACE", 
      [
        [
          "Outliner", 
          "COMMAND", 
          "TRIA_RIGHT", 
          "bpy.ops.pme.sidearea_toggle(area='OUTLINER', side='RIGHT', main_area='VIEW_3D')"
        ], 
        [
          "Properties", 
          "COMMAND", 
          "TRIA_RIGHT", 
          "bpy.ops.pme.sidearea_toggle(area='PROPERTIES', side='RIGHT', main_area='VIEW_3D')"
        ], 
        [
          "Join Area", 
          "COMMAND", 
          "FULLSCREEN_EXIT", 
          "execute_script(\"C:/Users/Mr Bombastic/AppData/Roaming/Blender Foundation/Blender/2.80/scripts/addons/pie_menu_editor/scripts/command_area_join.py\")"
        ], 
        [
          "Split Horizontal", 
          "COMMAND", 
          "SNAP_PEEL_OBJECT", 
          "bpy.ops.screen.area_split(direction='HORIZONTAL')"
        ], 
        [
          "Popup Outliner", 
          "COMMAND", 
          "OUTLINER", 
          "bpy.ops.pme.popup_area(area='OUTLINER')"
        ], 
        [
          "Popup Properties", 
          "COMMAND", 
          "PROPERTIES", 
          "bpy.ops.pme.popup_area(area='PROPERTIES')"
        ], 
        [
          "Editor List L", 
          "MENU", 
          "NONE", 
          "@Editor List L"
        ], 
        [
          "Editor List R", 
          "MENU", 
          "IMAGE_DATA", 
          "@@Editor List R"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Editor List L", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "3D View", 
          "COMMAND", 
          "VIEW3D", 
          "bpy.context.area.ui_type = 'VIEW_3D'"
        ], 
        [
          "row?"
        ], 
        [
          "UV", 
          "COMMAND", 
          "UV", 
          "bpy.context.area.ui_type = 'UV'"
        ], 
        [
          "row?"
        ], 
        [
          "Shader", 
          "COMMAND", 
          "NODE_MATERIAL", 
          "bpy.context.area.ui_type = 'ShaderNodeTree'"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Editor List R", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Dope Sheet", 
          "COMMAND", 
          "ACTION", 
          "bpy.context.area.ui_type = '<UNKNOWN ENUM>'"
        ], 
        [
          "row?"
        ], 
        [
          "Timeline", 
          "COMMAND", 
          "TIME", 
          "bpy.context.area.ui_type = 'TIMELINE'"
        ], 
        [
          "row?"
        ], 
        [
          "Graph", 
          "COMMAND", 
          "GRAPH", 
          "bpy.context.area.ui_type = '<UNKNOWN ENUM>'"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "EditorType", 
      "Window", 
      "shift+SPACE", 
      [
        [
          "row"
        ], 
        [
          "Editor Type", 
          "CUSTOM", 
          "NONE", 
          "L.column(align=True).prop(C.area, 'ui_type', expand=True)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=2&pd_title=False&pd_width=130", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Orientation", 
      "3D View Generic", 
      "alt+SPACE", 
      [
        [
          "View", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"VIEW\")"
        ], 
        [
          "Local", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"LOCAL\")"
        ], 
        [
          "Normal", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"NORMAL\")"
        ], 
        [
          "Global", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"GLOBAL\")"
        ], 
        [
          "Delete", 
          "COMMAND", 
          "ZOOMOUT", 
          "bpy.ops.transform.delete_orientation()"
        ], 
        [
          "Create", 
          "COMMAND", 
          "ZOOMIN", 
          "bpy.ops.transform.create_orientation()"
        ], 
        [
          "Gimbal", 
          "COMMAND", 
          "", 
          "bpy.ops.object.orientationvariable(variable=\"GIMBAL\")"
        ], 
        [
          "Transform Orientation", 
          "CUSTOM", 
          "NONE", 
          "L.column().prop(C.space_data, 'transform_orientation', '')"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Pie Menu", 
      "Window", 
      "alt+SPACE", 
      [
        [
          "Normal", 
          "COMMAND", 
          "ORIENTATION_NORMAL", 
          "bpy.context.scene.type = 'NORMAL'"
        ], 
        [
          "View", 
          "COMMAND", 
          "ORIENTATION_VIEW", 
          "bpy.context.scene.type = 'VIEW'"
        ], 
        [
          "Local", 
          "COMMAND", 
          "ORIENTATION_LOCAL", 
          "C.scene.transform_orientation_slots[0].type = 'LOCAL'"
        ], 
        [
          "Global", 
          "COMMAND", 
          "ORIENTATION_GLOBAL", 
          "C.scene.transform_orientation_slots[0].type = 'GLOBAL'"
        ], 
        [
          "Gimbal", 
          "COMMAND", 
          "ORIENTATION_GIMBAL", 
          "bpy.context.scene.type = 'GIMBAL'"
        ], 
        [
          "Cursor", 
          "COMMAND", 
          "ORIENTATION_CURSOR", 
          "bpy.context.scene.type = 'CURSOR'"
        ], 
        [
          "", 
          "CUSTOM", 
          "NONE", 
          "L.column().prop(C.scene.transform_orientation_slots[0], 'type', text=slot, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "", 
          "bpy.ops.transform.create_orientation(use=True)"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Tools", 
      "Window", 
      "ctrl+SPACE", 
      [
        [
          "Tools", 
          "COMMAND", 
          "", 
          "bpy.ops.wm.toolbar()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Viewport", 
      "Window", 
      "SPACE", 
      [
        [
          "Screen Left", 
          "HOTKEY", 
          "PLAY_REVERSE", 
          "ctrl+PAGE_UP"
        ], 
        [
          "Screen Right", 
          "HOTKEY", 
          "PLAY", 
          "ctrl+PAGE_DOWN"
        ], 
        [
          "Header", 
          "PROP", 
          "GRIP", 
          "C.space_data.show_region_header"
        ], 
        [
          "Tool Settings", 
          "PROP", 
          "TOOL_SETTINGS", 
          "C.space_data.show_region_tool_header"
        ], 
        [
          "Tool Shelf", 
          "HOTKEY", 
          "MENU_PANEL", 
          "T"
        ], 
        [
          "Properties", 
          "HOTKEY", 
          "MOD_TRIANGULATE", 
          "N"
        ], 
        [
          "File", 
          "COMMAND", 
          "FILE_BLANK", 
          "bpy.ops.wm.call_menu(name='TOPBAR_MT_file')"
        ], 
        [
          "Viewport Screens", 
          "MENU", 
          "BLENDER", 
          "@Viewport Screens"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Viewport Screens", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Modeling", 
          "COMMAND", 
          "VIEW3D", 
          "bpy.ops.pme.screen_set(name='Modeling')"
        ], 
        [
          "UV", 
          "COMMAND", 
          "UV", 
          "bpy.ops.pme.screen_set(name=\"UV Editing\")"
        ], 
        [
          "Pie Menu Editor", 
          "COMMAND", 
          "SCRIPTWIN", 
          "bpy.ops.pme.popup_addon_preferences(addon='pie_menu_editor', center=True)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=False", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Viewport Fullscreen Macro", 
      "Window", 
      "SPACE", 
      [
        [
          "Toggle Maximize Area", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.screen.screen_full_area(use_hide_panels=True)"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Viewport Fullscreen Macro.001", 
      "Window", 
      "SPACE", 
      [
        [
          "Toggle Window Fullscreen", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.wm.window_fullscreen_toggle()"
        ]
      ], 
      "MACRO", 
      "m?", 
      "DOUBLE_CLICK", 
      "", 
      ""
    ], 
    [
      "Curve: Mode", 
      "3D View", 
      "TAB", 
      [
        [
          ""
        ], 
        [
          ""
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "", 
          "bpy.ops.object.mode_set(mode='EDIT')"
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "OBJECT_DATAMODE", 
          "bpy.ops.object.mode_set(mode='OBJECT')"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "return C.active_object and C.active_object.type == 'CURVE'", 
      ""
    ], 
    [
      "Grease Pencil: Mode", 
      "3D View", 
      "TAB", 
      [
        [
          "Points", 
          "COMMAND", 
          "GP_SELECT_POINTS", 
          "bpy.ops.object.mode_set(mode='EDIT_GPENCIL'); C.scene.tool_settings.gpencil_selectmode_edit = 'POINT'"
        ], 
        [
          "Segment", 
          "COMMAND", 
          "GP_SELECT_BETWEEN_STROKES", 
          "bpy.ops.object.mode_set(mode='EDIT_GPENCIL'); C.scene.tool_settings.gpencil_selectmode_edit = 'SEGMENT'"
        ], 
        [
          "Stroke", 
          "COMMAND", 
          "GP_SELECT_STROKES", 
          "bpy.ops.object.mode_set(mode='EDIT_GPENCIL'); C.scene.tool_settings.gpencil_selectmode_edit = 'STROKE'"
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "OBJECT_DATAMODE", 
          "bpy.ops.object.mode_set(mode='OBJECT')"
        ], 
        [
          ""
        ], 
        [
          "Sculpt", 
          "COMMAND", 
          "SCULPTMODE_HLT", 
          "bpy.ops.object.mode_set(mode='SCULPT_GPENCIL')"
        ], 
        [
          "Weight Paint", 
          "COMMAND", 
          "WPAINT_HLT", 
          "bpy.ops.object.mode_set(mode='WEIGHT_GPENCIL')"
        ], 
        [
          "Draw", 
          "COMMAND", 
          "GREASEPENCIL", 
          "bpy.ops.object.mode_set(mode='PAINT_GPENCIL')"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "return C.active_object and C.active_object.type == 'GPENCIL'", 
      ""
    ], 
    [
      "Lattice: Mode", 
      "3D View", 
      "TAB", 
      [
        [
          ""
        ], 
        [
          ""
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "", 
          "bpy.ops.object.mode_set(mode='EDIT')"
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "OBJECT_DATAMODE", 
          "bpy.ops.object.mode_set(mode='OBJECT')"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "return C.active_object and C.active_object.type == 'LATTICE'", 
      ""
    ], 
    [
      "Metaball: Mode", 
      "3D View", 
      "TAB", 
      [
        [
          ""
        ], 
        [
          ""
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "", 
          "bpy.ops.object.mode_set(mode='EDIT')"
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "OBJECT_DATAMODE", 
          "bpy.ops.object.mode_set(mode='OBJECT')"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "return C.active_object and C.active_object.type == 'META'", 
      ""
    ], 
    [
      "Object, Mesh, Sculpt: mode", 
      "Mesh, Object Mode, Sculpt", 
      "TAB", 
      [
        [
          "Vertices", 
          "COMMAND", 
          "VERTEXSEL", 
          "bpy.ops.object.mode_set(mode='EDIT'); bpy.ops.wm.context_set_value(data_path=\"tool_settings.mesh_select_mode\", value= \"(True, False, False)\"); redraw_screen()"
        ], 
        [
          "Faces", 
          "COMMAND", 
          "FACESEL", 
          "bpy.ops.object.mode_set(mode='EDIT'); bpy.ops.wm.context_set_value(data_path=\"tool_settings.mesh_select_mode\", value= \"(False, False, True)\"); redraw_screen()"
        ], 
        [
          "Edges", 
          "COMMAND", 
          "EDGESEL", 
          "bpy.ops.object.mode_set(mode='EDIT'); bpy.ops.wm.context_set_value(data_path=\"tool_settings.mesh_select_mode\", value= \"(False, True, False)\"); redraw_screen()"
        ], 
        [
          "Sculpt Mode", 
          "COMMAND", 
          "SCULPTMODE_HLT", 
          "bpy.ops.object.mode_set(mode='SCULPT')"
        ], 
        [
          "Texture Paint", 
          "COMMAND", 
          "TPAINT_HLT", 
          "bpy.ops.object.mode_set(mode='TEXTURE_PAINT')"
        ], 
        [
          "Particle Edit", 
          "COMMAND", 
          "PARTICLEMODE", 
          "bpy.ops.object.mode_set(mode='PARTICLE_EDIT')"
        ], 
        [
          "Weight Paint", 
          "COMMAND", 
          "GREASEPENCIL", 
          "bpy.ops.object.mode_set(mode='WEIGHT_PAINT')"
        ], 
        [
          "Vertex Paint Mode", 
          "COMMAND", 
          "VPAINT_HLT", 
          "bpy.ops.object.mode_set(mode='VERTEX_PAINT')"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "return C.active_object and C.active_object.type == 'MESH'", 
      ""
    ], 
    [
      "Outliner Pie", 
      "Outliner", 
      "TAB", 
      [
        [
          "VIEW_LAYER", 
          "MENU", 
          "RENDERLAYERS", 
          "Outliner: View"
        ], 
        [
          "View Filter", 
          "MENU", 
          "FILTER", 
          "View Filter Outliner"
        ], 
        [
          "Sort", 
          "PROP", 
          "OUTLINER_OB_FONT", 
          "C.space_data.use_sort_alpha"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?pm_radius=32", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Outliner: View", 
      "Window", 
      "", 
      [
        [
          "'SCENES'", 
          "COMMAND", 
          "", 
          "bpy.context.space_data.display_mode = 'SCENES'"
        ], 
        [
          "'VIEW_LAYER'", 
          "COMMAND", 
          "", 
          "bpy.context.space_data.display_mode = 'VIEW_LAYER'"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "View Filter Outliner", 
      "Window", 
      "", 
      [
        [
          " 'ALL'", 
          "COMMAND", 
          "", 
          "bpy.context.space_data.filter_state = 'ALL'"
        ], 
        [
          "'SELECTED'", 
          "COMMAND", 
          "", 
          "bpy.context.space_data.filter_state = 'SELECTED'"
        ], 
        [
          "'HIDDEN'", 
          "COMMAND", 
          "", 
          "bpy.context.space_data.filter_state = 'HIDDEN'"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Properties Tab", 
      "Property Editor", 
      "TAB", 
      [
        [
          "Object", 
          "COMMAND", 
          "OBJECT_DATAMODE", 
          "C.space_data.context = 'OBJECT'"
        ], 
        [
          "Data", 
          "COMMAND", 
          "MESH_DATA", 
          "C.space_data.context = 'DATA'"
        ], 
        [
          "Material", 
          "COMMAND", 
          "MATERIAL_DATA", 
          "C.space_data.context = 'MATERIAL'"
        ], 
        [
          "Modifier", 
          "COMMAND", 
          "MODIFIER", 
          "C.space_data.context = 'MODIFIER'"
        ], 
        [
          "Render", 
          "COMMAND", 
          "RENDER_STILL", 
          "C.space_data.context = 'RENDER'"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?pm_radius=45", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Sculpt: Tab", 
      "Sculpt", 
      "TAB", 
      [
        [
          "Set Object Mode", 
          "COMMAND", 
          "", 
          "bpy.ops.object.mode_set(mode='OBJECT')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap", 
      "3D View Generic", 
      "shift+TAB", 
      [
        [
          "Vertex", 
          "COMMAND", 
          "SNAP_VERTEX", 
          "bpy.context.scene.tool_settings.snap_elements = {'VERTEX'}"
        ], 
        [
          "Face", 
          "COMMAND", 
          "SNAP_FACE", 
          "bpy.context.scene.tool_settings.snap_elements = {'FACE'}"
        ], 
        [
          "Edge", 
          "COMMAND", 
          "SNAP_EDGE", 
          "bpy.context.scene.tool_settings.snap_elements = {'EDGE'}"
        ], 
        [
          "Increment", 
          "COMMAND", 
          "SNAP_INCREMENT", 
          "bpy.context.scene.tool_settings.snap_elements = {'INCREMENT'}"
        ], 
        [
          "Volume", 
          "COMMAND", 
          "SNAP_VOLUME", 
          "bpy.context.scene.tool_settings.snap_elements = {'VOLUME'}"
        ], 
        [
          "Absolute Grid Snap", 
          "PROP", 
          "SNAP_GRID", 
          "C.scene.tool_settings.use_snap_grid_absolute"
        ], 
        [
          "Align Rotation to Target", 
          "PROP", 
          "SNAP_NORMAL", 
          "C.scene.tool_settings.use_snap_align_rotation"
        ], 
        [
          "Snap Target", 
          "MENU", 
          "DOWNARROW_HLT", 
          "Snap Target"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Snap Target", 
      "Window", 
      "", 
      [
        [
          "Closest", 
          "COMMAND", 
          "NONE", 
          "C.scene.tool_settings.snap_target = 'CLOSEST'"
        ], 
        [
          "Median", 
          "COMMAND", 
          "NONE", 
          "C.scene.tool_settings.snap_target = 'MEDIAN'"
        ], 
        [
          "Center", 
          "COMMAND", 
          "NONE", 
          "C.scene.tool_settings.snap_target = 'CENTER'"
        ], 
        [
          "Active", 
          "COMMAND", 
          "NONE", 
          "C.scene.tool_settings.snap_target = 'ACTIVE'"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?pm_radius=20", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Sets", 
      "3D View Generic", 
      "ctrl+shift+TAB", 
      [
        [
          "Snap Set: Vertex", 
          "MENU", 
          "VERTEXSEL", 
          "Snap Set: Vertex"
        ], 
        [
          "Snap Set:Grid", 
          "MENU", 
          "GRID", 
          "Snap Set:Grid"
        ], 
        [
          "Snap Set: Bones", 
          "MENU", 
          "PMARKER", 
          "Snap Set: Bones"
        ], 
        [
          ""
        ], 
        [
          "Snap Set: Retopo", 
          "MENU", 
          "MESH_DATA", 
          "Snap Set: Retopo"
        ], 
        [
          "Snap Set: Place", 
          "MENU", 
          "SNAP_NORMAL", 
          "Snap Set: Place"
        ], 
        [
          "Snap Set: Middle Edge", 
          "MENU", 
          "EDGESEL", 
          "Snap Set: Middle Edge"
        ], 
        [
          "Snap Set: Modular", 
          "MENU", 
          "OBJECT_DATAMODE", 
          "Snap Set: Modular"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Set: Vertex", 
      "Mesh, Object Mode", 
      "", 
      [
        [
          "Snap = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap = False"
        ], 
        [
          "Snap Element = {'VERTEX'}", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_elements = {'VERTEX'}"
        ], 
        [
          "Snap Target = 'CLOSEST'", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_target = 'CLOSEST'"
        ], 
        [
          "Project onto Self = True", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_self = True"
        ], 
        [
          "Align Rotation to Target = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_align_rotation = False"
        ], 
        [
          "Project Individual Elements = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_project = False"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Set:Grid", 
      "Window", 
      "", 
      [
        [
          "Snap = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap = False"
        ], 
        [
          "Snap Element = {'INCREMENT'}", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_elements = {'INCREMENT'}"
        ], 
        [
          "Absolute Grid Snap = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_grid_absolute = False"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Set: Bones", 
      "Window", 
      "", 
      [
        [
          "Snap = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap = False"
        ], 
        [
          "Snap Element = {'VOLUME'}", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_elements = {'VOLUME'}"
        ], 
        [
          "Snap Target = 'CENTER'", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_target = 'CENTER'"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Set: Retopo", 
      "Window", 
      "", 
      [
        [
          "Snap = True", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap = True"
        ], 
        [
          "Snap Element = {'FACE'}", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_elements = {'FACE'}"
        ], 
        [
          "Project Individual Elements = True", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_project = True"
        ], 
        [
          "Project onto Self = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_self = False"
        ], 
        [
          "Snap Target = 'CENTER'", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_target = 'CENTER'"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Set: Place", 
      "Window", 
      "", 
      [
        [
          "Snap = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap = False"
        ], 
        [
          "Snap Element = {'FACE'}", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_elements = {'FACE'}"
        ], 
        [
          "Align Rotation to Target = True", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_align_rotation = True"
        ], 
        [
          "Snap Target = 'CENTER'", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_target = 'CENTER'"
        ], 
        [
          "Project Individual Elements = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_project = False"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Set: Middle Edge", 
      "Mesh, Object Mode", 
      "", 
      [
        [
          "Snap = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap = False"
        ], 
        [
          "Snap Element = {'EDGE'}", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_elements = {'EDGE'}"
        ], 
        [
          "Snap Target = 'CENTER'", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_target = 'CENTER'"
        ], 
        [
          "Project onto Self = True", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_self = True"
        ], 
        [
          "Align Rotation to Target = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_align_rotation = False"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Set: Modular", 
      "Mesh, Object Mode", 
      "", 
      [
        [
          "Snap = False", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap = False"
        ], 
        [
          "Snap Element = {'INCREMENT'}", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_elements = {'INCREMENT'}"
        ], 
        [
          "Snap Target = 'ACTIVE'", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.snap_target = 'ACTIVE'"
        ], 
        [
          "Absolute Grid Snap = True", 
          "COMMAND", 
          "TEXT", 
          "C.scene.tool_settings.use_snap_grid_absolute = True"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap UV", 
      "UV Editor", 
      "shift+TAB", 
      [
        [
          "Vertex", 
          "COMMAND", 
          "SNAP_VERTEX", 
          "bpy.context.scene.tool_settings.snap_uv_element = 'VERTEX'"
        ], 
        [
          "UV: Pixel Snap", 
          "MENU", 
          "", 
          "UV: Pixel Snap"
        ], 
        [
          ""
        ], 
        [
          "Increment", 
          "COMMAND", 
          "SNAP_INCREMENT", 
          "bpy.context.scene.tool_settings.snap_uv_element = 'INCREMENT'"
        ], 
        [
          "Active", 
          "COMMAND", 
          "NONE", 
          "bpy.context.scene.tool_settings.snap_target = 'ACTIVE'"
        ], 
        [
          "Median", 
          "COMMAND", 
          "NONE", 
          "bpy.context.scene.tool_settings.snap_target = 'MEDIAN'"
        ], 
        [
          "Center", 
          "COMMAND", 
          "NONE", 
          "bpy.context.scene.tool_settings.snap_target = 'CENTER'"
        ], 
        [
          "Closest", 
          "COMMAND", 
          "NONE", 
          "bpy.context.scene.tool_settings.snap_target = 'CLOSEST'"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV: Pixel Snap", 
      "UV Editor", 
      "", 
      [
        [
          "Snap to Pixels = 'DISABLED'", 
          "COMMAND", 
          "NONE", 
          "C.space_data.uv_editor.pixel_snap_mode = 'DISABLED'"
        ], 
        [
          "Snap to Pixels = 'DISABLED'", 
          "COMMAND", 
          "NONE", 
          "C.space_data.uv_editor.pixel_snap_mode = 'DISABLED'"
        ], 
        [
          "Snap to Pixels = 'DISABLED'", 
          "COMMAND", 
          "NONE", 
          "C.space_data.uv_editor.pixel_snap_mode = 'DISABLED'"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Surface: Mode", 
      "3D View", 
      "TAB", 
      [
        [
          ""
        ], 
        [
          ""
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "", 
          "bpy.ops.object.mode_set(mode='EDIT')"
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "OBJECT_DATAMODE", 
          "bpy.ops.object.mode_set(mode='OBJECT')"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "return C.active_object and C.active_object.type == 'SURFACE'", 
      ""
    ], 
    [
      "UV: Mode", 
      "Image Generic, UV Editor", 
      "TAB", 
      [
        [
          "Vertex", 
          "COMMAND", 
          "UV_VERTEXSEL", 
          "C.scene.tool_settings.uv_select_mode = 'VERTEX'"
        ], 
        [
          "Face", 
          "COMMAND", 
          "UV_FACESEL", 
          "C.scene.tool_settings.uv_select_mode = 'FACE'"
        ], 
        [
          "Edge", 
          "COMMAND", 
          "UV_EDGESEL", 
          "C.scene.tool_settings.uv_select_mode = 'EDGE'"
        ], 
        [
          "Island", 
          "COMMAND", 
          "UV_ISLANDSEL", 
          "C.scene.tool_settings.uv_select_mode = 'ISLAND'"
        ], 
        [
          "Paint", 
          "COMMAND", 
          "TPAINT_HLT", 
          "C.space_data.mode = 'PAINT'"
        ], 
        [
          "UV Sculpt", 
          "PROP", 
          "TPAINT_HLT", 
          "C.scene.tool_settings.use_uv_sculpt"
        ], 
        [
          "Mask", 
          "COMMAND", 
          "MOD_MASK", 
          "C.space_data.mode = 'MASK'"
        ], 
        [
          "View", 
          "COMMAND", 
          "IMAGE_DATA", 
          "C.space_data.mode = 'VIEW'"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "UV Viewport", 
      "Mesh, Object Mode, UV Editor", 
      "U", 
      [
        [
          "Remove Seam and Update", 
          "COMMAND", 
          "ZOOMOUT", 
          "bpy.ops.mesh.mark_seam(clear=True); bpy.ops.mesh.select_all(action='SELECT'); bpy.ops.uv.unwrap(); bpy.ops.mesh.select_all(action='DESELECT')"
        ], 
        [
          "Add Seam and Update", 
          "COMMAND", 
          "ZOOMIN", 
          "bpy.ops.mesh.mark_seam(clear=False); bpy.ops.mesh.select_all(action='SELECT'); bpy.ops.uv.unwrap(); bpy.ops.mesh.select_all(action='DESELECT')"
        ], 
        [
          "UV Popup", 
          "MENU", 
          "", 
          "@@UV Popup"
        ], 
        [
          "Unwrap", 
          "COMMAND", 
          "MESH_GRID", 
          "obj_mode = C.active_object.mode; O.object.mode_set(mode='EDIT'); O.uv.unwrap(method='ANGLE_BASED', margin=0.001); O.object.mode_set(mode=obj_mode)"
        ], 
        [
          "Mirror Uv", 
          "COMMAND", 
          "MOD_MIRROR", 
          "bpy.ops.uv.muv_mirror_uv()"
        ], 
        [
          "Checker Map", 
          "COMMAND", 
          "NONE", 
          "bpy.ops.uv.textools_texel_checker_map()"
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?pm_radius=50", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "UV Popup", 
      "Mesh, Object Mode", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "Current Area", 
          "CUSTOM", 
          "", 
          "header_menu([\"CURRENT\"])"
        ], 
        [
          "row?"
        ], 
        [
          "BRM UVTranslate", 
          "COMMAND", 
          "#MAN_TRANS", 
          "bpy.ops.uv.brm_uvtranslate()"
        ], 
        [
          "BRM UVRotate", 
          "COMMAND", 
          "#MAN_ROT", 
          "bpy.ops.uv.brm_uvrotate()"
        ], 
        [
          "BRM UVScale", 
          "COMMAND", 
          "#MAN_SCALE", 
          "bpy.ops.uv.brm_uvscale()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "3D View UV Move to UV Edge", 
          "COMMAND", 
          "#TRIA_UP_BAR", 
          "bpy.ops.uv.brm_uvmovetoedge(direction='up')"
        ], 
        [
          "3D View UV Move to UV Edge", 
          "COMMAND", 
          "#TRIA_DOWN_BAR", 
          "bpy.ops.uv.brm_uvmovetoedge(direction='down')"
        ], 
        [
          "3D View UV Move to UV Edge", 
          "COMMAND", 
          "#TRIA_LEFT_BAR", 
          "bpy.ops.uv.brm_uvmovetoedge(direction='left')"
        ], 
        [
          "3D View UV Move to UV Edge", 
          "COMMAND", 
          "#TRIA_RIGHT_BAR", 
          "bpy.ops.uv.brm_uvmovetoedge(direction='right')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "UV Mapping", 
          "CUSTOM", 
          "#GROUP_UVS", 
          "L.menu(\"VIEW3D_MT_UV_Map\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Extend", 
          "COMMAND", 
          "MOD_SHRINKWRAP", 
          "bpy.ops.uv.brm_uvextend()"
        ], 
        [
          "Stitch", 
          "COMMAND", 
          "MOD_TRIANGULATE", 
          "bpy.ops.uv.brm_uvstitch()"
        ], 
        [
          "Transfer", 
          "COMMAND", 
          "MOD_UVPROJECT", 
          "bpy.ops.uv.brm_uvtransfer()"
        ], 
        [
          "row"
        ], 
        [
          "Copy Uv", 
          "COMMAND", 
          "PASTEFLIPUP", 
          "bpy.ops.uv.muv_cpuv_copy_uv(uv_map=\"\")"
        ], 
        [
          "Scale Measure", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.muv_wsuv_measure()"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Paste Uv", 
          "COMMAND", 
          "PASTEFLIPDOWN", 
          "bpy.ops.uv.muv_cpuv_paste_uv(uv_map=\"\")"
        ], 
        [
          "Scale Apply", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.muv_wsuv_apply()"
        ], 
        [
          "row"
        ], 
        [
          "Unwrap Constraint", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.muv_unwrap_constraint()"
        ], 
        [
          "row"
        ], 
        [
          "Flip/Rotate UV", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.muv_fliprot()"
        ], 
        [
          "row"
        ], 
        [
          "Texture Lock Start (Interactive mode)", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.muv_texlock_intr_start()"
        ], 
        [
          "row"
        ], 
        [
          "Texture Lock Updater", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.muv_texlock_updater()"
        ], 
        [
          "row"
        ], 
        [
          "Texture Lock Updater", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.muv_texlock_updater()"
        ], 
        [
          "row?"
        ], 
        [
          "Transfer Copy", 
          "COMMAND", 
          "COPYDOWN", 
          "bpy.ops.uv.muv_transuv_copy()"
        ], 
        [
          "Transfer Paste", 
          "COMMAND", 
          "PASTEDOWN", 
          "bpy.ops.uv.muv_transuv_paste()"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align UV", 
      "UV Editor", 
      "W", 
      [
        [
          "Align Left", 
          "COMMAND", 
          "TRIA_LEFT", 
          "bpy.ops.uv.textools_align(direction='left')"
        ], 
        [
          "Align Right", 
          "COMMAND", 
          "TRIA_RIGHT", 
          "bpy.ops.uv.textools_align(direction='right')"
        ], 
        [
          "Align Bottom", 
          "COMMAND", 
          "TRIA_DOWN", 
          "bpy.ops.uv.textools_align(direction='bottom')"
        ], 
        [
          "Align Top", 
          "COMMAND", 
          "TRIA_UP", 
          "bpy.ops.uv.textools_align(direction='top')"
        ], 
        [
          "Weld", 
          "COMMAND", 
          "AUTOMERGE_ON", 
          "bpy.ops.uv.weld()"
        ], 
        [
          "Remove Doubles UV", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.remove_doubles()"
        ], 
        [
          "Align UV List", 
          "MENU", 
          "", 
          "@Align UV List 2"
        ], 
        [
          "Align UV List", 
          "MENU", 
          "", 
          "@Align UV List"
        ]
      ], 
      "PMENU", 
      "pm?pm_radius=75", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align UV List 2", 
      "UV Editor", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "Align Island to Edge", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.rotationuv()"
        ], 
        [
          "row"
        ], 
        [
          "Equalize UV Chains", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.equalize()"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align UV List", 
      "UV Editor", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "Align", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.align(axis='ALIGN_AUTO')"
        ], 
        [
          "row"
        ], 
        [
          "Match Island", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.match_island()"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Decimate", 
      "Mesh", 
      "ctrl+shift+alt+W", 
      [
        [
          "On Invoke", 
          "INVOKE", 
          "", 
          "bpy.ops.mesh.decimate()"
        ], 
        [
          "Ratio", 
          "PROP", 
          "MOUSEMOVE;;;;", 
          "C.active_operator.decimate_ratio"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Subdivide / Unsubdivide", 
      "Mesh", 
      "alt+W", 
      [
        [
          "delta = 0; level = 0; smoothness = 0", 
          "INVOKE", 
          "", 
          "delta = 0; level = 0; smoothness = 0"
        ], 
        [
          "Tool", 
          "PROP", 
          "alt+LEFTMOUSE;;;;\"Unsubdivide %d\" % abs(level) if level < 0 else (\"None\" if level == 0 else \"Subdivide %d\" % level)", 
          "delta"
        ], 
        [
          "level += delta", 
          "UPDATE", 
          "", 
          "level += delta"
        ], 
        [
          "Unsubdivide if level < 0 and delta < 0", 
          "UPDATE", 
          "", 
          "bpy.ops.mesh.unsubdivide(True) if level < 0 and delta < 0 else None"
        ], 
        [
          "Subdivide  if level == 1 and delta > 0", 
          "UPDATE", 
          "", 
          "bpy.ops.mesh.subdivide(True, smoothness=smoothness, number_cuts=1) if level == 1 and delta > 0 else None"
        ], 
        [
          "Redo Subdivide  if level >= 1", 
          "UPDATE", 
          "", 
          "(setattr(C.active_operator, \"number_cuts\", level), bpy.ops.ed.undo_redo(True)) if level >= 1 else None"
        ], 
        [
          "Undo otherwise", 
          "UPDATE", 
          "", 
          "bpy.ops.ed.undo() if level == 0 or level < 0 and delta > 0 else None"
        ], 
        [
          "delta = 0", 
          "UPDATE", 
          "", 
          "delta = 0"
        ], 
        [
          "Smoothness", 
          "PROP", 
          "alt+WHEELUPMOUSE;0.0;1.0;0.10000000149011612;", 
          "smoothness"
        ], 
        [
          "Redo Subdivide  if level >= 1", 
          "UPDATE", 
          "", 
          "(setattr(C.active_operator, \"smoothness\", smoothness), bpy.ops.ed.undo_redo(True)) if level >= 1 else None"
        ], 
        [
          "Make Normals Consistent", 
          "FINISH", 
          "", 
          "bpy.ops.mesh.normals_make_consistent(inside=False )"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Subdivide / Unsubdivide Smooth", 
      "Mesh", 
      "shift+alt+W", 
      [
        [
          "On Invoke", 
          "INVOKE", 
          "", 
          "delta = 0"
        ], 
        [
          "Subdivide / unsubdivide Smooth", 
          "UPDATE", 
          "", 
          "bpy.ops.mesh.unsubdivide() if delta <0 else bpy.ops.mesh.subdivide(smoothness=1.0); delta = 0"
        ], 
        [
          "Delta", 
          "PROP", 
          "MOUSEMOVE;-10.0;10.0;;", 
          "delta"
        ], 
        [
          "Make Normals Consistent", 
          "FINISH", 
          "", 
          "bpy.ops.mesh.normals_make_consistent(inside=False)"
        ]
      ], 
      "MODAL", 
      "mo?confirm=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Shrink Loop", 
      "Mesh", 
      "ctrl+WHEELDOWNMOUSE", 
      [
        [
          "Shrink Loop", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.shrink_loop()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Shrink Pattern", 
      "Mesh", 
      "alt+WHEELDOWNMOUSE", 
      [
        [
          "Select Previous Element", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_prev_item()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Shrink Ring", 
      "Mesh", 
      "ctrl+alt+WHEELDOWNMOUSE", 
      [
        [
          "Shrink Ring", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.z_shrink_ring()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Shrink Selection", 
      "Mesh", 
      "shift+WHEELDOWNMOUSE", 
      [
        [
          "Select Less", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_less(use_face_step=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object: Hierarchy Down", 
      "Object Mode", 
      "ctrl+WHEELDOWNMOUSE", 
      [
        [
          "[", 
          "HOTKEY", 
          "", 
          "LEFT_BRACKET"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object: Hierarchy Down +", 
      "Object Mode", 
      "ctrl+shift+WHEELDOWNMOUSE", 
      [
        [
          "s+[", 
          "HOTKEY", 
          "", 
          "shift+LEFT_BRACKET"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV: Shrink Selection", 
      "UV Editor", 
      "shift+WHEELDOWNMOUSE", 
      [
        [
          "Select Less", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.select_less()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Grow Loop", 
      "Mesh", 
      "ctrl+WHEELUPMOUSE", 
      [
        [
          "Grow Loop", 
          "COMMAND", 
          "NONE", 
          "bpy.ops.mesh.grow_loop()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Grow Pattern", 
      "Mesh", 
      "alt+WHEELUPMOUSE", 
      [
        [
          "Select Next Element", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_next_item()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Grow Ring", 
      "Mesh", 
      "ctrl+alt+WHEELUPMOUSE", 
      [
        [
          "Grow Ring", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.z_grow_ring()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Grow Selection", 
      "Mesh", 
      "shift+WHEELUPMOUSE", 
      [
        [
          "Select More", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.select_more(use_face_step=True)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object: Hierachy Up", 
      "Object Mode", 
      "ctrl+WHEELUPMOUSE", 
      [
        [
          "]", 
          "HOTKEY", 
          "", 
          "RIGHT_BRACKET"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object: Hierachy Up +", 
      "Object Mode", 
      "ctrl+shift+WHEELUPMOUSE", 
      [
        [
          "s+]", 
          "HOTKEY", 
          "", 
          "shift+RIGHT_BRACKET"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV: Grow Selection", 
      "UV Editor", 
      "shift+WHEELUPMOUSE", 
      [
        [
          "Select More", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.select_more()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Delete:Edge", 
      "Mesh", 
      "X", 
      [
        [
          "Delete", 
          "COMMAND", 
          "NONE", 
          "bpy.ops.mesh.delete(type='EDGE')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "return C.scene.tool_settings.mesh_select_mode[1]", 
      ""
    ], 
    [
      "Delete:Face", 
      "Mesh", 
      "X", 
      [
        [
          "Delete", 
          "COMMAND", 
          "NONE", 
          "bpy.ops.mesh.delete(type='FACE')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "return C.scene.tool_settings.mesh_select_mode[2]", 
      ""
    ], 
    [
      "Delete:Vertex", 
      "Mesh", 
      "X", 
      [
        [
          "Delete", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.delete(type='VERT')"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "return C.scene.tool_settings.mesh_select_mode[0]", 
      ""
    ], 
    [
      "Dissolve Stack", 
      "Mesh", 
      "ctrl+X", 
      [
        [
          "Dissolve Selection", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.dissolve_mode(use_verts=True)"
        ], 
        [
          "Dissolve Selection Keep Verts", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.dissolve_mode(use_verts=False)"
        ], 
        [
          "Limited Dissolve", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.dissolve_limited()"
        ]
      ], 
      "SCRIPT", 
      "s?s_undo=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Cut", 
      "Mesh, Object Mode", 
      "alt+X", 
      [
        [
          "Snap Utilities Line", 
          "COMMAND", 
          "IPO_LINEAR", 
          "bpy.ops.mesh.snap_utilities_line()"
        ], 
        [
          "Bisect", 
          "COMMAND", 
          "MOD_DECIM", 
          "bpy.ops.mesh.bisect(clear_outer=True) "
        ], 
        [
          "Knife Topology Tool", 
          "COMMAND", 
          "SCULPTMODE_HLT", 
          "bpy.ops.mesh.knife_tool(use_occlude_geometry=True, only_selected=False)"
        ], 
        [
          "Cut Tool", 
          "COMMAND", 
          "IPO_CONSTANT", 
          "bpy.ops.mesh.cut_tool()"
        ], 
        [
          "Vertex Connect", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.vert_connect()"
        ], 
        [
          "Subdivide", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.subdivide()"
        ], 
        [
          "Intersect (Knife)", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.intersect()"
        ], 
        [
          "Intersect (Boolean)", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.intersect_boolean()"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Delete", 
      "Mesh", 
      "X", 
      [
        [
          "Delete Vertices", 
          "COMMAND", 
          "VERTEXSEL", 
          "bpy.ops.mesh.delete(type='VERT')"
        ], 
        [
          "Delete Faces", 
          "COMMAND", 
          "FACESEL", 
          "bpy.ops.mesh.delete(type='FACE')"
        ], 
        [
          "Delete Edges", 
          "COMMAND", 
          "EDGESEL", 
          "bpy.ops.mesh.delete(type='EDGE')"
        ], 
        [
          "Dissolve Edges", 
          "COMMAND", 
          "SNAP_EDGE", 
          "bpy.ops.mesh.z_delete_mode()"
        ], 
        [
          "Dissolve Vertices", 
          "COMMAND", 
          "SNAP_VERTEX", 
          "bpy.ops.mesh.dissolve_edges()"
        ], 
        [
          "Dissolve Faces", 
          "COMMAND", 
          "SNAP_FACE", 
          "bpy.ops.mesh.dissolve_faces()"
        ], 
        [
          "Delete Left", 
          "MENU", 
          "", 
          "@Delete Left"
        ], 
        [
          "Delete Right", 
          "MENU", 
          "", 
          "@Delete Right"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "HOLD", 
      "", 
      ""
    ], 
    [
      "Delete Left", 
      "Mesh", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Limited Dissolve", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.dissolve_limited()"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Delete Edge Loop", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.delete_edgeloop()"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Edge Collapse", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.edge_collapse()"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=&pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Delete Right", 
      "Mesh", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Only Edges&Faces", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.delete(type='EDGE_FACE')"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Only Faces", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.delete(type='ONLY_FACE')"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=&pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh: Merge", 
      "Mesh", 
      "shift+X", 
      [
        [
          "At First", 
          "COMMAND", 
          "SPACE3", 
          "bpy.ops.mesh.merge(type='FIRST')"
        ], 
        [
          "At Last", 
          "COMMAND", 
          "SPACE2", 
          "bpy.ops.mesh.merge(type='LAST')"
        ], 
        [
          "At Center", 
          "COMMAND", 
          "ROTATECENTER", 
          "bpy.ops.mesh.merge(type='CENTER')"
        ], 
        [
          "Collapse", 
          "COMMAND", 
          "STICKY_UVS_LOC", 
          "bpy.ops.mesh.merge(type='COLLAPSE')"
        ], 
        [
          "At Cursor", 
          "COMMAND", 
          "CURSOR", 
          "bpy.ops.mesh.merge(type='CURSOR')"
        ], 
        [
          "Merge By Distance", 
          "COMMAND", 
          "FORCE_CHARGE", 
          "bpy.ops.mesh.remove_doubles()"
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt: Mask Clear", 
      "Sculpt", 
      "X", 
      [
        [
          "Clear Mask", 
          "COMMAND", 
          "PANEL_CLOSE", 
          "bpy.ops.paint.mask_flood_fill(mode='VALUE', value=0.0)"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "3D: Shading Toggle", 
      "3D View", 
      "Z", 
      [
        [
          "Show Overlays = True", 
          "COMMAND", 
          "NONE", 
          "C.space_data.overlay.show_overlays = True"
        ], 
        [
          "Show Overlays = False", 
          "COMMAND", 
          "NONE", 
          "C.space_data.overlay.show_overlays = False"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Popup Dialog", 
      "3D View", 
      "shift+Z", 
      [
        [
          "row?fixed_col=True"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Gizmo Settings", 
          "MENU", 
          "", 
          "@Gizmo Settings"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Shading 2 Panel.002", 
          "MENU", 
          "", 
          "@View / Collections"
        ], 
        [
          "row?fixed_col=True"
        ], 
        [
          "Button 6", 
          "COMMAND", 
          "", 
          ""
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Shading 2 Panel.002", 
          "MENU", 
          "", 
          "@Shading Panel 3"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=2&pd_title=False&pd_width=616", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Gizmo Settings", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Gizmo", 
          "CUSTOM", 
          "", 
          "panel(\"VIEW3D_PT_gizmo_display\", frame=False, header=False, expand=None)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "View / Collections", 
      "Window", 
      "", 
      [
        [
          "row?vspacer=NONE"
        ], 
        [
          "View", 
          "CUSTOM", 
          "", 
          "L.label(text=text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Clip:", 
          "CUSTOM", 
          "", 
          "L.label(text=text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "0.1", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.clip_start = 0.1"
        ], 
        [
          "0.01", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.clip_start = 0.01"
        ], 
        [
          "0.001", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.clip_start = 0.001"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "View", 
          "CUSTOM", 
          "", 
          "panel(\"VIEW3D_PT_view3d_properties\", frame=True, header=False, expand=None)"
        ], 
        [
          "row?"
        ], 
        [
          "Collections", 
          "CUSTOM", 
          "", 
          "L.label(text=text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Collections", 
          "CUSTOM", 
          "", 
          "panel(\"VIEW3D_PT_collections\", frame=True, header=False, expand=None)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Shading Panel 3", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Overlays", 
          "CUSTOM", 
          "", 
          "panel(\"VIEW3D_PT_overlay\", frame=True, header=True, expand=None)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Shading Menu 1", 
      "3D View", 
      "Z", 
      [
        [
          "Grid On/Off", 
          "MENU", 
          "GRID", 
          "Grid On/Off"
        ], 
        [
          "Wires", 
          "PROP", 
          "MOD_WIREFRAME", 
          "C.space_data.overlay.show_wireframes"
        ], 
        [
          "Smooth/Sharp", 
          "MENU", 
          "MESH_CIRCLE", 
          "Smooth/Sharp"
        ], 
        [
          "Gizmos", 
          "PROP", 
          "GIZMO", 
          "C.space_data.show_gizmo"
        ], 
        [
          "Wireframe", 
          "COMMAND", 
          "MOD_WIREFRAME", 
          "C.space_data.shading.type = 'WIREFRAME'"
        ], 
        [
          "Rendered", 
          "COMMAND", 
          "SHADING_RENDERED", 
          "C.space_data.shading.type = 'RENDERED'"
        ], 
        [
          "LookDev", 
          "COMMAND", 
          "SHADING_TEXTURE", 
          "C.space_data.shading.type = 'MATERIAL'"
        ], 
        [
          "Solid", 
          "COMMAND", 
          "SHADING_SOLID", 
          "C.space_data.shading.type = 'SOLID'"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "Grid On/Off", 
      "Window", 
      "", 
      [
        [
          "Grid Off", 
          "COMMAND", 
          "", 
          "C.space_data.overlay.show_axis_x = False; C.space_data.overlay.show_axis_y = False; C.space_data.overlay.show_axis_z = False; C.space_data.overlay.show_floor = False"
        ], 
        [
          "Grid On", 
          "COMMAND", 
          "NONE", 
          "C.space_data.overlay.show_axis_x = True; C.space_data.overlay.show_axis_y = True; C.space_data.overlay.show_axis_z =False; C.space_data.overlay.show_floor = True"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Smooth/Sharp", 
      "Window", 
      "", 
      [
        [
          "Shade Smooth", 
          "COMMAND", 
          "", 
          "bpy.ops.object.shade_smooth(); C.object.data.use_auto_smooth = True; C.object.data.auto_smooth_angle = 3.1415927410125732"
        ], 
        [
          "Shade Flat", 
          "COMMAND", 
          "", 
          "bpy.ops.object.shade_flat()"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Shading Menu 2", 
      "3D View", 
      "shift+Z", 
      [
        [
          "Gizmo", 
          "CUSTOM", 
          "GRID", 
          "keep_pie_open(L); draw_menu(\"Gizmo Settings\")"
        ], 
        [
          "Shading Panel 3", 
          "MENU", 
          "", 
          "@@Shading Panel 3"
        ], 
        [
          "Shading 2 Panel", 
          "MENU", 
          "", 
          "@Shading 2 Panel"
        ], 
        [
          "Shading 2 Panel.002", 
          "MENU", 
          "", 
          "@View / Collections"
        ], 
        [
          "Overlay Settings", 
          "CUSTOM", 
          "MOD_WIREFRAME", 
          "keep_pie_open(L); draw_menu(\"Overlay Settings\")"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Shading 2 Panel", 
      "Window", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "Overlays", 
          "CUSTOM", 
          "OVERLAY", 
          "L.popover(panel='VIEW3D_PT_overlay', text=slot, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row"
        ], 
        [
          "Face Orientation", 
          "PROP", 
          "DOT", 
          "C.space_data.overlay.show_face_orientation"
        ], 
        [
          "Hidden Wire", 
          "PROP", 
          "DOT", 
          "C.space_data.overlay.show_occlude_wire"
        ], 
        [
          "Show Weights", 
          "PROP", 
          "DOT", 
          "C.space_data.overlay.show_weight"
        ], 
        [
          "Stat Vis", 
          "PROP", 
          "DOT", 
          "C.space_data.overlay.show_statvis"
        ], 
        [
          "row?"
        ], 
        [
          "Type", 
          "PROP", 
          "NONE", 
          "C.scene.tool_settings.statvis.type"
        ], 
        [
          "row?"
        ], 
        [
          "Sharp", 
          "PROP", 
          "DOT", 
          "C.space_data.overlay.show_edge_sharp"
        ], 
        [
          "Creases", 
          "PROP", 
          "DOT", 
          "C.space_data.overlay.show_edge_crease"
        ], 
        [
          "Bevel Weights", 
          "PROP", 
          "DOT", 
          "C.space_data.overlay.show_edge_bevel_weight"
        ], 
        [
          "Seams", 
          "PROP", 
          "DOT", 
          "C.space_data.overlay.show_edge_seams"
        ], 
        [
          "row?"
        ], 
        [
          "Annotations", 
          "PROP", 
          "HIDE_OFF", 
          "bpy.data.grease_pencils['Annotations'].layers[\"Note\"].annotation_hide"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Stretch", 
      "UV Editor", 
      "Z", 
      [
        [
          "False", 
          "COMMAND", 
          "", 
          "bpy.context.space_data.uv_editor.show_stretch = False"
        ], 
        [
          "True", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.uv_editor.show_stretch = True"
        ], 
        [
          "UV Stretch Angle/Area", 
          "COMMAND", 
          "NONE", 
          "open_menu(\"UV Stretch Angle/Area\")"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV: Shading Toggle", 
      "UV Editor", 
      "Z", 
      [
        [
          "Command 1", 
          "COMMAND", 
          "", 
          ""
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "\u00d9V Shading Menu", 
      "UV Editor", 
      "Z", 
      [
        [
          "Show Pixel Coords", 
          "PROP", 
          "LINENUMBERS_ON", 
          "C.space_data.uv_editor.show_pixel_coords"
        ], 
        [
          "Draw Faces", 
          "PROP", 
          "MOD_TRIANGULATE", 
          "C.space_data.uv_editor.show_faces"
        ], 
        [
          "UV Drawing Types", 
          "MENU", 
          "MOD_LATTICE", 
          "UV Drawing Types"
        ], 
        [
          "UV Stretch", 
          "MENU", 
          "COLOR_BLUE", 
          "UV Stretch"
        ], 
        [
          "Display Smooth Edges", 
          "PROP", 
          "NONE", 
          "C.space_data.uv_editor.show_smooth_edges"
        ], 
        [
          "Display Modified Edges", 
          "PROP", 
          "NONE", 
          "C.space_data.uv_editor.show_modified_edges"
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "TWEAK", 
      "", 
      ""
    ], 
    [
      "UV Drawing Types", 
      "UV Editor", 
      "", 
      [
        [
          "Outline", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.uv_editor.edge_display_type = 'OUTLINE'"
        ], 
        [
          "Dash", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.uv_editor.edge_display_type = 'DASH'"
        ], 
        [
          "Black", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.uv_editor.edge_display_type = 'BLACK'"
        ], 
        [
          "White", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.uv_editor.edge_display_type = 'WHITE'"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Scene Popup", 
      "3D View Generic", 
      "NUMPAD_ASTERIX+ACCENT_GRAVE", 
      [
        [
          "row?align=LEFT"
        ], 
        [
          "Name", 
          "CUSTOM", 
          "", 
          "panel(T.VIEW3D_PT_view3d_name, frame=False, header=False)"
        ], 
        [
          "row"
        ], 
        [
          "Dimensions", 
          "PROP", 
          "NONE", 
          "bpy.context.object.dimensions"
        ], 
        [
          "row"
        ], 
        [
          "Modifiers", 
          "CUSTOM", 
          "", 
          "panel(T.DATA_PT_modifiers, frame=False, header=False)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_width=250", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "3D View Header", 
      "3D View", 
      "", 
      [
        [
          "3DView Header Pea", 
          "MENU", 
          "", 
          "3DView Header Pea"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "3DView Header Pea", 
      "3D View", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Mesh Check", 
          "PROP", 
          "#COLOR_RED", 
          "bpy.data.window_managers[\"WinMan\"].mesh_check.mesh_check_use"
        ], 
        [
          "Transform", 
          "MENU", 
          "", 
          "Transform"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Use Simplify", 
          "PROP", 
          "#MESH_CUBE", 
          "bpy.context.scene.render.use_simplify"
        ], 
        [
          "Simplify Subdivision", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.render.simplify_subdivision"
        ], 
        [
          "Edit", 
          "COMMAND", 
          "#SETTINGS", 
          "bpy.ops.pme.popup_panel(panel='VIEW3D_PT_opengl_lights_panel', hide_title=True, frame=False, header=False)"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "OpenGL Lights Presets", 
          "COMMAND", 
          "", 
          "bpy.ops.wm.call_menu(name=\"VIEW3D_MT_opengl_lights_presets\")"
        ], 
        [
          "Transform Orientation", 
          "PROP", 
          "NONE", 
          "C.space_data.transform_orientation"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "#ZOOMIN", 
          "bpy.ops.transform.create_orientation()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Show Helper Collection", 
          "COMMAND", 
          "", 
          ""
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Transform", 
      "3D View", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "Transform", 
          "CUSTOM", 
          "", 
          "panel(T.OBJECT_PT_transform, frame=False, header=False, expand=None)"
        ], 
        [
          "row"
        ], 
        [
          "Dimensions", 
          "PROP", 
          "NONE", 
          "bpy.context.object.dimensions"
        ], 
        [
          "row"
        ], 
        [
          "Extra Options", 
          "CUSTOM", 
          "", 
          "panel(\"OBJECT_PT_transform_extra_options\", frame=False, header=False, expand=None)"
        ], 
        [
          "row"
        ], 
        [
          "Transform Locks", 
          "CUSTOM", 
          "", 
          "panel(\"OBJECT_PT_transform_locks_new\", frame=False, header=False, expand=None)"
        ], 
        [
          "row"
        ], 
        [
          "Transform Orientations", 
          "CUSTOM", 
          "", 
          "panel(\"VIEW3D_PT_transform_orientations\", frame=False, header=False, expand=None)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_width=350", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "3DView Display", 
      "3D View", 
      "", 
      [
        [
          "row?fixed_col=True"
        ], 
        [
          "Display", 
          "CUSTOM", 
          "GRID", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Only Render", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.show_only_render"
        ], 
        [
          "World Background", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.show_world"
        ], 
        [
          "Outline Selected", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.show_outline_selected"
        ], 
        [
          "All Object Origins", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.show_all_objects_origin"
        ], 
        [
          "Relationship Lines", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.show_relationship_lines"
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "Grid", 
          "COMMAND", 
          "", 
          "bpy.ops.scene.togglegridaxis()"
        ], 
        [
          "Grid", 
          "MENU", 
          "#SCRIPTWIN", 
          "Grid"
        ], 
        [
          "spacer?subrow=END"
        ], 
        [
          "Wire Selected All", 
          "COMMAND", 
          "", 
          "bpy.ops.wire.selectedall()"
        ], 
        [
          "Toggle Quad View", 
          "COMMAND", 
          "", 
          "bpy.ops.screen.region_quadview()"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Shading", 
          "CUSTOM", 
          "SMOOTH", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Shading", 
          "CUSTOM", 
          "", 
          "panel(T.VIEW3D_PT_view3d_shading, frame=False, header=False, expand=None)"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "View", 
          "CUSTOM", 
          "SCENE", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "Clip:", 
          "CUSTOM", 
          "VISIBLE_IPO_ON", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "0.1", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.clip_start = 0.1"
        ], 
        [
          "0.01", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.clip_start = 0.01"
        ], 
        [
          "0.001", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.clip_start = 0.001"
        ], 
        [
          "spacer?subrow=END"
        ], 
        [
          "Start", 
          "PROP", 
          "NONE", 
          "C.space_data.clip_start"
        ], 
        [
          "End", 
          "PROP", 
          "NONE", 
          "C.space_data.clip_end"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Lens", 
          "PROP", 
          "NONE", 
          "C.space_data.lens"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Lock to Object", 
          "PROP", 
          "NONE", 
          "C.space_data.lock_object"
        ], 
        [
          "Lock to Cursor", 
          "PROP", 
          "NONE", 
          "C.space_data.lock_cursor"
        ], 
        [
          "Lock Camera to View", 
          "PROP", 
          "NONE", 
          "C.space_data.lock_camera"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Render Border", 
          "PROP", 
          "NONE", 
          "C.space_data.use_render_border"
        ], 
        [
          "View", 
          "CUSTOM", 
          "!", 
          "panel(T.VIEW3D_PT_view3d_properties, frame=False, header=False, expand=None)"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Mesh Display", 
          "CUSTOM", 
          "SMOOTH", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Mesh Display", 
          "CUSTOM", 
          "", 
          "panel(\"VIEW3D_PT_view3d_meshdisplay\", frame=False, header=False, expand=None)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_width=500", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Grid", 
      "3D View", 
      "", 
      [
        [
          "row"
        ], 
        [
          "X", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.show_axis_x"
        ], 
        [
          "Y", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.show_axis_y"
        ], 
        [
          "Z", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.show_axis_z"
        ], 
        [
          "row"
        ], 
        [
          "Grid Lines", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.grid_lines"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Grid Scale", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.grid_scale"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Grid Subdivisions", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.grid_subdivisions"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Add_Cylinder_Macro", 
      "Object Mode", 
      "", 
      [
        [
          "Add Bezier Circle", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.curve.primitive_bezier_circle_add(radius=1.0)"
        ], 
        [
          "Dimensions = '2D'", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.object.data.dimensions = '2D'"
        ], 
        [
          "Extrude = 1", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.object.data.extrude = 1"
        ], 
        [
          "Resolution U = 4", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.object.data.resolution_u = 4"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Addons", 
      "3D View", 
      "", 
      [
        [
          "Tessellate", 
          "MENU", 
          "", 
          "tessellate_panel"
        ], 
        [
          "Colors-Weight Exchanger", 
          "MENU", 
          "", 
          "colors_groups_exchanger_panel"
        ], 
        [
          "Dual Mesh", 
          "MENU", 
          "", 
          "dual_mesh_panel"
        ], 
        [
          "Cloning", 
          "MENU", 
          "", 
          "MFTPanelCloning"
        ], 
        [
          "Animations", 
          "MENU", 
          "", 
          "MFTPanelAnimation"
        ], 
        [
          "Sketchfab", 
          "MENU", 
          "", 
          "VIEW3D_PT_sketchfab"
        ], 
        [
          "1D_Scripts", 
          "MENU", 
          "", 
          "Paul_Operator"
        ], 
        [
          "Texel Density Checker", 
          "MENU", 
          "", 
          "VIEW3D_PT_texel_density_checker"
        ], 
        [
          "Snap Utilities", 
          "MENU", 
          "", 
          "PanelSnapUtilities"
        ], 
        [
          "Auto Mirror", 
          "MENU", 
          "", 
          "BisectMirror"
        ], 
        [
          "Align Tools", 
          "MENU", 
          "", 
          "LA_PT_main"
        ], 
        [
          "Curve Conversion", 
          "MENU", 
          "", 
          "OBJECT_PT_convert"
        ], 
        [
          "Welder", 
          "MENU", 
          "", 
          "ToolsPanel"
        ], 
        [
          "NP 020", 
          "MENU", 
          "", 
          "NP_PT_020_base_panel"
        ], 
        [
          "Y.A.V.N.E.", 
          "MENU", 
          "", 
          "VIEW3D_PT_yavne"
        ], 
        [
          "Box Cutter", 
          "MENU", 
          "", 
          "BoxCutterPanel"
        ], 
        [
          "Smooth Deforming", 
          "MENU", 
          "", 
          "WPLSmoothDeform_Panel"
        ], 
        [
          "FBX Bundle", 
          "MENU", 
          "", 
          "FBX_bundle_panel"
        ], 
        [
          "Lights", 
          "MENU", 
          "", 
          "GafferPanelLights"
        ], 
        [
          "Lights", 
          "MENU", 
          "", 
          "GafferPanelLights"
        ], 
        [
          "Tools", 
          "MENU", 
          "", 
          "GafferPanelTools"
        ], 
        [
          "Print3D", 
          "MENU", 
          "", 
          "MESH_PT_print3d_object"
        ], 
        [
          "GCut", 
          "MENU", 
          "", 
          "GC"
        ], 
        [
          "Spline", 
          "MENU", 
          "", 
          "SplinePanel"
        ], 
        [
          "BRM UV Tools", 
          "MENU", 
          "", 
          "BRM_UVPanel"
        ], 
        [
          "Print3D", 
          "MENU", 
          "", 
          "MESH_PT_print3d_mesh"
        ], 
        [
          "Zaloopok", 
          "MENU", 
          "", 
          "VIEW3D_PT_Zaloopok"
        ], 
        [
          "Mira Tools", 
          "MENU", 
          "", 
          "MIRA_Panel"
        ]
      ], 
      "PANEL", 
      "pg?pg_category=Addons", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align Mesh", 
      "Mesh", 
      "", 
      [
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Align Plane", 
      "Window", 
      "", 
      [
        [
          "Snap Cursor to Selected", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_cursor_to_selected()"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.create_orientation(name='PeaPrim', overwrite=True, use=True)"
        ], 
        [
          "Toggle Editmode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.editmode_toggle()"
        ], 
        [
          "Add WPlane", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.make_wplane()"
        ], 
        [
          "Pivot To Bottom", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.pivotobottom()"
        ], 
        [
          "Toggle Editmode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.editmode_toggle()"
        ], 
        [
          "Snap Selection to Cursor", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.view3d.snap_selected_to_cursor(use_offset=False)"
        ], 
        [
          "Transform", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.transform.transform(mode='ALIGN', value=(0.0, 0.0, 0.0, 0.0), axis=(0.0, 0.0, 0.0), constraint_axis=[False, False, False], constraint_orientation='PeaPrim', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1.0))"
        ], 
        [
          "Delete Orientation", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.transform.delete_orientation())"
        ], 
        [
          "Transform Orientation = 'LOCAL'", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.space_data.transform_orientation = 'LOCAL'"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Armature", 
      "Mesh, Metaball, Object Mode", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Pose", 
          "COMMAND", 
          "NONE", 
          "bpy.context.object.data.pose_position = 'POSE'"
        ], 
        [
          "Rest", 
          "COMMAND", 
          "NONE", 
          "bpy.context.object.data.pose_position = 'REST'"
        ], 
        [
          "row"
        ], 
        [
          "Draw Type", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.draw_type"
        ], 
        [
          "row"
        ], 
        [
          "Pose Library", 
          "CUSTOM", 
          "", 
          "panel(T.DATA_PT_pose_library, frame=False, header=False, expand=None)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Bend Options", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "X", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "boolx", 
          "PROP", 
          "#MANIPUL", 
          "bpy.context.scene.boolx"
        ], 
        [
          "rotx", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.rotx"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#TRIA_LEFT", 
          "bpy.ops.rotate.x(axis=(1, 0, 0))"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#TRIA_RIGHT", 
          "bpy.ops.rotate.x(axis=(1, 1, 0))"
        ], 
        [
          "row"
        ], 
        [
          "Y", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "booly", 
          "PROP", 
          "#MANIPUL", 
          "bpy.context.scene.booly"
        ], 
        [
          "roty", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.roty"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#TRIA_LEFT", 
          "bpy.ops.rotate.x(axis=(2, 0, 0))"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#TRIA_RIGHT", 
          "bpy.ops.rotate.x(axis=(2, 1, 0))"
        ], 
        [
          "row"
        ], 
        [
          "Z", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "boolz", 
          "PROP", 
          "#MANIPUL", 
          "bpy.context.scene.boolz"
        ], 
        [
          "rotz", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.rotz"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#TRIA_LEFT", 
          "bpy.ops.rotate.x(axis=(4, 0, 0))"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#TRIA_RIGHT", 
          "bpy.ops.rotate.x(axis=(4, 1, 0))"
        ], 
        [
          "row"
        ], 
        [
          "Create Empty object", 
          "COMMAND", 
          "OUTLINER_OB_MESH", 
          "bpy.ops.create.empty()"
        ], 
        [
          "Set Orientation", 
          "COMMAND", 
          "SNAP_SURFACE", 
          "bpy.ops.orientation.create()"
        ]
      ], 
      "DIALOG", 
      "pd?pd_width=236", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Bevel Mesh", 
      "3D View", 
      "", 
      [
        [
          "On Invoke", 
          "INVOKE", 
          "", 
          ""
        ], 
        [
          "Command 1", 
          "INVOKE", 
          "", 
          ""
        ], 
        [
          "Command 2", 
          "UPDATE", 
          "", 
          ""
        ]
      ], 
      "MODAL", 
      "mo?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Bevel Modal", 
      "3D View", 
      "", 
      [
        [
          "Add Modifier", 
          "INVOKE", 
          "", 
          "a = bpy.context.active_object.modifiers.new(\"Bevel\", \"Bevel\").name;"
        ], 
        [
          "Width", 
          "PROP", 
          "MOUSEMOVE;;;;", 
          "bpy.context.object.modifiers[a].width"
        ]
      ], 
      "MODAL", 
      "mo?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Boolean Sculpt Panel", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "My Button", 
          "CUSTOM", 
          "", 
          "panel(T.boolean_sculpt_menu, frame=True, header=False)"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Brush 1", 
      "3D View", 
      "", 
      [
        [
          "Set Object Mode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.mode_set(mode='SCULPT')"
        ], 
        [
          "Symmetry X = False", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.tool_settings.sculpt.use_symmetry_x = False"
        ], 
        [
          "Brush Select", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.paint.brush_select(sculpt_tool='GRAB')"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Convert Edges to Curve", 
      "3D View", 
      "", 
      [
        [
          "Add Duplicate", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.duplicate_move(MESH_OT_duplicate={\"mode\":1}, TRANSFORM_OT_translate={\"value\":(0, 0, 0), \"constraint_axis\":(False, False, False), \"constraint_orientation\":'GLOBAL', \"mirror\":False, \"proportional\":'DISABLED', \"proportional_edit_falloff\":'SMOOTH', \"proportional_size\":1, \"snap\":False, \"snap_target\":'CLOSEST', \"snap_point\":(0, 0, 0), \"snap_align\":False, \"snap_normal\":(0, 0, 0), \"gpencil_strokes\":False, \"texture_space\":False, \"remove_on_cancel\":False, \"release_confirm\":False})"
        ], 
        [
          "Separate", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mesh.separate(type='SELECTED')"
        ], 
        [
          "Command 3", 
          "COMMAND", 
          "TEXT", 
          ""
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Curve", 
      "Curve, Object Mode", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Add Mesh", 
          "COMMAND", 
          "MESH_CUBE", 
          "bpy.ops.mesh.curve_convert_add()"
        ], 
        [
          "Propagate Changes", 
          "COMMAND", 
          "#FILE_REFRESH", 
          "bpy.ops.mesh.curve_convert_update_all()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Cyclic U", 
          "PROP", 
          "#CURVE_BEZCIRCLE", 
          "bpy.context.object.data.splines[0].use_cyclic_u"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Convert to", 
          "MENU", 
          "#OUTLINER_OB_MESH", 
          "Curve to Mesh & Remove Doubles"
        ], 
        [
          "row"
        ], 
        [
          "Resolution U", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.resolution_u"
        ], 
        [
          "Fill Mode", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.fill_mode"
        ], 
        [
          "row"
        ], 
        [
          "Bevel Depth", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.bevel_depth"
        ], 
        [
          "row"
        ], 
        [
          "Bevel Resolution", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.bevel_resolution"
        ], 
        [
          "row"
        ], 
        [
          "Extrude", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.extrude"
        ], 
        [
          "Offset", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.offset"
        ], 
        [
          "row"
        ], 
        [
          "Curve Conversion", 
          "MENU", 
          "!", 
          "@Curve Conversion"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Curve to Mesh & Remove Doubles", 
      "Curve, Object Mode", 
      "", 
      [
        [
          "Convert to", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.convert(target='MESH')"
        ], 
        [
          "Toggle Editmode", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.object.editmode_toggle())"
        ], 
        [
          "(De)select All", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.mesh.select_all(action='SELECT'))"
        ], 
        [
          "Remove Doubles", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.mesh.remove_doubles(threshold=9.999999747378752e-05))"
        ], 
        [
          "Select Faces by Sides", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.mesh.select_face_by_sides(extend=False, number=3))"
        ], 
        [
          "Dissolve Selection", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.mesh.dissolve_mode(use_verts=True))"
        ], 
        [
          "Toggle Editmode", 
          "COMMAND", 
          "TEXT", 
          "(bpy.ops.object.editmode_toggle())"
        ], 
        [
          "Auto Smooth = True", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.object.data.use_auto_smooth = True"
        ], 
        [
          "Auto Smooth Angle = 0.523599", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.object.data.auto_smooth_angle = 0.523599"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Curve Conversion", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Add Mesh Object", 
          "COMMAND", 
          "MESH_CUBE", 
          "bpy.ops.mesh.curve_convert_add()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Propagate Changes", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.mesh.curve_convert_update_all()"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Displace Modifier Modal", 
      "3D View", 
      "", 
      [
        [
          "On Invoke", 
          "INVOKE", 
          "", 
          ""
        ]
      ], 
      "MODAL", 
      "mo?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Edge", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Add Cube", 
          "MENU", 
          "#MESH_CUBE", 
          "Align Cube"
        ], 
        [
          "Align Sphere", 
          "MENU", 
          "#SOLID", 
          "Align Sphere"
        ], 
        [
          "Align Plane", 
          "MENU", 
          "#MESH_PLANE", 
          "Align Plane"
        ], 
        [
          "Align Cylinder", 
          "MENU", 
          "#MESH_CYLINDER", 
          "Align Cylinder"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Edges", 
          "CUSTOM", 
          "#EDGESEL", 
          "L.menu(\"VIEW3D_MT_edit_mesh_edges\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?align=RIGHT"
        ], 
        [
          "Curve Linear", 
          "COMMAND", 
          "#IPO_EASE_IN_OUT", 
          "bpy.ops.mesh.looptools_curve(boundaries=True, influence=100.0, interpolation='cubic', lock_x=False, lock_y=False, lock_z=False, regular=False, restriction='none')"
        ], 
        [
          "Curve", 
          "COMMAND", 
          "#IPO_CONSTANT", 
          "bpy.ops.mesh.looptools_curve(boundaries=True, influence=100, interpolation='linear', lock_x=False, lock_y=False, lock_z=False, regular=False, restriction='none')"
        ], 
        [
          "Mira CStretch 3", 
          "MENU", 
          "#IPO_SINE", 
          "Mira CStretch 1"
        ], 
        [
          "Mira CStretch 3", 
          "MENU", 
          "#IPO_CUBIC", 
          "Mira CStretch 3"
        ], 
        [
          "Mira CStretch 5", 
          "MENU", 
          "#IPO_QUINT", 
          "Mira CStretch 5"
        ], 
        [
          "Create Lattice", 
          "COMMAND", 
          "#MOD_LATTICE", 
          "bpy.ops.object.fast_lattice()"
        ], 
        [
          "AutoMerge", 
          "PROP", 
          "#AUTOMERGE_OFF", 
          "bpy.context.scene.tool_settings.use_mesh_automerge"
        ], 
        [
          "X Mirror", 
          "PROP", 
          "", 
          "C.object.data.use_mirror_x"
        ], 
        [
          "Topology Mirror", 
          "PROP", 
          "#LATTICE_DATA", 
          "C.object.data.use_mirror_topology"
        ], 
        [
          "row?"
        ], 
        [
          "Flip Normals", 
          "COMMAND", 
          "FILE_REFRESH", 
          "obj_mode = C.active_object.mode; O.object.mode_set(mode='EDIT'); O.mesh.flip_normals(); O.object.mode_set(mode=obj_mode)"
        ], 
        [
          "Make Normals Consistent", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.normals_make_consistent(inside=False)"
        ], 
        [
          "Weak Normals", 
          "COMMAND", 
          "MOD_NORMALEDIT", 
          "bpy.ops.mesh.yavne_manage_face_normal_influence(action='SET', type='WEAK', update=True)"
        ], 
        [
          "row?"
        ], 
        [
          "All", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.apply_all_modifiers()"
        ], 
        [
          "All", 
          "COMMAND", 
          "#VISIBLE_IPO_ON", 
          "bpy.ops.object.toggle_apply_modifiers_view()"
        ], 
        [
          "Add Modifier", 
          "COMMAND", 
          "MODIFIER", 
          "bpy.ops.object.modifier_add()"
        ], 
        [
          "All", 
          "COMMAND", 
          "#X", 
          "bpy.ops.object.delete_all_modifiers()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Scene Popup", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Scene Popup"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Subsurf", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Subsurf\")"
        ], 
        [
          "On Cage", 
          "PROP", 
          "#MESH_DATA", 
          "bpy.context.object.modifiers[\"Subsurf\"].show_on_cage"
        ], 
        [
          "Subsurf", 
          "CUSTOM", 
          "MOD_SUBSURF", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SUBSURF']; m =  mods and mods[0]; L.prop(m, \"levels\", \"Subdivisions\") if m  else operator(L, \"object.modifier_add\", \"Add Subsurf\", 'ZOOMIN', type='SUBSURF')"
        ], 
        [
          "Delete Subsurf", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SUBSURF']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SUBSURF')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "My Button", 
          "COMMAND", 
          "#RIGHTARROW_THIN", 
          ""
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Mirror", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Mirror\")"
        ], 
        [
          "AutoMirror_axis", 
          "CUSTOM", 
          "#MANIPUL", 
          "L.prop_menu_enum(bpy.context.scene, 'AutoMirror_axis', text, icon=icon)"
        ], 
        [
          "Automirror", 
          "COMMAND", 
          "", 
          "bpy.ops.object.automirror(); bpy.ops.object.mode_set()"
        ], 
        [
          "Delete Mirror", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'MIRROR']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='MIRROR')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Mirror Options", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Mirror Options"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Bend", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"SimpleDeform\")"
        ], 
        [
          "Set Orientation", 
          "COMMAND", 
          "#SNAP_SURFACE", 
          "bpy.ops.orientation.create()"
        ], 
        [
          "Simple Bend", 
          "CUSTOM", 
          "MOD_SIMPLEDEFORM", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SIMPLE_DEFORM']; m = mods and mods[0]; L.prop(m, \"angle\", \"angle\") if m else operator(L, \"wm.pme_user_command_exec\", \"Add Bend\", 'ZOOMIN', cmd=\"execute_script('scripts/simple_bend.py')\")"
        ], 
        [
          "Delete Bend", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SIMPLE_DEFORM']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SIMPLE_DEFORM')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Bend Options", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Bend Options"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Spin Modifier", 
          "COMMAND", 
          "", 
          "loc=bpy.context.object.location; bpy.ops.object.mode_set(mode='EDIT'); bpy.ops.mesh.select_mode(type='VERT'); bpy.ops.mesh.select_all(action='INVERT'); bpy.ops.mesh.delete(type='VERT'); bpy.ops.mesh.select_all(action='TOGGLE'); bpy.ops.object.modifier_add(type='SCREW'); bpy.context.object.modifiers[\"Screw\"].use_smooth_shade = False; bpy.context.object.modifiers[\"Screw\"].use_normal_calculate = True; open_menu(\"Spin it!\")"
        ]
      ], 
      "DIALOG", 
      "pd?pd_title=False", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mira CStretch 1", 
      "Window", 
      "", 
      [
        [
          "points_number = 1", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.mi_cur_stretch_settings.points_number = 1"
        ], 
        [
          "StartDraw", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mira.curve_stretch()"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mira CStretch 3", 
      "Window", 
      "", 
      [
        [
          "points_number = 3", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.mi_cur_stretch_settings.points_number = 3"
        ], 
        [
          "StartDraw", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mira.curve_stretch()"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mira CStretch 5", 
      "Window", 
      "", 
      [
        [
          "points_number = 5", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.mi_cur_stretch_settings.points_number = 5"
        ], 
        [
          "StartDraw", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.mira.curve_stretch()"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mirror Options", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "AutoMirror", 
          "COMMAND", 
          "OUTLINER_OB_MESH", 
          "bpy.ops.object.automirror()"
        ], 
        [
          "row"
        ], 
        [
          "AutoMirror_axis", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.AutoMirror_axis"
        ], 
        [
          "AutoMirror_orientation", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.AutoMirror_orientation"
        ], 
        [
          "row"
        ], 
        [
          "AutoMirror_threshold", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.AutoMirror_threshold"
        ], 
        [
          "row"
        ], 
        [
          "Toggle Edit", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.AutoMirror_toggle_edit"
        ], 
        [
          "row"
        ], 
        [
          "Cut and Mirror", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.AutoMirror_cut"
        ], 
        [
          "row"
        ], 
        [
          "Use Clip", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.AutoMirror_use_clip"
        ], 
        [
          "row"
        ], 
        [
          "Editable", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.AutoMirror_show_on_cage"
        ], 
        [
          "row"
        ], 
        [
          "Apply Mirror", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.AutoMirror_apply_mirror"
        ]
      ], 
      "DIALOG", 
      "pd?pd_width=236", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Edit", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Edit", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Face", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Add Cube", 
          "MENU", 
          "#MESH_CUBE", 
          "Align Cube"
        ], 
        [
          "Align Sphere", 
          "MENU", 
          "#SOLID", 
          "Align Sphere"
        ], 
        [
          "Align Plane", 
          "MENU", 
          "#MESH_PLANE", 
          "Align Plane"
        ], 
        [
          "Align Cylinder", 
          "MENU", 
          "#MESH_CYLINDER", 
          "Align Cylinder"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Faces", 
          "CUSTOM", 
          "#FACESEL", 
          "L.menu(\"VIEW3D_MT_edit_mesh_faces\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?align=RIGHT"
        ], 
        [
          "Create Lattice", 
          "COMMAND", 
          "#MOD_LATTICE", 
          "bpy.ops.object.fast_lattice()"
        ], 
        [
          "AutoMerge", 
          "PROP", 
          "#AUTOMERGE_OFF", 
          "bpy.context.scene.tool_settings.use_mesh_automerge"
        ], 
        [
          "X Mirror", 
          "PROP", 
          "", 
          "C.object.data.use_mirror_x"
        ], 
        [
          "Topology Mirror", 
          "PROP", 
          "#LATTICE_DATA", 
          "C.object.data.use_mirror_topology"
        ], 
        [
          "row?"
        ], 
        [
          "Flip Normals", 
          "COMMAND", 
          "FILE_REFRESH", 
          "obj_mode = C.active_object.mode; O.object.mode_set(mode='EDIT'); O.mesh.flip_normals(); O.object.mode_set(mode=obj_mode)"
        ], 
        [
          "Make Normals Consistent", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.normals_make_consistent(inside=False)"
        ], 
        [
          "Weak Normals", 
          "COMMAND", 
          "MOD_NORMALEDIT", 
          "bpy.ops.mesh.yavne_manage_face_normal_influence(action='SET', type='WEAK', update=True)"
        ], 
        [
          "row"
        ], 
        [
          "All", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.apply_all_modifiers()"
        ], 
        [
          "All", 
          "COMMAND", 
          "#VISIBLE_IPO_ON", 
          "bpy.ops.object.toggle_apply_modifiers_view()"
        ], 
        [
          "Add Modifier", 
          "COMMAND", 
          "MODIFIER", 
          "bpy.ops.object.modifier_add()"
        ], 
        [
          "All", 
          "COMMAND", 
          "#X", 
          "bpy.ops.object.delete_all_modifiers()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Scene Popup", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Scene Popup"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Subsurf", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Subsurf\")"
        ], 
        [
          "On Cage", 
          "PROP", 
          "#MESH_DATA", 
          "bpy.context.object.modifiers[\"Subsurf\"].show_on_cage"
        ], 
        [
          "Subsurf", 
          "CUSTOM", 
          "MOD_SUBSURF", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SUBSURF']; m =  mods and mods[0]; L.prop(m, \"levels\", \"Subdivisions\") if m  else operator(L, \"object.modifier_add\", \"Add Subsurf\", 'ZOOMIN', type='SUBSURF')"
        ], 
        [
          "Delete Subsurf", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SUBSURF']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SUBSURF')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "My Button", 
          "COMMAND", 
          "#RIGHTARROW_THIN", 
          ""
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Mirror", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Mirror\")"
        ], 
        [
          "AutoMirror_axis", 
          "CUSTOM", 
          "#MANIPUL", 
          "L.prop_menu_enum(bpy.context.scene, 'AutoMirror_axis', text, icon=icon)"
        ], 
        [
          "Automirror", 
          "COMMAND", 
          "", 
          "bpy.ops.object.automirror(); bpy.ops.object.mode_set()"
        ], 
        [
          "Delete Mirror", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'MIRROR']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='MIRROR')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Mirror Options", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Mirror Options"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Bend", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"SimpleDeform\")"
        ], 
        [
          "Set Orientation", 
          "COMMAND", 
          "#SNAP_SURFACE", 
          "bpy.ops.orientation.create()"
        ], 
        [
          "Simple Bend", 
          "CUSTOM", 
          "MOD_SIMPLEDEFORM", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SIMPLE_DEFORM']; m = mods and mods[0]; L.prop(m, \"angle\", \"angle\") if m else operator(L, \"wm.pme_user_command_exec\", \"Add Bend\", 'ZOOMIN', cmd=\"execute_script('scripts/simple_bend.py')\")"
        ], 
        [
          "Delete Bend", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SIMPLE_DEFORM']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SIMPLE_DEFORM')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Bend Options", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Bend Options"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=False", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Floating Outliner", 
      "Window", 
      "", 
      [
        [
          "Outliner", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.area.type = 'OUTLINER'"
        ], 
        [
          "Duplicate Area into New Window", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.screen.area_dupli()"
        ], 
        [
          "3D View", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.area.type = 'VIEW_3D'"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Font", 
      "Text, Text Generic", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Shape", 
          "CUSTOM", 
          "", 
          "panel(\"DATA_PT_shape_curve\", frame=False, header=False, expand=None)"
        ], 
        [
          "row"
        ], 
        [
          "Geometry", 
          "CUSTOM", 
          "", 
          "panel(\"DATA_PT_geometry_curve\", frame=False, header=False, expand=None)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Grab Brush", 
      "3D View", 
      "", 
      [
        [
          "Set Object Mode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.mode_set(mode='SCULPT')"
        ], 
        [
          "Symmetry X = False", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.tool_settings.sculpt.use_symmetry_x = False"
        ], 
        [
          "Brush Select", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.paint.brush_select(sculpt_tool='GRAB')"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Grease Pencil", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Greasepencil", 
          "COMMAND", 
          "GREASEPENCIL", 
          ""
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Helpers Hide/Show", 
      "Curve, Grease Pencil Stroke Edit Mode, Image Paint, Lattice, Mesh, Object Mode, Sculpt, Vertex Paint, Weight Paint", 
      "", 
      [
        [
          "", 
          "COMMAND", 
          "", 
          ""
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Hidden Panel Group", 
      "3D View", 
      "", 
      [
        [
          "Add Curves", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_add_curve_edit"
        ], 
        [
          "Add Metaball", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_add_mball_edit"
        ], 
        [
          "Add Meshes", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_add_mesh_edit"
        ], 
        [
          "Add Primitive", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_add_object"
        ], 
        [
          "Add Surfaces", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_add_surface_edit"
        ], 
        [
          "3D Cursor", 
          "MENU", 
          "", 
          "VIEW3D_PT_view3d_cursor"
        ], 
        [
          "Motion Tracking", 
          "MENU", 
          "", 
          "VIEW3D_PT_view3d_motion_tracking"
        ], 
        [
          "History", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_history"
        ], 
        [
          "Shading", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_shading"
        ], 
        [
          "UVs", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_uvs"
        ], 
        [
          "Gpencil Align", 
          "MENU", 
          "", 
          "AlignSelectionToGpencilBUTTON"
        ], 
        [
          "Transform", 
          "MENU", 
          "", 
          "VIEW3D_PT_tools_transform"
        ], 
        [
          "Welder", 
          "MENU", 
          "", 
          "ToolsPanel"
        ], 
        [
          "Transform", 
          "MENU", 
          "", 
          "IMAGE_PT_tools_transform_uvs"
        ], 
        [
          "Colors-Weight Exchanger", 
          "MENU", 
          "", 
          "colors_groups_exchanger_panel"
        ], 
        [
          "Dual Mesh", 
          "MENU", 
          "", 
          "dual_mesh_panel"
        ], 
        [
          "Tessellate", 
          "MENU", 
          "", 
          "tessellate_panel"
        ], 
        [
          "Animations", 
          "MENU", 
          "", 
          "MFTPanelAnimation"
        ], 
        [
          "Cloning", 
          "MENU", 
          "", 
          "MFTPanelCloning"
        ], 
        [
          "PlaykotTools", 
          "MENU", 
          "", 
          "MFTPanelPlaykot"
        ], 
        [
          "Sketchfab", 
          "MENU", 
          "", 
          "VIEW3D_PT_sketchfab"
        ], 
        [
          "1D_Scripts", 
          "MENU", 
          "", 
          "Paul_Operator"
        ], 
        [
          "Texel Density Checker", 
          "MENU", 
          "", 
          "VIEW3D_PT_texel_density_checker"
        ], 
        [
          "Snap Utilities", 
          "MENU", 
          "", 
          "PanelSnapUtilities"
        ], 
        [
          "Auto Mirror", 
          "MENU", 
          "", 
          "BisectMirror"
        ], 
        [
          "Align Tools", 
          "MENU", 
          "", 
          "LA_PT_main"
        ], 
        [
          "Curve Conversion", 
          "MENU", 
          "", 
          "OBJECT_PT_convert"
        ], 
        [
          "NP 020", 
          "MENU", 
          "", 
          "NP_PT_020_base_panel"
        ], 
        [
          "Y.A.V.N.E.", 
          "MENU", 
          "", 
          "VIEW3D_PT_yavne"
        ], 
        [
          "Box Cutter", 
          "MENU", 
          "", 
          "BoxCutterPanel"
        ], 
        [
          "Smooth Deforming", 
          "MENU", 
          "", 
          "WPLSmoothDeform_Panel"
        ], 
        [
          "FBX Bundle", 
          "MENU", 
          "", 
          "FBX_bundle_panel"
        ], 
        [
          "Lights", 
          "MENU", 
          "", 
          "GafferPanelLights"
        ], 
        [
          "Tools", 
          "MENU", 
          "", 
          "GafferPanelTools"
        ], 
        [
          "Print3D", 
          "MENU", 
          "", 
          "MESH_PT_print3d_object"
        ], 
        [
          "GCut", 
          "MENU", 
          "", 
          "GC"
        ], 
        [
          "W_Primitives", 
          "MENU", 
          "", 
          "WAddPanel"
        ], 
        [
          "Spline", 
          "MENU", 
          "", 
          "SplinePanel"
        ], 
        [
          "BRM UV Tools", 
          "MENU", 
          "", 
          "BRM_UVPanel"
        ], 
        [
          "Print3D", 
          "MENU", 
          "", 
          "MESH_PT_print3d_mesh"
        ], 
        [
          "Zaloopok", 
          "MENU", 
          "", 
          "VIEW3D_PT_Zaloopok"
        ], 
        [
          "Mira Tools", 
          "MENU", 
          "", 
          "MIRA_Panel"
        ]
      ], 
      "HPANEL", 
      "hpg?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Inflate Brush", 
      "3D View", 
      "", 
      [
        [
          "Set Object Mode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.mode_set(mode='SCULPT')"
        ], 
        [
          "Symmetry X = False", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.tool_settings.sculpt.use_symmetry_x = False"
        ], 
        [
          "Brush Select", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.paint.brush_select(sculpt_tool='INFLATE')"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Info", 
      "3D View", 
      "", 
      [
        [
          "Info Panel", 
          "MENU", 
          "", 
          "Info Panel"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Info Panel", 
      "3D View", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Floating Outliner", 
          "MENU", 
          "", 
          "Floating Outliner"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Lamp", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Type = 'POINT'", 
          "COMMAND", 
          "#LAMP_POINT", 
          "bpy.context.object.data.type = 'POINT'"
        ], 
        [
          "Type = 'SUN'", 
          "COMMAND", 
          "#LAMP_SUN", 
          "bpy.context.object.data.type = 'SUN'"
        ], 
        [
          "Type = 'SPOT'", 
          "COMMAND", 
          "#LAMP_SPOT", 
          "bpy.context.object.data.type = 'SPOT'"
        ], 
        [
          "Type = 'HEMI'", 
          "COMMAND", 
          "#LAMP_HEMI", 
          "bpy.context.object.data.type = 'HEMI'"
        ], 
        [
          "row?fixed_col=True"
        ], 
        [
          "Shadow Soft Size", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.shadow_soft_size"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Shadow", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.cycles.cast_shadow"
        ], 
        [
          "row?fixed_col=True"
        ], 
        [
          "Max Bounces", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.cycles.max_bounces"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "M I S", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.cycles.use_multiple_importance_sampling"
        ]
      ], 
      "DIALOG", 
      "pd?pd_box=&pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Lattice", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Finished", 
          "COMMAND", 
          "FILE_TICK", 
          "bpy.ops.object.fast_lattice_cleanup()"
        ], 
        [
          "Outside", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.use_outside"
        ], 
        [
          "row"
        ], 
        [
          "U", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.points_u"
        ], 
        [
          "Interpolation Type U", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.interpolation_type_u"
        ], 
        [
          "row"
        ], 
        [
          "V", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.points_v"
        ], 
        [
          "Interpolation Type V", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.interpolation_type_v"
        ], 
        [
          "row"
        ], 
        [
          "W", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.points_w"
        ], 
        [
          "Interpolation Type W", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.interpolation_type_w"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Lattice RMB", 
      "Lattice", 
      "", 
      [
        [
          ""
        ], 
        [
          "Repeat Last", 
          "COMMAND", 
          "FILE_REFRESH", 
          "bpy.ops.screen.repeat_last()"
        ], 
        [
          "Context Menu", 
          "CUSTOM", 
          "QUESTION", 
          "execute_script(\"scripts/context_sensitive_slot.py\", frame=True)"
        ], 
        [
          "Redo Last", 
          "COMMAND", 
          "SCRIPTWIN", 
          "bpy.ops.screen.redo_last()"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          ""
        ]
      ], 
      "PMENU", 
      "pm?pm_radius=50", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Looptools", 
      "Window", 
      "", 
      [
        [
          "Looptools Bridge", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.looptools_bridge(cubic_strength=1, interpolation='cubic', loft=False, loft_loop=False, min_width=0, mode='shortest', remove_faces=True, reverse=False, segments=1, twist=0)"
        ], 
        [
          "Looptools Circle", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.looptools_circle(custom_radius=False, fit='best', flatten=True, influence=100, lock_x=False, lock_y=False, lock_z=False, radius=1, regular=True)"
        ], 
        [
          "Looptools Curve", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.looptools_curve(boundaries=False, influence=100, interpolation='cubic', lock_x=False, lock_y=False, lock_z=False, regular=True, restriction='none')"
        ], 
        [
          "Looptools Flatten", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.looptools_flatten(influence=100, lock_x=False, lock_y=False, lock_z=False, plane='best_fit', restriction='none')"
        ], 
        [
          "Looptools Gstretch", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.looptools_gstretch(conversion='limit_vertices', conversion_distance=0.1, conversion_max=32, conversion_min=8, conversion_vertices=32, delete_strokes=False, influence=100, lock_x=False, lock_y=False, lock_z=False, method='regular')"
        ], 
        [
          "Looptools Bridge", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.looptools_bridge(cubic_strength=1, interpolation='cubic', loft=True, loft_loop=False, min_width=0, mode='shortest', remove_faces=True, reverse=False, segments=1, twist=0)"
        ], 
        [
          "Looptools Relax", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.looptools_relax(input='selected', interpolation='cubic', iterations='1', regular=True)"
        ], 
        [
          "Looptools Space", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.looptools_space(influence=100, input='selected', interpolation='cubic', lock_x=False, lock_y=False, lock_z=False)"
        ]
      ], 
      "RMENU", 
      "rm?rm_title=", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Mesh Check Toggle", 
      "Window", 
      "", 
      [
        [
          "Mesh Check ON", 
          "COMMAND", 
          "", 
          "bpy.ops.object.add_materials()"
        ], 
        [
          "Mesh Check OFF", 
          "COMMAND", 
          "", 
          "bpy.ops.object.remove_materials()"
        ]
      ], 
      "SCRIPT", 
      "s?s_state=True", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Meta", 
      "Mesh, Metaball, Object Mode", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Metaball", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Metaball", 
          "MENU", 
          "", 
          "@Metaball"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Metaball", 
      "Mesh, Metaball, Object Mode", 
      "", 
      [
        [
          "row"
        ], 
        [
          "View", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.resolution"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Render", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.render_resolution"
        ], 
        [
          "row"
        ], 
        [
          "Threshold", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.threshold"
        ], 
        [
          "row"
        ], 
        [
          "Update", 
          "PROP", 
          "NONE", 
          "bpy.context.object.data.update_method"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "None Object", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "WBox", 
          "COMMAND", 
          "#MESH_CUBE", 
          "bpy.ops.mesh.make_wbox()"
        ], 
        [
          "WSphere", 
          "COMMAND", 
          "#SOLID", 
          "bpy.ops.mesh.make_wsphere()"
        ], 
        [
          "WPlane", 
          "COMMAND", 
          "#MESH_PLANE", 
          "bpy.ops.mesh.make_wplane()"
        ], 
        [
          "WTube", 
          "COMMAND", 
          "#MESH_CYLINDER", 
          "bpy.ops.mesh.make_wtube()"
        ], 
        [
          "Add Lamp", 
          "COMMAND", 
          "#LAMP_POINT", 
          "bpy.ops.object.lamp_add(type='POINT', view_align=False, location=(0, 0, 0), layers=(True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False))"
        ], 
        [
          "Add Bezier", 
          "COMMAND", 
          "#CURVE_BEZCURVE", 
          "bpy.ops.curve.primitive_bezier_curve_add(view_align=False, enter_editmode=False, location=(0, 0, 0), layers=(True, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False, False))"
        ], 
        [
          "CREATE_OT_empty", 
          "COMMAND", 
          "#OUTLINER_DATA_EMPTY", 
          "bpy.ops.create.empty()"
        ], 
        [
          "Lathe", 
          "COMMAND", 
          "#MOD_SCREW", 
          "bpy.ops.object.lathe()"
        ], 
        [
          "Lathe_libre", 
          "COMMAND", 
          "#MOD_WARP", 
          "bpy.ops.object.lathe_libre()"
        ], 
        [
          "row"
        ], 
        [
          "None Selected", 
          "CUSTOM", 
          "VIEW3D", 
          "header_menu([\"VIEW_3D\"])"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Object", 
      "Object Mode", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "3D View", 
          "CUSTOM", 
          "", 
          "header_menu([\"VIEW_3D\"])"
        ], 
        [
          "row?align=RIGHT&vspacer=NONE"
        ], 
        [
          "WMesh data", 
          "COMMAND", 
          "", 
          "bpy.ops.pme.popup_panel(panel='DATA_PT_Wlayout')"
        ], 
        [
          "Create Lattice", 
          "COMMAND", 
          "#MOD_LATTICE", 
          "bpy.ops.object.fast_lattice()"
        ], 
        [
          "Weight Normals", 
          "COMMAND", 
          "#MOD_NORMALEDIT", 
          "bpy.ops.object.calculate_weighted_normals()"
        ], 
        [
          "Flip Normals", 
          "COMMAND", 
          "#FILE_REFRESH", 
          "obj_mode = C.active_object.mode; O.object.mode_set(mode='EDIT'); O.mesh.flip_normals(); O.object.mode_set(mode=obj_mode)"
        ], 
        [
          "Unify Normals", 
          "COMMAND", 
          "#MESH_CUBE", 
          "obj_mode = C.active_object.mode; O.object.mode_set(mode='EDIT'); O.mesh.normals_make_consistent(inside=False); O.object.mode_set(mode=obj_mode)"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Object", 
          "CUSTOM", 
          "#MESH_CUBE", 
          "L.menu(\"VIEW3D_MT_Object\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row"
        ], 
        [
          "Tessellate", 
          "COMMAND", 
          "MESH_GRID", 
          "bpy.ops.object.tessellate(object_name=\"Roundcube_Tessellation\", generator=\"Roundcube\", component=\"Cube\")"
        ], 
        [
          "Refresh", 
          "COMMAND", 
          "#FILE_REFRESH", 
          "bpy.ops.object.update_tessellate()"
        ], 
        [
          "Settings", 
          "COMMAND", 
          "#SCRIPT", 
          "bpy.ops.object.settings_tessellate()"
        ], 
        [
          "row"
        ], 
        [
          "Apply All Modifiers", 
          "COMMAND", 
          "#CHECKBOX_HLT", 
          "bpy.ops.object.apply_all_modifiers()"
        ], 
        [
          "Toggle Visibility Of All Modifiers", 
          "COMMAND", 
          "#HIDE_OFF", 
          "bpy.ops.object.ml_toggle_all_modifiers()"
        ], 
        [
          "Add Modifier", 
          "COMMAND", 
          "MODIFIER", 
          "bpy.ops.wm.call_menu(name='MESH_MT_ml_add_modifier_menu')"
        ], 
        [
          "Remove All Modifiers", 
          "COMMAND", 
          "#X", 
          "bpy.ops.object.ml_remove_all_modifiers()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Scene Popup", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Scene Popup"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Subsurf", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier='Subdivision')"
        ], 
        [
          "On Cage", 
          "PROP", 
          "#MESH_DATA", 
          "bpy.context.object.modifiers[\"Subdivision\"].show_on_cage"
        ], 
        [
          "Subsurf", 
          "CUSTOM", 
          "MOD_SUBSURF", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SUBSURF']; m =  mods and mods[0]; L.prop(m, \"levels\", \"Subdivisions\") if m  else operator(L, \"object.modifier_add\", \"Add Subsurf\", 'ZOOMIN', type='SUBSURF')"
        ], 
        [
          "Delete Subsurf", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SUBSURF']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SUBSURF')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "My Button", 
          "COMMAND", 
          "#RIGHTARROW_THIN", 
          ""
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Mirror", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Mirror\")"
        ], 
        [
          "AutoMirror_axis", 
          "CUSTOM", 
          "#MANIPUL", 
          "L.prop_menu_enum(bpy.context.scene, 'AutoMirror_axis', text, icon=icon)"
        ], 
        [
          "Automirror", 
          "COMMAND", 
          "", 
          "bpy.ops.object.automirror(); bpy.ops.object.mode_set()"
        ], 
        [
          "Delete Mirror", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'MIRROR']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='MIRROR')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Mirror Options", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Mirror Options"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Bend", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"SimpleDeform\")"
        ], 
        [
          "Set Orientation", 
          "COMMAND", 
          "#SNAP_SURFACE", 
          "bpy.ops.orientation.create()"
        ], 
        [
          "Simple Bend", 
          "CUSTOM", 
          "MOD_SIMPLEDEFORM", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SIMPLE_DEFORM']; m = mods and mods[0]; L.prop(m, \"angle\", \"angle\") if m else operator(L, \"wm.pme_user_command_exec\", \"Add Bend\", 'ZOOMIN', cmd=\"execute_script('scripts/simple_bend.py')\")"
        ], 
        [
          "Delete Bend", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SIMPLE_DEFORM']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SIMPLE_DEFORM')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Bend Options", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Bend Options"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=2", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Overlay Settings", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Overlays", 
          "CUSTOM", 
          "", 
          "panel(\"VIEW3D_PT_overlay\", frame=False, header=False, expand=None)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Panel Group Armature", 
      "Window", 
      "", 
      [
        [
          "Properties Arnature", 
          "MENU", 
          "", 
          "Properties Arnature"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'ARMATURE'", 
      ""
    ], 
    [
      "Panel Group Camera", 
      "Window", 
      "", 
      [
        [
          "Properties Camera", 
          "MENU", 
          "", 
          "Properties Camera"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'CAMERA'", 
      ""
    ], 
    [
      "Panel Group Curve", 
      "Window", 
      "", 
      [
        [
          "Properties Curve", 
          "MENU", 
          "", 
          "Properties Curve"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'CURVE'", 
      ""
    ], 
    [
      "Panel Group Empty", 
      "Window", 
      "", 
      [
        [
          "Properties Empty", 
          "MENU", 
          "", 
          "Properties Empty"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'EMPTY'", 
      ""
    ], 
    [
      "Panel Group Font", 
      "Window", 
      "", 
      [
        [
          "Properties Font", 
          "MENU", 
          "", 
          "Properties Font"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'FONT'", 
      ""
    ], 
    [
      "Panel Group Lamp", 
      "Window", 
      "", 
      [
        [
          "Properties Lamp", 
          "MENU", 
          "", 
          "Properties Lamp"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'LAMP'", 
      ""
    ], 
    [
      "Panel Group Lattice", 
      "Window", 
      "", 
      [
        [
          "Properties LATTICE", 
          "MENU", 
          "", 
          "Properties LATTICE"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'LATTICE'", 
      ""
    ], 
    [
      "Panel Group Mesh", 
      "Window", 
      "", 
      [
        [
          "Properties Mesh", 
          "MENU", 
          "", 
          "Properties Mesh"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'MESH'", 
      ""
    ], 
    [
      "Panel Group Metaball", 
      "Window", 
      "", 
      [
        [
          "Properties Metaball", 
          "MENU", 
          "", 
          "Properties Metaball"
        ]
      ], 
      "PANEL", 
      "pg?pg_region=HEADER&pg_space=INFO", 
      "PRESS", 
      "return C.active_object and C.active_object.type == 'META'", 
      ""
    ], 
    [
      "Particle Edit", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Particle Edit", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Pea UV", 
      "UV Editor", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "Group", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.selectionAsGroup"
        ], 
        [
          "Relative to", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.relativeItems"
        ], 
        [
          "row?size=LARGER"
        ], 
        [
          "Align", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Align top margin", 
          "COMMAND", 
          "#TRIA_UP_BAR", 
          "bpy.ops.uv.align_top_margin()"
        ], 
        [
          "Align horizontal axis", 
          "COMMAND", 
          "#GRIP", 
          "bpy.ops.uv.align_horizontal_axis()"
        ], 
        [
          "Align right margin", 
          "COMMAND", 
          "#TRIA_RIGHT_BAR", 
          "bpy.ops.uv.align_right_margin()"
        ], 
        [
          "row?align=RIGHT&size=LARGER&vspacer=NONE"
        ], 
        [
          "Rotation", 
          "COMMAND", 
          "#FILE_REFRESH", 
          "bpy.ops.uv.align_rotation()"
        ], 
        [
          "Equalize Scale", 
          "COMMAND", 
          "#FULLSCREEN_ENTER", 
          "bpy.ops.uv.equalize_scale()"
        ], 
        [
          "Align UV Verts to Gpencil", 
          "COMMAND", 
          "#GREASEPENCIL", 
          "bpy.ops.bear.uv_align_to_gpencil()"
        ], 
        [
          "Align left margin", 
          "COMMAND", 
          "#TRIA_LEFT_BAR", 
          "bpy.ops.uv.align_left_margin()"
        ], 
        [
          "Align vertical axis", 
          "COMMAND", 
          "#PAUSE", 
          "bpy.ops.uv.align_vertical_axis()"
        ], 
        [
          "Align low margin", 
          "COMMAND", 
          "#TRIA_DOWN_BAR", 
          "bpy.ops.uv.align_low_margin()"
        ], 
        [
          "row?align=RIGHT&fixed_col=True&size=LARGER"
        ], 
        [
          "Distribute", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "LEdges", 
          "COMMAND", 
          "#TRIA_LEFT", 
          "bpy.ops.uv.distribute_ledges_horizontally()"
        ], 
        [
          "HCenters", 
          "COMMAND", 
          "#SPACE3", 
          "bpy.ops.uv.distribute_center_horizontally()"
        ], 
        [
          "RCenters", 
          "COMMAND", 
          "#TRIA_RIGHT", 
          "bpy.ops.uv.distribute_redges_horizontally()"
        ], 
        [
          "row?align=RIGHT&size=LARGER&vspacer=NONE"
        ], 
        [
          "Horizontal", 
          "COMMAND", 
          "#PAUSE", 
          "bpy.ops.uv.equalize_horizontal_gap()"
        ], 
        [
          "Vertical", 
          "COMMAND", 
          "#SORTSIZE", 
          "bpy.ops.uv.equalize_vertical_gap()"
        ], 
        [
          "TEdges", 
          "COMMAND", 
          "#TRIA_UP", 
          "bpy.ops.uv.distribute_tedges_vertically()"
        ], 
        [
          "HAxis", 
          "COMMAND", 
          "#SPACE3", 
          "bpy.ops.uv.distribute_center_vertically()"
        ], 
        [
          "Low", 
          "COMMAND", 
          "#TRIA_DOWN", 
          "bpy.ops.uv.distribute_bedges_vertically()"
        ], 
        [
          "row"
        ], 
        [
          "Match Island", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.match_island()"
        ], 
        [
          "row?"
        ], 
        [
          "Snap Axis", 
          "COMMAND", 
          "ARROW_LEFTRIGHT", 
          "bpy.ops.uv.uv_snap_to_axis()"
        ], 
        [
          "Snap Equal", 
          "COMMAND", 
          "ALIGN", 
          "bpy.ops.uv.uv_snap_to_axis_and_equal()"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Grid Shape", 
          "COMMAND", 
          "GRID", 
          "bpy.ops.uv.uv_squares_by_shape()"
        ], 
        [
          "Grid Square", 
          "COMMAND", 
          "UV_FACESEL", 
          "bpy.ops.uv.uv_squares()"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Rip vertex", 
          "COMMAND", 
          "LAYER_ACTIVE", 
          "bpy.ops.uv.uv_face_rip()"
        ], 
        [
          "Rip Faces", 
          "COMMAND", 
          "UV_ISLANDSEL", 
          "bpy.ops.uv.uv_face_rip()"
        ], 
        [
          "row?"
        ], 
        [
          "Snap to closest unselected", 
          "COMMAND", 
          "SNAP_INCREMENT", 
          "bpy.ops.uv.uv_face_join()"
        ], 
        [
          "Snap Selection", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_selected(target='PIXELS')"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Snap Selection", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_selected(target='CURSOR')"
        ], 
        [
          "Snap Selection", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.snap_selected(target='CURSOR_OFFSET')"
        ], 
        [
          "row"
        ], 
        [
          "Edge Axis Align Island", 
          "COMMAND", 
          "NONE", 
          "bpy.ops.uv.rotationuv()"
        ], 
        [
          "row"
        ], 
        [
          "Pack UV", 
          "COMMAND", 
          "", 
          "bpy.ops.uv.muv_packuv()"
        ], 
        [
          "row"
        ], 
        [
          "Copy Mirrored UV coords", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.faces_mirror_uv()"
        ], 
        [
          "row?size=LARGER"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#LOOP_BACK", 
          "bpy.ops.transform.rotate(value=-1.5707963705062866, axis=(0.0, 0.0, -1.0), constraint_axis=[False, False, False], constraint_orientation='GLOBAL', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1.0)"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#LOOP_FORWARDS", 
          "bpy.ops.transform.rotate(value=1.5708, axis=(-0, -0, -1), constraint_axis=(False, False, False), constraint_orientation='GLOBAL', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1)"
        ], 
        [
          "My Button", 
          "CUSTOM", 
          "#MOD_MIRROR", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "H", 
          "COMMAND", 
          "", 
          "bpy.ops.transform.resize(value=(-1, 1, 1), constraint_axis=(True, False, False), constraint_orientation='GLOBAL', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1)"
        ], 
        [
          "V", 
          "COMMAND", 
          "", 
          "bpy.ops.transform.resize(value=(1, -1, 1), constraint_axis=(False, True, False), constraint_orientation='GLOBAL', mirror=False, proportional='DISABLED', proportional_edit_falloff='SMOOTH', proportional_size=1)"
        ], 
        [
          "row"
        ], 
        [
          "SpaveUVEditor.draw_other_objects", 
          "PROP", 
          "", 
          "SpaveUVEditor.draw_other_objects"
        ], 
        [
          "row"
        ], 
        [
          "bpy.context.space_uveditor.draw_other_objects", 
          "PROP", 
          "", 
          "bpy.context.space_uveditor.draw_other_objects"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "PeaPanel", 
      "3D View", 
      "", 
      [
        [
          "Pea_Panel", 
          "MENU", 
          "", 
          "Pea_Panel"
        ]
      ], 
      "PANEL", 
      "pg?pg_category=PeaTab", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Pea_Panel", 
      "3D View", 
      "", 
      [
        [
          "row?align=LEFT"
        ], 
        [
          "Name", 
          "CUSTOM", 
          "", 
          "panel(T.VIEW3D_PT_view3d_name, frame=False, header=False)"
        ], 
        [
          "My Button", 
          "CUSTOM", 
          "#MATERIAL", 
          "L.menu(\"object.material_list_menu\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "Weld", 
          "COMMAND", 
          "", 
          "bpy.ops.weld.weld(obje=\"Plane\")"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "", 
          "bpy.ops.rotate.rotate()"
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "Weld 2", 
          "COMMAND", 
          "", 
          "bpy.ops.weld.weld(obje=\"Plane.001\")"
        ], 
        [
          "Align To Gpencil", 
          "COMMAND", 
          "", 
          "bpy.ops.bear.align_to_gpencil()"
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "Bisect", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.bisect()"
        ], 
        [
          "Push Pull", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.push_pull_face()"
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "Snap Cursor To Edge Intersection", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.snap_cursor_to_edge_intersection()"
        ], 
        [
          "Draw Extrude", 
          "COMMAND", 
          "VPAINT_HLT", 
          "bpy.ops.mira.draw_extrude()"
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "My Button", 
          "COMMAND", 
          "", 
          ""
        ], 
        [
          "My Button", 
          "COMMAND", 
          "", 
          ""
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "My Button", 
          "COMMAND", 
          "", 
          ""
        ], 
        [
          "My Button", 
          "COMMAND", 
          "", 
          ""
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Vertex", 
          "CUSTOM", 
          "#VERTEXSEL", 
          "L.menu(\"VIEW3D_MT_edit_mesh_vertices\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Edge", 
          "CUSTOM", 
          "#EDGESEL", 
          "L.menu(\"VIEW3D_MT_edit_mesh_edges\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Face", 
          "CUSTOM", 
          "#FACESEL", 
          "L.menu(\"VIEW3D_MT_edit_mesh_faces\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Specials", 
          "CUSTOM", 
          "#SOLO_OFF", 
          "L.menu(\"VIEW3D_MT_edit_mesh_specials\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Looptools", 
          "CUSTOM", 
          "#CONSTRAINT", 
          "L.menu(\"VIEW3D_MT_edit_mesh_looptools\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Ktools", 
          "CUSTOM", 
          "#PLUGIN", 
          "L.menu(\"OBJECT_MT_ktools_menu\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?subrow=BEGIN"
        ], 
        [
          "Transform Orientation", 
          "PROP", 
          "NONE", 
          "bpy.context.space_data.transform_orientation"
        ], 
        [
          "Create Orientation", 
          "COMMAND", 
          "#ZOOMIN", 
          "bpy.ops.transform.create_orientation()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Align", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.align_orientation()"
        ], 
        [
          "Copy", 
          "COMMAND", 
          "", 
          "bpy.ops.view3d.copy_orientation()"
        ], 
        [
          "spacer?hsep=COLUMN"
        ], 
        [
          "Clean up", 
          "CUSTOM", 
          "#PARTICLE_DATA", 
          "L.menu(\"VIEW3D_MT_edit_mesh_clean\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row"
        ], 
        [
          "Fast Lattice", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Create Lattice", 
          "COMMAND", 
          "#MOD_LATTICE", 
          "bpy.ops.object.fast_lattice()"
        ], 
        [
          "Finished", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.fast_lattice_cleanup()"
        ], 
        [
          "row"
        ], 
        [
          "Conforming Method", 
          "PROP", 
          "", 
          "bpy.data.window_managers[\"WinMan\"].fast_lattice.method"
        ], 
        [
          "Interpolation Type", 
          "PROP", 
          "", 
          "bpy.data.window_managers[\"WinMan\"].fast_lattice.interpolation_type"
        ], 
        [
          "Accuracy", 
          "PROP", 
          "NONE", 
          "bpy.data.window_managers[\"WinMan\"].fast_lattice.accuracy"
        ], 
        [
          "row"
        ], 
        [
          "Z Equalise Edges", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.eq_edges()"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "PeaUV", 
      "3D View", 
      "", 
      [
        [
          "Pea UV", 
          "MENU", 
          "", 
          "Pea UV"
        ], 
        [
          "Zaloopok", 
          "MENU", 
          "", 
          "IMGEDIT_PT_Zaloopok"
        ], 
        [
          "Display", 
          "MENU", 
          "", 
          "IMAGE_PT_view_properties"
        ], 
        [
          "UV Stats", 
          "MENU", 
          "", 
          "uv.statspanel"
        ]
      ], 
      "PANEL", 
      "pg?pg_category=PeaUV&pg_space=IMAGE_EDITOR", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Pie Curves", 
      "Sculpt", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#SMOOTHCURVE", 
          "bpy.ops.brush.curve_preset(shape='SMOOTH')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#SPHERECURVE", 
          "bpy.ops.brush.curve_preset(shape='ROUND')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#ROOTCURVE", 
          "bpy.ops.brush.curve_preset(shape='ROOT')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#SHARPCURVE", 
          "bpy.ops.brush.curve_preset(shape='SHARP')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#LINCURVE", 
          "bpy.ops.brush.curve_preset(shape='LINE')"
        ], 
        [
          "Preset", 
          "COMMAND", 
          "#NOCURVE", 
          "bpy.ops.brush.curve_preset(shape='MAX')"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Popup Dialog Test", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Transform", 
          "COMMAND", 
          "", 
          "bpy.ops.pme.popup_panel(panel='OBJECT_PT_transform', frame=True, area='PROPERTIES')"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Pose", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Pose", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Proportional Editing Object", 
      "Object Mode", 
      "", 
      [
        [
          " Connected", 
          "COMMAND", 
          "PROP_CON", 
          "bpy.ops.proportional_edt.connected()"
        ], 
        [
          " projected ", 
          "COMMAND", 
          "SNAP_NORMAL", 
          "bpy.ops.proportional_edt.projected()"
        ], 
        [
          "Smooth", 
          "COMMAND", 
          "SMOOTHCURVE", 
          "bpy.ops.proportional_edt.smooth()"
        ], 
        [
          "Proportional Editing Objects", 
          "PROP", 
          "PROP_OFF", 
          "bpy.context.scene.tool_settings.use_proportional_edit_objects"
        ], 
        [
          " Sphere", 
          "COMMAND", 
          "SPHERECURVE", 
          "bpy.ops.proportional_edt.sphere()"
        ], 
        [
          " Root", 
          "COMMAND", 
          "ROOTCURVE", 
          "bpy.ops.proportional_edt.root()"
        ], 
        [
          " Constant", 
          "COMMAND", 
          "NOCURVE", 
          "bpy.ops.proportional_edt.constant()"
        ], 
        [
          "Proportional List", 
          "MENU", 
          "RNDCURVE", 
          "@@Proportional List"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sculpt West", 
      "Sculpt", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Detail Size", 
          "PROP", 
          "NONE", 
          "bpy.context.scene.tool_settings.sculpt.constant_detail"
        ], 
        [
          "Sample Detail Size", 
          "COMMAND", 
          "#EYEDROPPER", 
          "bpy.ops.sculpt.sample_detail_size(location=(365, 538))"
        ], 
        [
          "Update Dyntopo", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.update_dyntopo()"
        ], 
        [
          "row"
        ], 
        [
          "Dynamic Topology Toggle", 
          "COMMAND", 
          "MOD_TRIANGULATE", 
          "bpy.ops.sculpt.dynamic_topology_toggle()"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Set Orientation to Selection", 
      "Window", 
      "", 
      [
        [
          "Create Orientation", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.create_orientation(use=True, name='Orientation_TMP', overwrite=True)"
        ], 
        [
          "Set Object Mode", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.mode_set(mode='OBJECT')"
        ], 
        [
          "Transform Origins = True", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.tool_settings.use_transform_data_origin = True"
        ], 
        [
          "Transform", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.transform(mode='ALIGN', value=(0, 0, 0, 0), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False)"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.rotate(value=-3.14159, orient_axis='X', orient_type='<UNKNOWN ENUM>', orient_matrix=((0.0659635, 0.987541, 0.142868), (0.59485, -0.153875, 0.788971), (0.801125, 0.032942, -0.597589)), orient_matrix_type='<UNKNOWN ENUM>', constraint_axis=(True, False, False), mirror=True, use_proportional_edit=False, proportional_edit_falloff='SMOOTH', proportional_size=1, use_proportional_connected=False, use_proportional_projected=False, release_confirm=True)"
        ], 
        [
          "Transform Origins = False", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.tool_settings.use_transform_data_origin = False"
        ], 
        [
          "Delete Orientation", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.transform.delete_orientation()"
        ], 
        [
          "scene.type = 'LOCAL'", 
          "COMMAND", 
          "TEXT", 
          "bpy.context.scene.type = 'LOCAL'"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Shade Smooth", 
      "Window", 
      "", 
      [
        [
          "Shade Smooth", 
          "COMMAND", 
          "BLENDER", 
          "bpy.ops.object.shade_smooth()"
        ], 
        [
          "Auto Smooth = True", 
          "COMMAND", 
          "TEXT", 
          "C.object.data.use_auto_smooth = True"
        ], 
        [
          "Auto Smooth Angle = 3.1415927410125732", 
          "COMMAND", 
          "TEXT", 
          "C.object.data.auto_smooth_angle = 3.1415927410125732"
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Snap Cursor list", 
      "Mesh, Object Mode", 
      "", 
      [
        [
          "row"
        ], 
        [
          "My Button", 
          "COMMAND", 
          "", 
          ""
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=0", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Solidify Modal", 
      "3D View", 
      "", 
      [
        [
          "Add Modifier", 
          "INVOKE", 
          "", 
          "a = bpy.context.active_object.modifiers.new(\"Solidify\", \"SOLIDIFY\").name;"
        ], 
        [
          "Thickness", 
          "PROP", 
          "MOUSEMOVE;;;;", 
          "bpy.context.object.modifiers[a].thickness"
        ]
      ], 
      "MODAL", 
      "mo?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Spin Panel", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Spin Modifier", 
          "COMMAND", 
          "", 
          "loc=bpy.context.object.location; bpy.ops.object.mode_set(mode='EDIT'); bpy.ops.mesh.select_mode(type='VERT'); bpy.ops.mesh.select_all(action='INVERT'); bpy.ops.mesh.delete(type='VERT'); bpy.ops.mesh.select_all(action='TOGGLE'); bpy.ops.object.modifier_add(type='SCREW'); bpy.context.object.modifiers[\"Screw\"].use_smooth_shade = False; bpy.context.object.modifiers[\"Screw\"].use_normal_calculate = True; open_menu(\"Spin it!\")"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Spin it!", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Mode", 
          "COMMAND", 
          "#OBJECT_DATAMODE", 
          "bpy.ops.object.mode_set(mode='EDIT', toggle=True)"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Apply", 
          "COMMAND", 
          "", 
          "bpy.ops.object.modifier_apply(apply_as='DATA', modifier=\"Screw\")"
        ], 
        [
          "Remove", 
          "COMMAND", 
          "", 
          "bpy.ops.object.modifier_remove(modifier=\"Screw\")"
        ], 
        [
          "row?"
        ], 
        [
          "Steps", 
          "PROP", 
          "NONE", 
          "bpy.context.object.modifiers[\"Screw\"].steps"
        ], 
        [
          "row"
        ], 
        [
          "Angle", 
          "PROP", 
          "NONE", 
          "bpy.context.object.modifiers[\"Screw\"].angle"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Screw", 
          "PROP", 
          "NONE", 
          "bpy.context.object.modifiers[\"Screw\"].screw_offset"
        ], 
        [
          "row"
        ], 
        [
          "Smooth Shading", 
          "PROP", 
          "NONE", 
          "bpy.context.object.modifiers[\"Screw\"].use_smooth_shade"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Axis", 
          "PROP", 
          "#NONE", 
          "bpy.context.object.modifiers[\"Screw\"].axis"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Sticky Key", 
      "3D View Generic", 
      "", 
      [
        [
          "Only Render = True", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.show_only_render = True"
        ], 
        [
          "Only Render = False", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.show_only_render = False"
        ]
      ], 
      "STICKY", 
      "sk?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Texture Paint", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Texture Paint", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Material", 
      "Window", 
      "", 
      [
        [
          "Apply Material", 
          "COMMAND", 
          "", 
          "bpy.ops.object.apply_material(mat_to_assign=\"UV\")"
        ], 
        [
          "Apply Material", 
          "COMMAND", 
          "", 
          "bpy.ops.object.apply_material(mat_to_assign=\"Default\")"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Show Other All / Image", 
      "UV Editor", 
      "", 
      [
        [
          "Other UV filter = 'SAME_IMAGE'", 
          "COMMAND", 
          "NONE", 
          "C.space_data.uv_editor.other_uv_filter = 'SAME_IMAGE'"
        ], 
        [
          "Other UV filter = 'ALL'", 
          "COMMAND", 
          "NONE", 
          "C.space_data.uv_editor.other_uv_filter = 'ALL'"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV Stretch Angle/Area", 
      "UV Editor", 
      "", 
      [
        [
          "Angle", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.uv_editor.display_stretch_type = 'ANGLE'"
        ], 
        [
          "Area", 
          "COMMAND", 
          "NONE", 
          "bpy.context.space_data.uv_editor.display_stretch_type = 'AREA'"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "UV: Select Boundary Loop", 
      "Window", 
      "", 
      [
        [
          "Command 1", 
          "COMMAND", 
          "TEXT", 
          ""
        ]
      ], 
      "MACRO", 
      "m?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "VIEW3D_MT_editor_menus", 
      "Window", 
      "", 
      [
        [
          ""
        ], 
        [
          "", 
          "PROP", 
          "FREEZE", 
          "C.scene.render.use_simplify"
        ], 
        [
          ""
        ], 
        [
          "", 
          "MENU", 
          "KEYFRAME_HLT", 
          "Mesh Check Toggle"
        ], 
        [
          ""
        ], 
        [
          "Autolock Layers", 
          "PROP", 
          "", 
          "C.object.data.use_autolock_layers"
        ]
      ], 
      "RMENU", 
      "rm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "VIEW3D_MT_object_context_menu_pre", 
      "Curve", 
      "", 
      [
        [
          "Resolution U", 
          "PROP", 
          "DECORATE_ANIMATE", 
          "C.object.data.splines[0].resolution_u"
        ], 
        [
          "Auto Smooth Angle", 
          "PROP", 
          "NONE", 
          "C.object.data.auto_smooth_angle"
        ], 
        [
          "Bevel Depth", 
          "PROP", 
          "NONE", 
          "C.object.data.bevel_depth"
        ], 
        [
          "SubD Levels", 
          "PROP", 
          "NONE", 
          "C.object.modifiers[\"Subdivision\"].levels"
        ], 
        [
          "Resolution", 
          "PROP", 
          "NONE", 
          "C.object.data.resolution"
        ], 
        [
          "Threshold", 
          "PROP", 
          "NONE", 
          "C.object.data.threshold"
        ], 
        [
          "Negative", 
          "PROP", 
          "NONE", 
          "C.object.data.elements[0].use_negative"
        ]
      ], 
      "RMENU", 
      "rm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Vertex", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Add Cube", 
          "MENU", 
          "#MESH_CUBE", 
          "Align Cube"
        ], 
        [
          "Align Sphere", 
          "MENU", 
          "#SOLID", 
          "Align Sphere"
        ], 
        [
          "Align Plane", 
          "MENU", 
          "#MESH_PLANE", 
          "Align Plane"
        ], 
        [
          "Align Cylinder", 
          "MENU", 
          "#MESH_CYLINDER", 
          "Align Cylinder"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Vertex", 
          "CUSTOM", 
          "#FACESEL", 
          "L.menu(\"VIEW3D_MT_edit_mesh_vertices\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row?align=RIGHT"
        ], 
        [
          "Curve Linear", 
          "COMMAND", 
          "#IPO_EASE_IN_OUT", 
          "bpy.ops.mesh.looptools_curve(boundaries=True, influence=100.0, interpolation='cubic', lock_x=False, lock_y=False, lock_z=False, regular=False, restriction='none')"
        ], 
        [
          "Curve", 
          "COMMAND", 
          "#IPO_CONSTANT", 
          "bpy.ops.mesh.looptools_curve(boundaries=True, influence=100, interpolation='linear', lock_x=False, lock_y=False, lock_z=False, regular=False, restriction='none')"
        ], 
        [
          "Mira CStretch 3", 
          "MENU", 
          "#IPO_SINE", 
          "Mira CStretch 1"
        ], 
        [
          "Mira CStretch 3", 
          "MENU", 
          "#IPO_CUBIC", 
          "Mira CStretch 3"
        ], 
        [
          "Mira CStretch 5", 
          "MENU", 
          "#IPO_QUINT", 
          "Mira CStretch 5"
        ], 
        [
          "Create Lattice", 
          "COMMAND", 
          "#MOD_LATTICE", 
          "bpy.ops.object.fast_lattice()"
        ], 
        [
          "AutoMerge", 
          "PROP", 
          "#AUTOMERGE_OFF", 
          "bpy.context.scene.tool_settings.use_mesh_automerge"
        ], 
        [
          "X Mirror", 
          "PROP", 
          "", 
          "C.object.data.use_mirror_x"
        ], 
        [
          "Topology Mirror", 
          "PROP", 
          "#LATTICE_DATA", 
          "C.object.data.use_mirror_topology"
        ], 
        [
          "row?"
        ], 
        [
          "Flip Normals", 
          "COMMAND", 
          "FILE_REFRESH", 
          "obj_mode = C.active_object.mode; O.object.mode_set(mode='EDIT'); O.mesh.flip_normals(); O.object.mode_set(mode=obj_mode)"
        ], 
        [
          "Make Normals Consistent", 
          "COMMAND", 
          "", 
          "bpy.ops.mesh.normals_make_consistent(inside=False)"
        ], 
        [
          "Weak Normals", 
          "COMMAND", 
          "MOD_NORMALEDIT", 
          "bpy.ops.mesh.yavne_manage_face_normal_influence(action='SET', type='WEAK', update=True)"
        ], 
        [
          "row?align=RIGHT"
        ], 
        [
          "All", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.apply_all_modifiers()"
        ], 
        [
          "All", 
          "COMMAND", 
          "#VISIBLE_IPO_ON", 
          "bpy.ops.object.toggle_apply_modifiers_view()"
        ], 
        [
          "Add Modifier", 
          "COMMAND", 
          "MODIFIER", 
          "bpy.ops.object.modifier_add()"
        ], 
        [
          "All", 
          "COMMAND", 
          "#X", 
          "bpy.ops.object.delete_all_modifiers()"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Scene Popup", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Scene Popup"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Subsurf", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Subsurf\")"
        ], 
        [
          "On Cage", 
          "PROP", 
          "#MESH_DATA", 
          "bpy.context.object.modifiers[\"Subsurf\"].show_on_cage"
        ], 
        [
          "Subsurf", 
          "CUSTOM", 
          "MOD_SUBSURF", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SUBSURF']; m =  mods and mods[0]; L.prop(m, \"levels\", \"Subdivisions\") if m  else operator(L, \"object.modifier_add\", \"Add Subsurf\", 'ZOOMIN', type='SUBSURF')"
        ], 
        [
          "Delete Subsurf", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SUBSURF']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SUBSURF')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "My Button", 
          "COMMAND", 
          "#RIGHTARROW_THIN", 
          ""
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Mirror", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Mirror\")"
        ], 
        [
          "AutoMirror_axis", 
          "CUSTOM", 
          "#MANIPUL", 
          "L.prop_menu_enum(bpy.context.scene, 'AutoMirror_axis', text, icon=icon)"
        ], 
        [
          "Automirror", 
          "COMMAND", 
          "", 
          "bpy.ops.object.automirror(); bpy.ops.object.mode_set()"
        ], 
        [
          "Delete Mirror", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'MIRROR']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='MIRROR')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Mirror Options", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Mirror Options"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Bend", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"SimpleDeform\")"
        ], 
        [
          "Set Orientation", 
          "COMMAND", 
          "#SNAP_SURFACE", 
          "bpy.ops.orientation.create()"
        ], 
        [
          "Simple Bend", 
          "CUSTOM", 
          "MOD_SIMPLEDEFORM", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SIMPLE_DEFORM']; m = mods and mods[0]; L.prop(m, \"angle\", \"angle\") if m else operator(L, \"wm.pme_user_command_exec\", \"Add Bend\", 'ZOOMIN', cmd=\"execute_script('scripts/simple_bend.py')\")"
        ], 
        [
          "Delete Bend", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SIMPLE_DEFORM']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SIMPLE_DEFORM')"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Bend Options", 
          "MENU", 
          "#TRIA_RIGHT", 
          "Bend Options"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "points_number", 
          "PROP", 
          "NONE", 
          "C.scene.mi_cur_stretch_settings.points_number"
        ]
      ], 
      "DIALOG", 
      "pd?pd_title=False", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Vertex Paint", 
      "Window", 
      "", 
      [
        [
          "row"
        ], 
        [
          "Vertex Paint", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Vertex1", 
      "Window", 
      "", 
      [
        [
          "row?align=RIGHT"
        ], 
        [
          "CStretch", 
          "COMMAND", 
          "#STYLUS_PRESSURE", 
          "bpy.ops.mira.curve_stretch()"
        ], 
        [
          "Create Lattice", 
          "COMMAND", 
          "#MOD_LATTICE", 
          "bpy.ops.object.fast_lattice()"
        ], 
        [
          "Flip Normals", 
          "COMMAND", 
          "#FILE_REFRESH", 
          "obj_mode = C.active_object.mode; O.object.mode_set(mode='EDIT'); O.mesh.flip_normals(); O.object.mode_set(mode=obj_mode)"
        ], 
        [
          "Unify Normals", 
          "COMMAND", 
          "#MESH_CUBE", 
          "obj_mode = C.active_object.mode; O.object.mode_set(mode='EDIT'); O.mesh.normals_make_consistent(inside=False); O.object.mode_set(mode=obj_mode)"
        ], 
        [
          "Occlude Geometry", 
          "PROP", 
          "#ORTHO", 
          "bpy.context.space_data.use_occlude_geometry"
        ], 
        [
          "AutoMerge", 
          "PROP", 
          "#AUTOMERGE_OFF", 
          "bpy.context.scene.tool_settings.use_mesh_automerge"
        ], 
        [
          "spacer?hsep=SPACER"
        ], 
        [
          "Vertices", 
          "CUSTOM", 
          "#VERTEXSEL", 
          "L.menu(\"VIEW3D_MT_edit_mesh_vertices\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "row"
        ], 
        [
          "All", 
          "COMMAND", 
          "FILE_TICK", 
          "bpy.ops.object.apply_all_modifiers()"
        ], 
        [
          "All", 
          "COMMAND", 
          "X", 
          "bpy.ops.object.delete_all_modifiers()"
        ], 
        [
          "All", 
          "COMMAND", 
          "VISIBLE_IPO_ON", 
          "bpy.ops.object.toggle_apply_modifiers_view()"
        ], 
        [
          "row"
        ], 
        [
          "Apply Subsurf", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Subsurf\")"
        ], 
        [
          "On Cage", 
          "PROP", 
          "#MESH_DATA", 
          "bpy.context.object.modifiers[\"Subsurf\"].show_on_cage"
        ], 
        [
          "Subsurf", 
          "CUSTOM", 
          "MOD_SUBSURF", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SUBSURF']; m =  mods and mods[0]; L.prop(m, \"levels\", \"Subdivisions\") if m  else operator(L, \"object.modifier_add\", \"Add Subsurf\", 'ZOOMIN', type='SUBSURF')"
        ], 
        [
          "Delete Subsurf", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SUBSURF']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SUBSURF')"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Mirror", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"Mirror\")"
        ], 
        [
          "AutoMirror_axis", 
          "CUSTOM", 
          "#MANIPUL", 
          "L.prop_menu_enum(bpy.context.scene, 'AutoMirror_axis', text, icon=icon)"
        ], 
        [
          "AutoMirror_orientation", 
          "CUSTOM", 
          "#ARROW_LEFTRIGHT", 
          "L.prop_menu_enum(bpy.context.scene, 'AutoMirror_orientation', text, icon=icon)"
        ], 
        [
          "Automirror", 
          "COMMAND", 
          "", 
          "bpy.ops.object.automirror(); bpy.ops.object.mode_set()"
        ], 
        [
          "Delete Mirror", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'MIRROR']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='MIRROR')"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Apply Bend", 
          "COMMAND", 
          "#FILE_TICK", 
          "bpy.ops.object.modifier_apply(modifier=\"simple_deform\")"
        ], 
        [
          "Rotate", 
          "COMMAND", 
          "#TRIA_RIGHT", 
          "bpy.ops.rotate.x(axis=(4, 1, 0))"
        ], 
        [
          "Set Orientation", 
          "COMMAND", 
          "#SNAP_SURFACE", 
          "bpy.ops.orientation.create()"
        ], 
        [
          "Simple Bend", 
          "CUSTOM", 
          "MOD_SUBSURF", 
          "mods = [m for m in C.active_object.modifiers if m.type == 'SIMPLE_DEFORM']; m =  mods and mods[0]; L.prop(m, \"angle\", \"angle\") if m  else operator(L, \"object.modifier_add\", \"Add Bend\", 'ZOOMIN', type='SIMPLE_DEFORM')"
        ], 
        [
          "Delete Bend", 
          "COMMAND", 
          "#X", 
          "mods = [mod for mod in C.active_object.modifiers if mod.type == 'SIMPLE_DEFORM']; bpy.ops.object.modifier_remove(modifier=mods[0].name) if mods else bpy.ops.object.modifier_add(type='SIMPLE_DEFORM')"
        ], 
        [
          "row?vspacer=NONE"
        ], 
        [
          "Spin Modifier", 
          "COMMAND", 
          "", 
          "loc=bpy.context.object.location; bpy.ops.object.mode_set(mode='EDIT'); bpy.ops.mesh.select_mode(type='VERT'); bpy.ops.mesh.select_all(action='INVERT'); bpy.ops.mesh.delete(type='VERT'); bpy.ops.mesh.select_all(action='TOGGLE'); bpy.ops.object.modifier_add(type='SCREW'); bpy.context.object.modifiers[\"Screw\"].use_smooth_shade = False; bpy.context.object.modifiers[\"Screw\"].use_normal_calculate = True; open_menu(\"Spin it!\")"
        ], 
        [
          "row"
        ], 
        [
          "Looptools", 
          "CUSTOM", 
          "CONSTRAINT", 
          "L.menu(\"VIEW3D_MT_edit_mesh_looptools\", text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Specials", 
          "CUSTOM", 
          "SOLO_OFF", 
          "L.menu(\"VIEW3D_MT_edit_mesh_specials\", text, icon=icon, icon_value=icon_value)"
        ]
      ], 
      "DIALOG", 
      "pd?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "WSphere Tris", 
      "3D View", 
      "", 
      [
        [
          "Tris = True", 
          "COMMAND", 
          "NONE", 
          "C.object.data.WSphere.tris = True"
        ], 
        [
          "Tris = False", 
          "COMMAND", 
          "NONE", 
          "C.object.data.WSphere.tris = False"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Weight Paint", 
      "Window", 
      "", 
      [
        [
          "row?"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Auto-Normalize", 
          "PROP", 
          "NONE", 
          "C.scene.tool_settings.use_auto_normalize"
        ], 
        [
          "Multi-Paint", 
          "PROP", 
          "NONE", 
          "C.scene.tool_settings.use_multipaint"
        ], 
        [
          "row"
        ], 
        [
          "Normalise:", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "All Vertex Groups", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_normalize_all()"
        ], 
        [
          "Vertex Group", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_normalize()"
        ], 
        [
          "row?"
        ], 
        [
          "Vertex Group:", 
          "CUSTOM", 
          "", 
          "L.label(text, icon=icon, icon_value=icon_value)"
        ], 
        [
          "Mirror", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_mirror()"
        ], 
        [
          "Invert", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_invert()"
        ], 
        [
          "Clean", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_clean()"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Quantize Vertex Weights", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_quantize()"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Vertex Group Levels", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_levels()"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Smooth Vertex Weights", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_smooth()"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Limit Number of Weights per Vertex", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_limit_total()"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Fix Vertex Group Deform", 
          "COMMAND", 
          "", 
          "bpy.ops.object.vertex_group_fix()"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Weight Gradient", 
          "COMMAND", 
          "", 
          "bpy.ops.paint.weight_gradient()"
        ], 
        [
          "row?"
        ], 
        [
          "spacer?hsep=ALIGNER"
        ], 
        [
          "Transfer Weights", 
          "COMMAND", 
          "", 
          "bpy.ops.object.data_transfer(use_reverse_transfer=True, data_type='VGROUP_WEIGHTS')"
        ]
      ], 
      "DIALOG", 
      "pd?pd_panel=1", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "WindowTypeSub 1", 
      "Window", 
      "", 
      [
        [
          "Text Editor", 
          "COMMAND", 
          "TEXT", 
          "bpy.ops.object.view_menu(variable=\"TEXT_EDITOR\")"
        ], 
        [
          "Properties", 
          "COMMAND", 
          "BUTS", 
          "bpy.ops.object.view_menu(variable=\"PROPERTIES\")"
        ], 
        [
          "Console", 
          "COMMAND", 
          "CONSOLE", 
          "bpy.ops.object.view_menu(variable=\"CONSOLE\")"
        ], 
        [
          "Outliner", 
          "COMMAND", 
          "OOPS", 
          "bpy.ops.object.view_menu(variable=\"OUTLINER\")"
        ], 
        [
          "File Browser", 
          "COMMAND", 
          "FILESEL", 
          "bpy.ops.object.view_menu(variable=\"FILE_BROWSER\")"
        ], 
        [
          "Info", 
          "COMMAND", 
          "INFO", 
          "bpy.ops.object.view_menu(variable=\"INFO\")"
        ], 
        [
          "User Preferences", 
          "COMMAND", 
          "SCRIPTWIN", 
          "bpy.ops.object.view_menu(variable=\"USER_PREFERENCES\")"
        ], 
        [
          "", 
          "COMMAND", 
          "", 
          ""
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "WindowTypeSub 2", 
      "Window", 
      "", 
      [
        [
          "Node Editor", 
          "COMMAND", 
          "", 
          "bpy.ops.object.view_menu(variable=\"NODE_EDITOR\")"
        ], 
        [
          "Image Editor", 
          "COMMAND", 
          "", 
          "bpy.ops.object.view_menu(variable=\"IMAGE_EDITOR\")"
        ], 
        [
          "Join Area", 
          "COMMAND", 
          "", 
          "bpy.ops.area.joinarea()"
        ], 
        [
          "View 3D", 
          "COMMAND", 
          "", 
          "bpy.ops.object.view_menu(variable=\"VIEW_3D\")"
        ], 
        [
          ""
        ], 
        [
          ""
        ], 
        [
          "Split Vertical", 
          "COMMAND", 
          "", 
          "bpy.ops.split.vertical()"
        ], 
        [
          "Split Horizontal", 
          "COMMAND", 
          "", 
          "bpy.ops.split.horizontal()"
        ]
      ], 
      "PMENU", 
      "pm?", 
      "PRESS", 
      "", 
      ""
    ], 
    [
      "Wsphere Smooth", 
      "Window", 
      "", 
      [
        [
          "Smooth = True", 
          "COMMAND", 
          "NONE", 
          "C.object.data.WSphere.smoothed = True"
        ], 
        [
          "Smooth = False", 
          "COMMAND", 
          "NONE", 
          "C.object.data.WSphere.smoothed = False"
        ]
      ], 
      "SCRIPT", 
      "s?", 
      "PRESS", 
      "", 
      ""
    ]
  ]
}